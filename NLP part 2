{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"!git clone https://github.com/Franck-Dernoncourt/pubmed-rct.git\n!ls pubmed-rct","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:44.892167Z","iopub.execute_input":"2024-08-07T06:38:44.892574Z","iopub.status.idle":"2024-08-07T06:38:47.251586Z","shell.execute_reply.started":"2024-08-07T06:38:44.892539Z","shell.execute_reply":"2024-08-07T06:38:47.250242Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"fatal: destination path 'pubmed-rct' already exists and is not an empty directory.\nPubMed_200k_RCT\nPubMed_200k_RCT_numbers_replaced_with_at_sign\nPubMed_20k_RCT\nPubMed_20k_RCT_numbers_replaced_with_at_sign\nREADME.md\n","output_type":"stream"}]},{"cell_type":"code","source":"# Check what files are in the PubMed_20K dataset \n!ls pubmed-rct/PubMed_20k_RCT_numbers_replaced_with_at_sign","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:54.755876Z","iopub.execute_input":"2024-08-07T06:38:54.756374Z","iopub.status.idle":"2024-08-07T06:38:55.946283Z","shell.execute_reply.started":"2024-08-07T06:38:54.756335Z","shell.execute_reply":"2024-08-07T06:38:55.944881Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"dev.txt  test.txt  train.txt\n","output_type":"stream"}]},{"cell_type":"code","source":"\n# Start by using the 20k dataset\ndata_dir = \"pubmed-rct/PubMed_20k_RCT_numbers_replaced_with_at_sign/\"","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:55.949305Z","iopub.execute_input":"2024-08-07T06:38:55.950588Z","iopub.status.idle":"2024-08-07T06:38:55.956324Z","shell.execute_reply.started":"2024-08-07T06:38:55.950540Z","shell.execute_reply":"2024-08-07T06:38:55.954824Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"code","source":"import os\nfile_names = [data_dir + i for i in os.listdir(data_dir)]","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:55.957892Z","iopub.execute_input":"2024-08-07T06:38:55.958378Z","iopub.status.idle":"2024-08-07T06:38:55.967643Z","shell.execute_reply.started":"2024-08-07T06:38:55.958347Z","shell.execute_reply":"2024-08-07T06:38:55.966403Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"markdown","source":"# **Preprocessing Data**","metadata":{}},{"cell_type":"code","source":"file_names","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:55.969102Z","iopub.execute_input":"2024-08-07T06:38:55.969594Z","iopub.status.idle":"2024-08-07T06:38:55.982211Z","shell.execute_reply.started":"2024-08-07T06:38:55.969557Z","shell.execute_reply":"2024-08-07T06:38:55.980975Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"['pubmed-rct/PubMed_20k_RCT_numbers_replaced_with_at_sign/test.txt',\n 'pubmed-rct/PubMed_20k_RCT_numbers_replaced_with_at_sign/dev.txt',\n 'pubmed-rct/PubMed_20k_RCT_numbers_replaced_with_at_sign/train.txt']"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def lines(dir):\n    file = open(dir,\"r\")\n    data = file.readlines()\n    return data","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:55.986430Z","iopub.execute_input":"2024-08-07T06:38:55.986903Z","iopub.status.idle":"2024-08-07T06:38:55.993525Z","shell.execute_reply.started":"2024-08-07T06:38:55.986872Z","shell.execute_reply":"2024-08-07T06:38:55.992213Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"code","source":"train_data = lines('pubmed-rct/PubMed_20k_RCT_numbers_replaced_with_at_sign/train.txt')\nval_data = lines('pubmed-rct/PubMed_20k_RCT_numbers_replaced_with_at_sign/dev.txt')\ntest_data = lines('pubmed-rct/PubMed_20k_RCT_numbers_replaced_with_at_sign/test.txt')\ntrain_data[:10]","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:55.994918Z","iopub.execute_input":"2024-08-07T06:38:55.995707Z","iopub.status.idle":"2024-08-07T06:38:56.122666Z","shell.execute_reply.started":"2024-08-07T06:38:55.995675Z","shell.execute_reply":"2024-08-07T06:38:56.121410Z"},"trusted":true},"execution_count":8,"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"['###24293578\\n',\n 'OBJECTIVE\\tTo investigate the efficacy of @ weeks of daily low-dose oral prednisolone in improving pain , mobility , and systemic low-grade inflammation in the short term and whether the effect would be sustained at @ weeks in older adults with moderate to severe knee osteoarthritis ( OA ) .\\n',\n 'METHODS\\tA total of @ patients with primary knee OA were randomized @:@ ; @ received @ mg/day of prednisolone and @ received placebo for @ weeks .\\n',\n 'METHODS\\tOutcome measures included pain reduction and improvement in function scores and systemic inflammation markers .\\n',\n 'METHODS\\tPain was assessed using the visual analog pain scale ( @-@ mm ) .\\n',\n 'METHODS\\tSecondary outcome measures included the Western Ontario and McMaster Universities Osteoarthritis Index scores , patient global assessment ( PGA ) of the severity of knee OA , and @-min walk distance ( @MWD ) .\\n',\n 'METHODS\\tSerum levels of interleukin @ ( IL-@ ) , IL-@ , tumor necrosis factor ( TNF ) - , and high-sensitivity C-reactive protein ( hsCRP ) were measured .\\n',\n 'RESULTS\\tThere was a clinically relevant reduction in the intervention group compared to the placebo group for knee pain , physical function , PGA , and @MWD at @ weeks .\\n',\n 'RESULTS\\tThe mean difference between treatment arms ( @ % CI ) was @ ( @-@ @ ) , p < @ ; @ ( @-@ @ ) , p < @ ; @ ( @-@ @ ) , p < @ ; and @ ( @-@ @ ) , p < @ , respectively .\\n',\n 'RESULTS\\tFurther , there was a clinically relevant reduction in the serum levels of IL-@ , IL-@ , TNF - , and hsCRP at @ weeks in the intervention group when compared to the placebo group .\\n']"},"metadata":{}}]},{"cell_type":"code","source":"val_data[1], test_data[1]","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:56.124205Z","iopub.execute_input":"2024-08-07T06:38:56.124694Z","iopub.status.idle":"2024-08-07T06:38:56.132777Z","shell.execute_reply.started":"2024-08-07T06:38:56.124642Z","shell.execute_reply":"2024-08-07T06:38:56.131559Z"},"trusted":true},"execution_count":9,"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"('BACKGROUND\\tIgE sensitization to Aspergillus fumigatus and a positive sputum fungal culture result are common in patients with refractory asthma .\\n',\n 'BACKGROUND\\tThis study analyzed liver function abnormalities in heart failure patients admitted with severe acute decompensated heart failure ( ADHF ) .\\n')"},"metadata":{}}]},{"cell_type":"code","source":"test_data[:10]","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:56.134603Z","iopub.execute_input":"2024-08-07T06:38:56.135190Z","iopub.status.idle":"2024-08-07T06:38:56.145464Z","shell.execute_reply.started":"2024-08-07T06:38:56.135158Z","shell.execute_reply":"2024-08-07T06:38:56.144164Z"},"trusted":true},"execution_count":10,"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"['###24845963\\n',\n 'BACKGROUND\\tThis study analyzed liver function abnormalities in heart failure patients admitted with severe acute decompensated heart failure ( ADHF ) .\\n',\n 'RESULTS\\tA post hoc analysis was conducted with the use of data from the Evaluation Study of Congestive Heart Failure and Pulmonary Artery Catheterization Effectiveness ( ESCAPE ) .\\n',\n 'RESULTS\\tLiver function tests ( LFTs ) were measured at @ time points from baseline , at discharge , and up to @ months follow-up .\\n',\n 'RESULTS\\tSurvival analyses were used to assess the association between admission Model of End-Stage Liver Disease Excluding International Normalized Ratio ( MELD-XI ) scores and patient outcome.There was a high prevalence of abnormal baseline ( admission ) LFTs ( albumin @ % , aspartate transaminase @ % , alanine transaminase @ % , and total bilirubin @ % ) .\\n',\n \"RESULTS\\tThe percentage of patients with abnormal LFTs decreased significantly from baseline to @-months ' follow-up .\\n\",\n 'RESULTS\\tWhen mean hemodynamic profiles were compared in patients with abnormal versus normal LFTs , elevated total bilirubin was associated with a significantly lower cardiac index ( @ vs @ ; P < @ ) and higher central venous pressure ( @ vs @ ; P = @ ) .\\n',\n 'RESULTS\\tMultivariable analyses revealed that patients with elevated MELD-XI scores ( @ ) had a @-fold ( hazard ratio@ @ , @ % confidence interval @-@ @ ) increased risk of death , rehospitalization , or transplantation after adjusting for baseline LFTs , age , sex , race , body mass index , diabetes , and systolic blood pressure .\\n',\n 'CONCLUSIONS\\tAbnormal LFTs are common in the ADHF population and are a dynamic marker of an impaired hemodynamic state .\\n',\n 'CONCLUSIONS\\tElevated MELD-XI scores are associated with poor outcomes among patients admitted with ADHF .\\n']"},"metadata":{}}]},{"cell_type":"code","source":"def preprocessing_text(filename):\n    \n    input_lines = lines(filename)\n    abstract_lines = \" \"\n    abstract_samples = []\n    \n    for line in input_lines:\n        if line.startswith('###'):\n            abstract_id = line\n            abstract_lines = \"\"\n        elif line.isspace():\n            abstract_line_split = abstract_lines.splitlines()\n        \n            for abstract_line_number,abstract_line in enumerate (abstract_line_split):\n                line_data = {}\n                target_text_split = abstract_line.split('\\t')\n                line_data['target'] = target_text_split[0]\n                line_data['text'] = target_text_split[1]\n                line_data['line_number'] = abstract_line_number\n                line_data['total_lines'] = len(abstract_line_split)-1\n                abstract_samples.append(line_data)\n        else:\n            abstract_lines += line\n    return abstract_samples\n            \n            \n            \n    ","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:56.147075Z","iopub.execute_input":"2024-08-07T06:38:56.147483Z","iopub.status.idle":"2024-08-07T06:38:56.166814Z","shell.execute_reply.started":"2024-08-07T06:38:56.147451Z","shell.execute_reply":"2024-08-07T06:38:56.165508Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"code","source":"train_samples = preprocessing_text(data_dir + \"train.txt\")\nval_samples = preprocessing_text(data_dir + \"dev.txt\") # dev is another name for validation set\ntest_samples = preprocessing_text(data_dir + \"test.txt\")\nlen(train_samples), len(val_samples), len(test_samples)","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:56.168610Z","iopub.execute_input":"2024-08-07T06:38:56.169087Z","iopub.status.idle":"2024-08-07T06:38:56.993187Z","shell.execute_reply.started":"2024-08-07T06:38:56.169044Z","shell.execute_reply":"2024-08-07T06:38:56.991758Z"},"trusted":true},"execution_count":12,"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"(180040, 30212, 30135)"},"metadata":{}}]},{"cell_type":"code","source":"train_samples[:10]","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:56.995270Z","iopub.execute_input":"2024-08-07T06:38:56.995811Z","iopub.status.idle":"2024-08-07T06:38:57.006592Z","shell.execute_reply.started":"2024-08-07T06:38:56.995767Z","shell.execute_reply":"2024-08-07T06:38:57.005171Z"},"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"[{'target': 'OBJECTIVE',\n  'text': 'To investigate the efficacy of @ weeks of daily low-dose oral prednisolone in improving pain , mobility , and systemic low-grade inflammation in the short term and whether the effect would be sustained at @ weeks in older adults with moderate to severe knee osteoarthritis ( OA ) .',\n  'line_number': 0,\n  'total_lines': 11},\n {'target': 'METHODS',\n  'text': 'A total of @ patients with primary knee OA were randomized @:@ ; @ received @ mg/day of prednisolone and @ received placebo for @ weeks .',\n  'line_number': 1,\n  'total_lines': 11},\n {'target': 'METHODS',\n  'text': 'Outcome measures included pain reduction and improvement in function scores and systemic inflammation markers .',\n  'line_number': 2,\n  'total_lines': 11},\n {'target': 'METHODS',\n  'text': 'Pain was assessed using the visual analog pain scale ( @-@ mm ) .',\n  'line_number': 3,\n  'total_lines': 11},\n {'target': 'METHODS',\n  'text': 'Secondary outcome measures included the Western Ontario and McMaster Universities Osteoarthritis Index scores , patient global assessment ( PGA ) of the severity of knee OA , and @-min walk distance ( @MWD ) .',\n  'line_number': 4,\n  'total_lines': 11},\n {'target': 'METHODS',\n  'text': 'Serum levels of interleukin @ ( IL-@ ) , IL-@ , tumor necrosis factor ( TNF ) - , and high-sensitivity C-reactive protein ( hsCRP ) were measured .',\n  'line_number': 5,\n  'total_lines': 11},\n {'target': 'RESULTS',\n  'text': 'There was a clinically relevant reduction in the intervention group compared to the placebo group for knee pain , physical function , PGA , and @MWD at @ weeks .',\n  'line_number': 6,\n  'total_lines': 11},\n {'target': 'RESULTS',\n  'text': 'The mean difference between treatment arms ( @ % CI ) was @ ( @-@ @ ) , p < @ ; @ ( @-@ @ ) , p < @ ; @ ( @-@ @ ) , p < @ ; and @ ( @-@ @ ) , p < @ , respectively .',\n  'line_number': 7,\n  'total_lines': 11},\n {'target': 'RESULTS',\n  'text': 'Further , there was a clinically relevant reduction in the serum levels of IL-@ , IL-@ , TNF - , and hsCRP at @ weeks in the intervention group when compared to the placebo group .',\n  'line_number': 8,\n  'total_lines': 11},\n {'target': 'RESULTS',\n  'text': 'These differences remained significant at @ weeks .',\n  'line_number': 9,\n  'total_lines': 11}]"},"metadata":{}}]},{"cell_type":"code","source":"import pandas as pd\ntrain_df = pd.DataFrame(train_samples)\ntest_df = pd.DataFrame(test_samples)\nval_df = pd.DataFrame(val_samples)","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:57.008241Z","iopub.execute_input":"2024-08-07T06:38:57.008687Z","iopub.status.idle":"2024-08-07T06:38:57.961442Z","shell.execute_reply.started":"2024-08-07T06:38:57.008649Z","shell.execute_reply":"2024-08-07T06:38:57.960409Z"},"trusted":true},"execution_count":14,"outputs":[]},{"cell_type":"code","source":"train_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:57.962762Z","iopub.execute_input":"2024-08-07T06:38:57.963393Z","iopub.status.idle":"2024-08-07T06:38:57.986991Z","shell.execute_reply.started":"2024-08-07T06:38:57.963349Z","shell.execute_reply":"2024-08-07T06:38:57.985993Z"},"trusted":true},"execution_count":15,"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"      target                                               text  line_number  \\\n0  OBJECTIVE  To investigate the efficacy of @ weeks of dail...            0   \n1    METHODS  A total of @ patients with primary knee OA wer...            1   \n2    METHODS  Outcome measures included pain reduction and i...            2   \n3    METHODS  Pain was assessed using the visual analog pain...            3   \n4    METHODS  Secondary outcome measures included the Wester...            4   \n\n   total_lines  \n0           11  \n1           11  \n2           11  \n3           11  \n4           11  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>target</th>\n      <th>text</th>\n      <th>line_number</th>\n      <th>total_lines</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>OBJECTIVE</td>\n      <td>To investigate the efficacy of @ weeks of dail...</td>\n      <td>0</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>METHODS</td>\n      <td>A total of @ patients with primary knee OA wer...</td>\n      <td>1</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>METHODS</td>\n      <td>Outcome measures included pain reduction and i...</td>\n      <td>2</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>METHODS</td>\n      <td>Pain was assessed using the visual analog pain...</td>\n      <td>3</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>METHODS</td>\n      <td>Secondary outcome measures included the Wester...</td>\n      <td>4</td>\n      <td>11</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"train_df.total_lines.plot.hist()","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:57.993768Z","iopub.execute_input":"2024-08-07T06:38:57.994138Z","iopub.status.idle":"2024-08-07T06:38:58.359534Z","shell.execute_reply.started":"2024-08-07T06:38:57.994110Z","shell.execute_reply":"2024-08-07T06:38:58.358265Z"},"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"<Axes: ylabel='Frequency'>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"train_sentences = train_df['text'].tolist()\ntest_sentences = test_df['text'].tolist()\nval_sentences = val_df['text'].tolist()","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:58.361008Z","iopub.execute_input":"2024-08-07T06:38:58.361407Z","iopub.status.idle":"2024-08-07T06:38:58.375569Z","shell.execute_reply.started":"2024-08-07T06:38:58.361375Z","shell.execute_reply":"2024-08-07T06:38:58.374380Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"code","source":"train_labels = train_df['target'].to_numpy()\ntest_labels = test_df['target'].to_numpy()\nval_labels = val_df['target'].to_numpy()","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:58.376955Z","iopub.execute_input":"2024-08-07T06:38:58.377368Z","iopub.status.idle":"2024-08-07T06:38:58.387681Z","shell.execute_reply.started":"2024-08-07T06:38:58.377338Z","shell.execute_reply":"2024-08-07T06:38:58.386243Z"},"trusted":true},"execution_count":18,"outputs":[]},{"cell_type":"code","source":"train_labels[:10]","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:58.389424Z","iopub.execute_input":"2024-08-07T06:38:58.389862Z","iopub.status.idle":"2024-08-07T06:38:58.401628Z","shell.execute_reply.started":"2024-08-07T06:38:58.389827Z","shell.execute_reply":"2024-08-07T06:38:58.400476Z"},"trusted":true},"execution_count":19,"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"array(['OBJECTIVE', 'METHODS', 'METHODS', 'METHODS', 'METHODS', 'METHODS',\n       'RESULTS', 'RESULTS', 'RESULTS', 'RESULTS'], dtype=object)"},"metadata":{}}]},{"cell_type":"code","source":"train_sentences[:10]","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:58.403131Z","iopub.execute_input":"2024-08-07T06:38:58.403592Z","iopub.status.idle":"2024-08-07T06:38:58.415076Z","shell.execute_reply.started":"2024-08-07T06:38:58.403562Z","shell.execute_reply":"2024-08-07T06:38:58.413919Z"},"trusted":true},"execution_count":20,"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"['To investigate the efficacy of @ weeks of daily low-dose oral prednisolone in improving pain , mobility , and systemic low-grade inflammation in the short term and whether the effect would be sustained at @ weeks in older adults with moderate to severe knee osteoarthritis ( OA ) .',\n 'A total of @ patients with primary knee OA were randomized @:@ ; @ received @ mg/day of prednisolone and @ received placebo for @ weeks .',\n 'Outcome measures included pain reduction and improvement in function scores and systemic inflammation markers .',\n 'Pain was assessed using the visual analog pain scale ( @-@ mm ) .',\n 'Secondary outcome measures included the Western Ontario and McMaster Universities Osteoarthritis Index scores , patient global assessment ( PGA ) of the severity of knee OA , and @-min walk distance ( @MWD ) .',\n 'Serum levels of interleukin @ ( IL-@ ) , IL-@ , tumor necrosis factor ( TNF ) - , and high-sensitivity C-reactive protein ( hsCRP ) were measured .',\n 'There was a clinically relevant reduction in the intervention group compared to the placebo group for knee pain , physical function , PGA , and @MWD at @ weeks .',\n 'The mean difference between treatment arms ( @ % CI ) was @ ( @-@ @ ) , p < @ ; @ ( @-@ @ ) , p < @ ; @ ( @-@ @ ) , p < @ ; and @ ( @-@ @ ) , p < @ , respectively .',\n 'Further , there was a clinically relevant reduction in the serum levels of IL-@ , IL-@ , TNF - , and hsCRP at @ weeks in the intervention group when compared to the placebo group .',\n 'These differences remained significant at @ weeks .']"},"metadata":{}}]},{"cell_type":"markdown","source":"# **Make numerical Labels**","metadata":{}},{"cell_type":"code","source":"from sklearn.preprocessing import OneHotEncoder\nencoder = OneHotEncoder(sparse = False)\n\ntrain_labels_onehot = encoder.fit_transform(train_labels.reshape(-1,1))\ntest_labels_onehot = encoder.fit_transform(test_labels.reshape(-1,1))\nval_labels_onehot = encoder.fit_transform(val_labels.reshape(-1,1))","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:58.416535Z","iopub.execute_input":"2024-08-07T06:38:58.416915Z","iopub.status.idle":"2024-08-07T06:38:59.094850Z","shell.execute_reply.started":"2024-08-07T06:38:58.416886Z","shell.execute_reply":"2024-08-07T06:38:59.093548Z"},"trusted":true},"execution_count":21,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/preprocessing/_encoders.py:868: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/preprocessing/_encoders.py:868: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/preprocessing/_encoders.py:868: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n","output_type":"stream"}]},{"cell_type":"code","source":"train_labels_onehot[:1]","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:59.096501Z","iopub.execute_input":"2024-08-07T06:38:59.096956Z","iopub.status.idle":"2024-08-07T06:38:59.105653Z","shell.execute_reply.started":"2024-08-07T06:38:59.096904Z","shell.execute_reply":"2024-08-07T06:38:59.103978Z"},"trusted":true},"execution_count":22,"outputs":[{"execution_count":22,"output_type":"execute_result","data":{"text/plain":"array([[0., 0., 0., 1., 0.]])"},"metadata":{}}]},{"cell_type":"markdown","source":"# **Labeled Encoding**","metadata":{}},{"cell_type":"code","source":"from sklearn.preprocessing import LabelEncoder\nlabelenc = LabelEncoder()","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:59.107022Z","iopub.execute_input":"2024-08-07T06:38:59.107448Z","iopub.status.idle":"2024-08-07T06:38:59.117253Z","shell.execute_reply.started":"2024-08-07T06:38:59.107418Z","shell.execute_reply":"2024-08-07T06:38:59.115830Z"},"trusted":true},"execution_count":23,"outputs":[]},{"cell_type":"code","source":"train_label_encoder = labelenc.fit_transform(train_labels.reshape(-1,1))\ntest_label_encoder = labelenc.fit_transform(test_labels.reshape(-1,1))\nval_label_encoder = labelenc.fit_transform(val_labels.reshape(-1,1))","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:59.119328Z","iopub.execute_input":"2024-08-07T06:38:59.119821Z","iopub.status.idle":"2024-08-07T06:38:59.205349Z","shell.execute_reply.started":"2024-08-07T06:38:59.119779Z","shell.execute_reply":"2024-08-07T06:38:59.204208Z"},"trusted":true},"execution_count":24,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/preprocessing/_label.py:116: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n  y = column_or_1d(y, warn=True)\n/opt/conda/lib/python3.10/site-packages/sklearn/preprocessing/_label.py:116: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n  y = column_or_1d(y, warn=True)\n/opt/conda/lib/python3.10/site-packages/sklearn/preprocessing/_label.py:116: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n  y = column_or_1d(y, warn=True)\n","output_type":"stream"}]},{"cell_type":"code","source":"train_label_encoder[:1]","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:59.207037Z","iopub.execute_input":"2024-08-07T06:38:59.207526Z","iopub.status.idle":"2024-08-07T06:38:59.215481Z","shell.execute_reply.started":"2024-08-07T06:38:59.207487Z","shell.execute_reply":"2024-08-07T06:38:59.214305Z"},"trusted":true},"execution_count":25,"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"array([3])"},"metadata":{}}]},{"cell_type":"code","source":"val_label_encoder[:10]","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:59.216758Z","iopub.execute_input":"2024-08-07T06:38:59.217137Z","iopub.status.idle":"2024-08-07T06:38:59.228499Z","shell.execute_reply.started":"2024-08-07T06:38:59.217109Z","shell.execute_reply":"2024-08-07T06:38:59.227179Z"},"trusted":true},"execution_count":26,"outputs":[{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"array([0, 0, 3, 2, 2, 4, 4, 4, 4, 1])"},"metadata":{}}]},{"cell_type":"markdown","source":"# **Building a baseline model**","metadata":{}},{"cell_type":"code","source":"from sklearn.naive_bayes import MultinomialNB\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.pipeline import Pipeline\n\nmodel_0 = Pipeline([\n\n    ('tf-idf', TfidfVectorizer()),\n    ('clf', MultinomialNB())\n]\n)","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:59.230070Z","iopub.execute_input":"2024-08-07T06:38:59.231054Z","iopub.status.idle":"2024-08-07T06:38:59.259902Z","shell.execute_reply.started":"2024-08-07T06:38:59.231022Z","shell.execute_reply":"2024-08-07T06:38:59.258854Z"},"trusted":true},"execution_count":27,"outputs":[]},{"cell_type":"code","source":"model_0.fit(train_sentences,train_label_encoder)","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:38:59.261651Z","iopub.execute_input":"2024-08-07T06:38:59.262662Z","iopub.status.idle":"2024-08-07T06:39:05.249683Z","shell.execute_reply.started":"2024-08-07T06:38:59.262622Z","shell.execute_reply":"2024-08-07T06:39:05.248532Z"},"trusted":true},"execution_count":28,"outputs":[{"execution_count":28,"output_type":"execute_result","data":{"text/plain":"Pipeline(steps=[('tf-idf', TfidfVectorizer()), ('clf', MultinomialNB())])","text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;tf-idf&#x27;, TfidfVectorizer()), (&#x27;clf&#x27;, MultinomialNB())])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;tf-idf&#x27;, TfidfVectorizer()), (&#x27;clf&#x27;, MultinomialNB())])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">TfidfVectorizer</label><div class=\"sk-toggleable__content\"><pre>TfidfVectorizer()</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">MultinomialNB</label><div class=\"sk-toggleable__content\"><pre>MultinomialNB()</pre></div></div></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"acc0 = model_0.score(test_sentences,test_label_encoder)","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:05.251110Z","iopub.execute_input":"2024-08-07T06:39:05.252363Z","iopub.status.idle":"2024-08-07T06:39:06.269086Z","shell.execute_reply.started":"2024-08-07T06:39:05.252273Z","shell.execute_reply":"2024-08-07T06:39:06.267905Z"},"trusted":true},"execution_count":29,"outputs":[]},{"cell_type":"code","source":"acc0","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:06.270604Z","iopub.execute_input":"2024-08-07T06:39:06.270996Z","iopub.status.idle":"2024-08-07T06:39:06.281266Z","shell.execute_reply.started":"2024-08-07T06:39:06.270967Z","shell.execute_reply":"2024-08-07T06:39:06.279791Z"},"trusted":true},"execution_count":30,"outputs":[{"execution_count":30,"output_type":"execute_result","data":{"text/plain":"0.716674962667994"},"metadata":{}}]},{"cell_type":"code","source":"base_preds = model_0.predict(test_sentences)","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:06.283529Z","iopub.execute_input":"2024-08-07T06:39:06.283916Z","iopub.status.idle":"2024-08-07T06:39:07.240040Z","shell.execute_reply.started":"2024-08-07T06:39:06.283881Z","shell.execute_reply":"2024-08-07T06:39:07.239023Z"},"trusted":true},"execution_count":31,"outputs":[]},{"cell_type":"code","source":"!wget https://raw.githubusercontent.com/mrdbourke/tensorflow-deep-learning/main/extras/helper_functions.py","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:07.241276Z","iopub.execute_input":"2024-08-07T06:39:07.241603Z","iopub.status.idle":"2024-08-07T06:39:08.557889Z","shell.execute_reply.started":"2024-08-07T06:39:07.241576Z","shell.execute_reply":"2024-08-07T06:39:08.556328Z"},"trusted":true},"execution_count":32,"outputs":[{"name":"stdout","text":"--2024-08-07 06:39:08--  https://raw.githubusercontent.com/mrdbourke/tensorflow-deep-learning/main/extras/helper_functions.py\nResolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.111.133, 185.199.108.133, 185.199.110.133, ...\nConnecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.111.133|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 10246 (10K) [text/plain]\nSaving to: 'helper_functions.py'\n\nhelper_functions.py 100%[===================>]  10.01K  --.-KB/s    in 0s      \n\n2024-08-07 06:39:08 (52.1 MB/s) - 'helper_functions.py' saved [10246/10246]\n\n","output_type":"stream"}]},{"cell_type":"code","source":"base_preds.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:08.560051Z","iopub.execute_input":"2024-08-07T06:39:08.560631Z","iopub.status.idle":"2024-08-07T06:39:08.569643Z","shell.execute_reply.started":"2024-08-07T06:39:08.560579Z","shell.execute_reply":"2024-08-07T06:39:08.568208Z"},"trusted":true},"execution_count":33,"outputs":[{"execution_count":33,"output_type":"execute_result","data":{"text/plain":"(30135,)"},"metadata":{}}]},{"cell_type":"code","source":"test_label_encoder.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:08.571120Z","iopub.execute_input":"2024-08-07T06:39:08.571501Z","iopub.status.idle":"2024-08-07T06:39:08.758594Z","shell.execute_reply.started":"2024-08-07T06:39:08.571471Z","shell.execute_reply":"2024-08-07T06:39:08.757381Z"},"trusted":true},"execution_count":34,"outputs":[{"execution_count":34,"output_type":"execute_result","data":{"text/plain":"(30135,)"},"metadata":{}}]},{"cell_type":"code","source":"from helper_functions import calculate_results\ncalculate_results(test_label_encoder,base_preds)","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:08.760251Z","iopub.execute_input":"2024-08-07T06:39:08.760652Z","iopub.status.idle":"2024-08-07T06:39:22.947476Z","shell.execute_reply.started":"2024-08-07T06:39:08.760620Z","shell.execute_reply":"2024-08-07T06:39:22.946398Z"},"trusted":true},"execution_count":35,"outputs":[{"name":"stderr","text":"2024-08-07 06:39:10.967821: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-08-07 06:39:10.968049: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-08-07 06:39:11.132518: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"},{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"{'accuracy': 71.6674962667994,\n 'precision': 0.7124322482375202,\n 'recall': 0.716674962667994,\n 'f1': 0.6925101703856846}"},"metadata":{}}]},{"cell_type":"markdown","source":"# **Preparing data for deep sequence models**","metadata":{}},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport tensorflow as tf\nfrom tensorflow.keras import layers","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:22.949091Z","iopub.execute_input":"2024-08-07T06:39:22.949807Z","iopub.status.idle":"2024-08-07T06:39:22.988979Z","shell.execute_reply.started":"2024-08-07T06:39:22.949773Z","shell.execute_reply":"2024-08-07T06:39:22.987751Z"},"trusted":true},"execution_count":36,"outputs":[]},{"cell_type":"code","source":"leng = 0\nsen_len = []\nfor sentence in train_sentences:\n#     print(sentence.split())\n#     print(len(sentence.split()))\n#     break\n    sen_len.append(len(sentence.split()))\navg = np.mean(sen_len)","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:22.990485Z","iopub.execute_input":"2024-08-07T06:39:22.990845Z","iopub.status.idle":"2024-08-07T06:39:23.459522Z","shell.execute_reply.started":"2024-08-07T06:39:22.990815Z","shell.execute_reply":"2024-08-07T06:39:23.458270Z"},"trusted":true},"execution_count":37,"outputs":[]},{"cell_type":"code","source":"avg,sen_len[:3]","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:23.461268Z","iopub.execute_input":"2024-08-07T06:39:23.462080Z","iopub.status.idle":"2024-08-07T06:39:23.469989Z","shell.execute_reply.started":"2024-08-07T06:39:23.462039Z","shell.execute_reply":"2024-08-07T06:39:23.468586Z"},"trusted":true},"execution_count":38,"outputs":[{"execution_count":38,"output_type":"execute_result","data":{"text/plain":"(26.338269273494777, [49, 27, 15])"},"metadata":{}}]},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nplt.hist(sen_len, bins = 20, edgecolor='black');","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:23.471671Z","iopub.execute_input":"2024-08-07T06:39:23.472062Z","iopub.status.idle":"2024-08-07T06:39:24.586068Z","shell.execute_reply.started":"2024-08-07T06:39:23.472030Z","shell.execute_reply":"2024-08-07T06:39:24.584744Z"},"trusted":true},"execution_count":39,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"# **Create a text vectorizer**","metadata":{}},{"cell_type":"code","source":"max_tokens = 68000\n\nfrom tensorflow.keras.layers import TextVectorization\nvectorizer = TextVectorization(\nmax_tokens=max_tokens,\n    standardize='lower_and_strip_punctuation',\n    split='whitespace',\n    ngrams=None,\n    output_mode='int',\noutput_sequence_length= 55)","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:24.588064Z","iopub.execute_input":"2024-08-07T06:39:24.588528Z","iopub.status.idle":"2024-08-07T06:39:24.634519Z","shell.execute_reply.started":"2024-08-07T06:39:24.588488Z","shell.execute_reply":"2024-08-07T06:39:24.633370Z"},"trusted":true},"execution_count":40,"outputs":[]},{"cell_type":"code","source":"vectorizer.adapt(train_sentences)","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:24.636062Z","iopub.execute_input":"2024-08-07T06:39:24.636524Z","iopub.status.idle":"2024-08-07T06:39:26.813130Z","shell.execute_reply.started":"2024-08-07T06:39:24.636492Z","shell.execute_reply":"2024-08-07T06:39:26.811856Z"},"trusted":true},"execution_count":41,"outputs":[]},{"cell_type":"code","source":"words = vectorizer.get_vocabulary()\nwords[:5]","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:26.814569Z","iopub.execute_input":"2024-08-07T06:39:26.814978Z","iopub.status.idle":"2024-08-07T06:39:27.151715Z","shell.execute_reply.started":"2024-08-07T06:39:26.814945Z","shell.execute_reply":"2024-08-07T06:39:27.150465Z"},"trusted":true},"execution_count":42,"outputs":[{"execution_count":42,"output_type":"execute_result","data":{"text/plain":"['', '[UNK]', 'the', 'and', 'of']"},"metadata":{}}]},{"cell_type":"code","source":"vectorizer(train_sentences[1])","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:27.162246Z","iopub.execute_input":"2024-08-07T06:39:27.162653Z","iopub.status.idle":"2024-08-07T06:39:27.208207Z","shell.execute_reply.started":"2024-08-07T06:39:27.162625Z","shell.execute_reply":"2024-08-07T06:39:27.207015Z"},"trusted":true},"execution_count":43,"outputs":[{"execution_count":43,"output_type":"execute_result","data":{"text/plain":"<tf.Tensor: shape=(55,), dtype=int64, numpy=\narray([   8,   76,    4,   12,    7,   56,  517, 1743,    9,   29,   80,\n        744,    4, 2535,    3,   80,   48,   11,   53,    0,    0,    0,\n          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,\n          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,\n          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0])>"},"metadata":{}}]},{"cell_type":"code","source":"vectorizer.get_config()","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:27.209476Z","iopub.execute_input":"2024-08-07T06:39:27.209799Z","iopub.status.idle":"2024-08-07T06:39:27.219441Z","shell.execute_reply.started":"2024-08-07T06:39:27.209766Z","shell.execute_reply":"2024-08-07T06:39:27.218041Z"},"trusted":true},"execution_count":44,"outputs":[{"execution_count":44,"output_type":"execute_result","data":{"text/plain":"{'name': 'text_vectorization',\n 'trainable': True,\n 'dtype': {'module': 'keras',\n  'class_name': 'DTypePolicy',\n  'config': {'name': 'float32'},\n  'registered_name': None},\n 'max_tokens': 68000,\n 'standardize': 'lower_and_strip_punctuation',\n 'split': 'whitespace',\n 'ngrams': None,\n 'output_mode': 'int',\n 'output_sequence_length': 55,\n 'pad_to_max_tokens': False,\n 'sparse': False,\n 'ragged': False,\n 'vocabulary': None,\n 'idf_weights': None,\n 'encoding': 'utf-8',\n 'vocabulary_size': 64841}"},"metadata":{}}]},{"cell_type":"markdown","source":"# **Create an Embedding layer**","metadata":{}},{"cell_type":"code","source":"embedded = layers.Embedding(\n input_dim = len(words),\n    output_dim = 128,\n    embeddings_initializer='uniform',\nmask_zero = True)","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:27.221111Z","iopub.execute_input":"2024-08-07T06:39:27.221588Z","iopub.status.idle":"2024-08-07T06:39:27.230769Z","shell.execute_reply.started":"2024-08-07T06:39:27.221549Z","shell.execute_reply":"2024-08-07T06:39:27.229482Z"},"trusted":true},"execution_count":45,"outputs":[]},{"cell_type":"code","source":"print(train_sentences[2])\nprint(vectorizer([train_sentences[2]]))\n\nexp = embedded(vectorizer([train_sentences[2]]))\nexp.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:27.232302Z","iopub.execute_input":"2024-08-07T06:39:27.232672Z","iopub.status.idle":"2024-08-07T06:39:27.339795Z","shell.execute_reply.started":"2024-08-07T06:39:27.232643Z","shell.execute_reply":"2024-08-07T06:39:27.338685Z"},"trusted":true},"execution_count":46,"outputs":[{"name":"stdout","text":"Outcome measures included pain reduction and improvement in function scores and systemic inflammation markers .\ntf.Tensor(\n[[ 86 213 121  65 169   3 194   5 149 119   3 670 636 747   0   0   0   0\n    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0\n    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0\n    0]], shape=(1, 55), dtype=int64)\n","output_type":"stream"},{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"TensorShape([1, 55, 128])"},"metadata":{}}]},{"cell_type":"markdown","source":"## **Creating Datasets**","metadata":{}},{"cell_type":"code","source":"train_dataset = tf.data.Dataset.from_tensor_slices((train_sentences,train_labels_onehot))\ntest_dataset = tf.data.Dataset.from_tensor_slices((test_sentences,test_labels_onehot))\nval_dataset = tf.data.Dataset.from_tensor_slices((val_sentences,val_labels_onehot))","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:27.341381Z","iopub.execute_input":"2024-08-07T06:39:27.341819Z","iopub.status.idle":"2024-08-07T06:39:28.480918Z","shell.execute_reply.started":"2024-08-07T06:39:27.341781Z","shell.execute_reply":"2024-08-07T06:39:28.479636Z"},"trusted":true},"execution_count":47,"outputs":[]},{"cell_type":"code","source":"train_dataset","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:28.482411Z","iopub.execute_input":"2024-08-07T06:39:28.482764Z","iopub.status.idle":"2024-08-07T06:39:28.491403Z","shell.execute_reply.started":"2024-08-07T06:39:28.482737Z","shell.execute_reply":"2024-08-07T06:39:28.490038Z"},"trusted":true},"execution_count":48,"outputs":[{"execution_count":48,"output_type":"execute_result","data":{"text/plain":"<_TensorSliceDataset element_spec=(TensorSpec(shape=(), dtype=tf.string, name=None), TensorSpec(shape=(5,), dtype=tf.float64, name=None))>"},"metadata":{}}]},{"cell_type":"code","source":"train_dataset = train_dataset.batch(32).prefetch(tf.data.AUTOTUNE)\ntest_dataset = test_dataset.batch(32).prefetch(tf.data.AUTOTUNE)\nval_dataset = val_dataset.batch(32).prefetch(tf.data.AUTOTUNE)","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:28.492844Z","iopub.execute_input":"2024-08-07T06:39:28.493311Z","iopub.status.idle":"2024-08-07T06:39:28.518723Z","shell.execute_reply.started":"2024-08-07T06:39:28.493279Z","shell.execute_reply":"2024-08-07T06:39:28.517289Z"},"trusted":true},"execution_count":49,"outputs":[]},{"cell_type":"code","source":"train_dataset","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:28.520212Z","iopub.execute_input":"2024-08-07T06:39:28.520610Z","iopub.status.idle":"2024-08-07T06:39:28.528143Z","shell.execute_reply.started":"2024-08-07T06:39:28.520580Z","shell.execute_reply":"2024-08-07T06:39:28.526923Z"},"trusted":true},"execution_count":50,"outputs":[{"execution_count":50,"output_type":"execute_result","data":{"text/plain":"<_PrefetchDataset element_spec=(TensorSpec(shape=(None,), dtype=tf.string, name=None), TensorSpec(shape=(None, 5), dtype=tf.float64, name=None))>"},"metadata":{}}]},{"cell_type":"code","source":"val_dataset","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:28.529450Z","iopub.execute_input":"2024-08-07T06:39:28.529769Z","iopub.status.idle":"2024-08-07T06:39:28.542301Z","shell.execute_reply.started":"2024-08-07T06:39:28.529743Z","shell.execute_reply":"2024-08-07T06:39:28.541007Z"},"trusted":true},"execution_count":51,"outputs":[{"execution_count":51,"output_type":"execute_result","data":{"text/plain":"<_PrefetchDataset element_spec=(TensorSpec(shape=(None,), dtype=tf.string, name=None), TensorSpec(shape=(None, 5), dtype=tf.float64, name=None))>"},"metadata":{}}]},{"cell_type":"markdown","source":"# **Using Conv1D with token embeddings**","metadata":{}},{"cell_type":"code","source":"inputs = layers.Input((1,), dtype = tf.string)\nx = vectorizer(inputs)\nx = embedded(x)\nx = layers.Conv1D(64,kernel_size = 5,padding = 'valid', activation = 'relu')(x)\nx = layers.GlobalAveragePooling1D()(x)\noutputs = layers.Dense(5, activation = 'softmax')(x)\nmodel_1 = tf.keras.Model(inputs,outputs)","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:28.543760Z","iopub.execute_input":"2024-08-07T06:39:28.544299Z","iopub.status.idle":"2024-08-07T06:39:28.585282Z","shell.execute_reply.started":"2024-08-07T06:39:28.544254Z","shell.execute_reply":"2024-08-07T06:39:28.584295Z"},"trusted":true},"execution_count":52,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/layer.py:915: UserWarning: Layer 'conv1d' (of type Conv1D) was passed an input with a mask attached to it. However, this layer does not support masking and will therefore destroy the mask information. Downstream layers will not see the mask.\n  warnings.warn(\n","output_type":"stream"}]},{"cell_type":"code","source":"model_1.summary()","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:28.586781Z","iopub.execute_input":"2024-08-07T06:39:28.587118Z","iopub.status.idle":"2024-08-07T06:39:28.614550Z","shell.execute_reply.started":"2024-08-07T06:39:28.587090Z","shell.execute_reply":"2024-08-07T06:39:28.613266Z"},"trusted":true},"execution_count":53,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"functional\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"functional\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ input_layer (\u001b[38;5;33mInputLayer\u001b[0m)        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ text_vectorization              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m55\u001b[0m)             │             \u001b[38;5;34m0\u001b[0m │\n│ (\u001b[38;5;33mTextVectorization\u001b[0m)             │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ embedding (\u001b[38;5;33mEmbedding\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m55\u001b[0m, \u001b[38;5;34m128\u001b[0m)        │     \u001b[38;5;34m8,299,648\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv1d (\u001b[38;5;33mConv1D\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m51\u001b[0m, \u001b[38;5;34m64\u001b[0m)         │        \u001b[38;5;34m41,024\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ global_average_pooling1d        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │             \u001b[38;5;34m0\u001b[0m │\n│ (\u001b[38;5;33mGlobalAveragePooling1D\u001b[0m)        │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense (\u001b[38;5;33mDense\u001b[0m)                   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m5\u001b[0m)              │           \u001b[38;5;34m325\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ input_layer (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ text_vectorization              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">55</span>)             │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">TextVectorization</span>)             │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ embedding (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Embedding</span>)           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">55</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)        │     <span style=\"color: #00af00; text-decoration-color: #00af00\">8,299,648</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv1d (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv1D</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">51</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)         │        <span style=\"color: #00af00; text-decoration-color: #00af00\">41,024</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ global_average_pooling1d        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">GlobalAveragePooling1D</span>)        │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">5</span>)              │           <span style=\"color: #00af00; text-decoration-color: #00af00\">325</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m8,340,997\u001b[0m (31.82 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">8,340,997</span> (31.82 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m8,340,997\u001b[0m (31.82 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">8,340,997</span> (31.82 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}]},{"cell_type":"code","source":"model_1.compile(loss = 'categorical_crossentropy', optimizer = tf.keras.optimizers.Adam(), metrics = ['accuracy'])","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:28.616496Z","iopub.execute_input":"2024-08-07T06:39:28.616953Z","iopub.status.idle":"2024-08-07T06:39:28.633327Z","shell.execute_reply.started":"2024-08-07T06:39:28.616915Z","shell.execute_reply":"2024-08-07T06:39:28.632390Z"},"trusted":true},"execution_count":54,"outputs":[]},{"cell_type":"code","source":"\n# # Fit the model\n# model_1_history = model_1.fit(train_dataset,\n#                               steps_per_epoch=int(0.1 * len(train_dataset)), # only fit on 10% of batches for faster training time\n#                               epochs=3,\n#                               validation_data=val_dataset,\n#                               validation_steps=int(0.1 * len(val_dataset))) # only validate on 10% of batches","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:28.634774Z","iopub.execute_input":"2024-08-07T06:39:28.635201Z","iopub.status.idle":"2024-08-07T06:39:28.641036Z","shell.execute_reply.started":"2024-08-07T06:39:28.635154Z","shell.execute_reply":"2024-08-07T06:39:28.639744Z"},"trusted":true},"execution_count":55,"outputs":[]},{"cell_type":"code","source":"model_1.fit(train_dataset, epochs = 5, steps_per_epoch = int(0.1 * len(train_dataset)), validation_data = (val_dataset),\n           validation_steps = int(len(val_dataset)*0.1))","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:39:28.642702Z","iopub.execute_input":"2024-08-07T06:39:28.643073Z","iopub.status.idle":"2024-08-07T06:41:34.201148Z","shell.execute_reply.started":"2024-08-07T06:39:28.643045Z","shell.execute_reply":"2024-08-07T06:41:34.200006Z"},"trusted":true},"execution_count":56,"outputs":[{"name":"stdout","text":"Epoch 1/5\n\u001b[1m562/562\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 47ms/step - accuracy: 0.5136 - loss: 1.1772 - val_accuracy: 0.7191 - val_loss: 0.7281\nEpoch 2/5\n\u001b[1m562/562\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 44ms/step - accuracy: 0.7325 - loss: 0.7139 - val_accuracy: 0.7593 - val_loss: 0.6490\nEpoch 3/5\n\u001b[1m562/562\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 45ms/step - accuracy: 0.7607 - loss: 0.6452 - val_accuracy: 0.7909 - val_loss: 0.6075\nEpoch 4/5\n\u001b[1m562/562\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 41ms/step - accuracy: 0.7771 - loss: 0.6149 - val_accuracy: 0.7939 - val_loss: 0.5814\nEpoch 5/5\n\u001b[1m562/562\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 44ms/step - accuracy: 0.7873 - loss: 0.5978 - val_accuracy: 0.7932 - val_loss: 0.5784\n","output_type":"stream"},{"execution_count":56,"output_type":"execute_result","data":{"text/plain":"<keras.src.callbacks.history.History at 0x7a6f2cda3970>"},"metadata":{}}]},{"cell_type":"code","source":"acc1 = model_1.evaluate(test_dataset)","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:41:34.202761Z","iopub.execute_input":"2024-08-07T06:41:34.203243Z","iopub.status.idle":"2024-08-07T06:41:38.044657Z","shell.execute_reply.started":"2024-08-07T06:41:34.203192Z","shell.execute_reply":"2024-08-07T06:41:38.042752Z"},"trusted":true},"execution_count":57,"outputs":[{"name":"stdout","text":"\u001b[1m942/942\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 4ms/step - accuracy: 0.7878 - loss: 0.5855\n","output_type":"stream"}]},{"cell_type":"code","source":"acc1","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:41:38.047451Z","iopub.execute_input":"2024-08-07T06:41:38.047823Z","iopub.status.idle":"2024-08-07T06:41:38.056203Z","shell.execute_reply.started":"2024-08-07T06:41:38.047795Z","shell.execute_reply":"2024-08-07T06:41:38.054894Z"},"trusted":true},"execution_count":58,"outputs":[{"execution_count":58,"output_type":"execute_result","data":{"text/plain":"[0.5840558409690857, 0.7904762029647827]"},"metadata":{}}]},{"cell_type":"code","source":"model1_preds = model_1.predict(test_dataset)","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:41:38.057729Z","iopub.execute_input":"2024-08-07T06:41:38.058105Z","iopub.status.idle":"2024-08-07T06:41:42.598037Z","shell.execute_reply.started":"2024-08-07T06:41:38.058075Z","shell.execute_reply":"2024-08-07T06:41:42.596990Z"},"trusted":true},"execution_count":59,"outputs":[{"name":"stdout","text":"\u001b[1m942/942\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 4ms/step\n","output_type":"stream"}]},{"cell_type":"code","source":"model1_probs = tf.argmax(model1_preds,axis = 1)","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:41:42.599483Z","iopub.execute_input":"2024-08-07T06:41:42.599796Z","iopub.status.idle":"2024-08-07T06:41:42.606639Z","shell.execute_reply.started":"2024-08-07T06:41:42.599769Z","shell.execute_reply":"2024-08-07T06:41:42.605333Z"},"trusted":true},"execution_count":60,"outputs":[]},{"cell_type":"code","source":"model1_results = calculate_results(test_label_encoder, model1_probs)","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:41:42.608465Z","iopub.execute_input":"2024-08-07T06:41:42.608923Z","iopub.status.idle":"2024-08-07T06:41:42.634263Z","shell.execute_reply.started":"2024-08-07T06:41:42.608885Z","shell.execute_reply":"2024-08-07T06:41:42.633180Z"},"trusted":true},"execution_count":61,"outputs":[]},{"cell_type":"code","source":"model1_results","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:42:15.602131Z","iopub.execute_input":"2024-08-07T06:42:15.602632Z","iopub.status.idle":"2024-08-07T06:42:15.610385Z","shell.execute_reply.started":"2024-08-07T06:42:15.602597Z","shell.execute_reply":"2024-08-07T06:42:15.609193Z"},"trusted":true},"execution_count":63,"outputs":[{"execution_count":63,"output_type":"execute_result","data":{"text/plain":"{'accuracy': 79.04761904761905,\n 'precision': 0.7892883420796074,\n 'recall': 0.7904761904761904,\n 'f1': 0.7866849593790822}"},"metadata":{}}]},{"cell_type":"markdown","source":"# **Model 2 Feature Extraction using pre trained embedded layers**","metadata":{}},{"cell_type":"code","source":"import tensorflow_hub as hub\npre_embed = hub.KerasLayer(\"https://tfhub.dev/google/universal-sentence-encoder/4\", \n                          trainable = False,\n                          name = 'universal_sentence_encoder')","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:45:36.089815Z","iopub.execute_input":"2024-08-07T06:45:36.090387Z","iopub.status.idle":"2024-08-07T06:45:53.384751Z","shell.execute_reply.started":"2024-08-07T06:45:36.090354Z","shell.execute_reply":"2024-08-07T06:45:53.383549Z"},"trusted":true},"execution_count":66,"outputs":[]},{"cell_type":"code","source":"train_sentences[1]","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:47:46.291419Z","iopub.execute_input":"2024-08-07T06:47:46.292042Z","iopub.status.idle":"2024-08-07T06:47:46.301745Z","shell.execute_reply.started":"2024-08-07T06:47:46.291992Z","shell.execute_reply":"2024-08-07T06:47:46.300303Z"},"trusted":true},"execution_count":71,"outputs":[{"execution_count":71,"output_type":"execute_result","data":{"text/plain":"'A total of @ patients with primary knee OA were randomized @:@ ; @ received @ mg/day of prednisolone and @ received placebo for @ weeks .'"},"metadata":{}}]},{"cell_type":"code","source":"pre_embed([train_sentences[1]]).shape","metadata":{"execution":{"iopub.status.busy":"2024-08-07T06:47:54.117889Z","iopub.execute_input":"2024-08-07T06:47:54.118671Z","iopub.status.idle":"2024-08-07T06:47:54.130413Z","shell.execute_reply.started":"2024-08-07T06:47:54.118633Z","shell.execute_reply":"2024-08-07T06:47:54.129123Z"},"trusted":true},"execution_count":72,"outputs":[{"execution_count":72,"output_type":"execute_result","data":{"text/plain":"TensorShape([1, 512])"},"metadata":{}}]},{"cell_type":"code","source":"# Create a custom layer that wraps the Universal Sentence Encoder\nclass UniversalSentenceEncoder(tf.keras.layers.Layer):\n    def __init__(self, **kwargs):\n        super(UniversalSentenceEncoder, self).__init__(**kwargs)\n        self.encoder = hub.load(\"https://tfhub.dev/google/universal-sentence-encoder/4\")\n\n    def call(self, inputs):\n        return self.encoder(inputs)","metadata":{"execution":{"iopub.status.busy":"2024-08-07T07:00:40.366346Z","iopub.execute_input":"2024-08-07T07:00:40.366814Z","iopub.status.idle":"2024-08-07T07:00:40.373807Z","shell.execute_reply.started":"2024-08-07T07:00:40.366780Z","shell.execute_reply":"2024-08-07T07:00:40.372632Z"},"trusted":true},"execution_count":78,"outputs":[]},{"cell_type":"code","source":"# # Define feature extractor model using TF Hub layer\n# inputs = layers.Input(shape=[], dtype=tf.string)\n# pretrained_embedding = pre_embed(inputs) # tokenize text and create embedding\n# x = layers.Dense(128, activation=\"relu\")(pretrained_embedding) # add a fully connected layer on top of the embedding\n# # Note: you could add more layers here if you wanted to\n# outputs = layers.Dense(5, activation=\"softmax\")(x) # create the output layer\n# model_2 = tf.keras.Model(inputs=inputs,\n#                         outputs=outputs)","metadata":{"execution":{"iopub.status.busy":"2024-08-07T07:02:40.908516Z","iopub.execute_input":"2024-08-07T07:02:40.909276Z","iopub.status.idle":"2024-08-07T07:02:40.914650Z","shell.execute_reply.started":"2024-08-07T07:02:40.909241Z","shell.execute_reply":"2024-08-07T07:02:40.913257Z"},"trusted":true},"execution_count":82,"outputs":[]},{"cell_type":"code","source":"inputs = layers.Input(shape = [], dtype = tf.string)\n\nx = UniversalSentenceEncoder()(inputs)\nx = layers.Dense(128, activation = 'relu')(x)\noutputs = layers.Dense(5, activation = 'softmax')(x)\n\nmodel2 = tf.keras.Model(inputs,outputs)\n\n\n","metadata":{"execution":{"iopub.status.busy":"2024-08-07T07:03:12.919797Z","iopub.execute_input":"2024-08-07T07:03:12.920796Z","iopub.status.idle":"2024-08-07T07:03:18.558625Z","shell.execute_reply.started":"2024-08-07T07:03:12.920759Z","shell.execute_reply":"2024-08-07T07:03:18.557488Z"},"trusted":true},"execution_count":83,"outputs":[]},{"cell_type":"code","source":"model2.summary()","metadata":{"execution":{"iopub.status.busy":"2024-08-07T07:03:18.560545Z","iopub.execute_input":"2024-08-07T07:03:18.560921Z","iopub.status.idle":"2024-08-07T07:03:18.583753Z","shell.execute_reply.started":"2024-08-07T07:03:18.560891Z","shell.execute_reply":"2024-08-07T07:03:18.582687Z"},"trusted":true},"execution_count":84,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"functional_2\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"functional_2\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ input_layer_6 (\u001b[38;5;33mInputLayer\u001b[0m)      │ (\u001b[38;5;45mNone\u001b[0m)                 │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ universal_sentence_encoder_2    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m512\u001b[0m)            │             \u001b[38;5;34m0\u001b[0m │\n│ (\u001b[38;5;33mUniversalSentenceEncoder\u001b[0m)      │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_4 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)            │        \u001b[38;5;34m65,664\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_5 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m5\u001b[0m)              │           \u001b[38;5;34m645\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ input_layer_6 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>)                 │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ universal_sentence_encoder_2    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)            │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">UniversalSentenceEncoder</span>)      │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_4 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)            │        <span style=\"color: #00af00; text-decoration-color: #00af00\">65,664</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_5 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">5</span>)              │           <span style=\"color: #00af00; text-decoration-color: #00af00\">645</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m66,309\u001b[0m (259.02 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">66,309</span> (259.02 KB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m66,309\u001b[0m (259.02 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">66,309</span> (259.02 KB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}]},{"cell_type":"code","source":"model2.compile(loss = 'categorical_crossentropy', optimizer = tf.optimizers.Adam(), metrics = ['accuracy'])","metadata":{"execution":{"iopub.status.busy":"2024-08-07T07:06:21.222833Z","iopub.execute_input":"2024-08-07T07:06:21.223338Z","iopub.status.idle":"2024-08-07T07:06:21.234428Z","shell.execute_reply.started":"2024-08-07T07:06:21.223299Z","shell.execute_reply":"2024-08-07T07:06:21.233287Z"},"trusted":true},"execution_count":90,"outputs":[]},{"cell_type":"code","source":"model2.fit(train_dataset, epochs = 5, validation_data = (val_dataset), \n          steps_per_epoch = int(len(train_dataset)*0.1),validation_steps = int(len(val_dataset)*0.1))","metadata":{"execution":{"iopub.status.busy":"2024-08-07T07:06:22.167140Z","iopub.execute_input":"2024-08-07T07:06:22.167597Z","iopub.status.idle":"2024-08-07T07:06:56.198519Z","shell.execute_reply.started":"2024-08-07T07:06:22.167565Z","shell.execute_reply":"2024-08-07T07:06:56.197408Z"},"trusted":true},"execution_count":91,"outputs":[{"name":"stdout","text":"Epoch 1/5\n\u001b[1m562/562\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 12ms/step - accuracy: 0.5859 - loss: 1.0930 - val_accuracy: 0.6878 - val_loss: 0.7968\nEpoch 2/5\n\u001b[1m562/562\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 11ms/step - accuracy: 0.7037 - loss: 0.7713 - val_accuracy: 0.7081 - val_loss: 0.7584\nEpoch 3/5\n\u001b[1m562/562\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 11ms/step - accuracy: 0.7139 - loss: 0.7563 - val_accuracy: 0.7191 - val_loss: 0.7290\nEpoch 4/5\n\u001b[1m562/562\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 11ms/step - accuracy: 0.7246 - loss: 0.7204 - val_accuracy: 0.7287 - val_loss: 0.7185\nEpoch 5/5\n\u001b[1m562/562\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 11ms/step - accuracy: 0.7236 - loss: 0.7196 - val_accuracy: 0.7370 - val_loss: 0.6997\n","output_type":"stream"},{"execution_count":91,"output_type":"execute_result","data":{"text/plain":"<keras.src.callbacks.history.History at 0x7a6edcbb4400>"},"metadata":{}}]},{"cell_type":"code","source":"acc2 = model2.evaluate(test_dataset)","metadata":{"execution":{"iopub.status.busy":"2024-08-07T07:07:26.126755Z","iopub.execute_input":"2024-08-07T07:07:26.127204Z","iopub.status.idle":"2024-08-07T07:07:36.360846Z","shell.execute_reply.started":"2024-08-07T07:07:26.127170Z","shell.execute_reply":"2024-08-07T07:07:36.359576Z"},"trusted":true},"execution_count":92,"outputs":[{"name":"stdout","text":"\u001b[1m942/942\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 8ms/step - accuracy: 0.7235 - loss: 0.7175\n","output_type":"stream"}]},{"cell_type":"code","source":"model2_pred = model2.predict(test_dataset)","metadata":{"execution":{"iopub.status.busy":"2024-08-07T07:08:02.853155Z","iopub.execute_input":"2024-08-07T07:08:02.853613Z","iopub.status.idle":"2024-08-07T07:08:12.281285Z","shell.execute_reply.started":"2024-08-07T07:08:02.853582Z","shell.execute_reply":"2024-08-07T07:08:12.279910Z"},"trusted":true},"execution_count":94,"outputs":[{"name":"stdout","text":"\u001b[1m942/942\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 9ms/step\n","output_type":"stream"}]},{"cell_type":"code","source":"model2_probs = tf.argmax(model2_pred, axis = 1)","metadata":{"execution":{"iopub.status.busy":"2024-08-07T07:15:35.801668Z","iopub.execute_input":"2024-08-07T07:15:35.802152Z","iopub.status.idle":"2024-08-07T07:15:35.808839Z","shell.execute_reply.started":"2024-08-07T07:15:35.802116Z","shell.execute_reply":"2024-08-07T07:15:35.807296Z"},"trusted":true},"execution_count":95,"outputs":[]},{"cell_type":"code","source":"calculate_results(test_label_encoder, model2_probs)","metadata":{"execution":{"iopub.status.busy":"2024-08-07T07:16:32.666002Z","iopub.execute_input":"2024-08-07T07:16:32.666420Z","iopub.status.idle":"2024-08-07T07:16:32.691365Z","shell.execute_reply.started":"2024-08-07T07:16:32.666390Z","shell.execute_reply":"2024-08-07T07:16:32.689963Z"},"trusted":true},"execution_count":97,"outputs":[{"execution_count":97,"output_type":"execute_result","data":{"text/plain":"{'accuracy': 72.64974282395885,\n 'precision': 0.7224475073844377,\n 'recall': 0.7264974282395885,\n 'f1': 0.7211223972482251}"},"metadata":{}}]},{"cell_type":"code","source":"acc2","metadata":{"execution":{"iopub.status.busy":"2024-08-07T07:16:48.533434Z","iopub.execute_input":"2024-08-07T07:16:48.533899Z","iopub.status.idle":"2024-08-07T07:16:48.541533Z","shell.execute_reply.started":"2024-08-07T07:16:48.533861Z","shell.execute_reply":"2024-08-07T07:16:48.540342Z"},"trusted":true},"execution_count":99,"outputs":[{"execution_count":99,"output_type":"execute_result","data":{"text/plain":"[0.7152596116065979, 0.7264974117279053]"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}