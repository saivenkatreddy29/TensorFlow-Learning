{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"!git clone https://github.com/Franck-Dernoncourt/pubmed-rct.git\n!ls pubmed-rct","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:05.485081Z","iopub.execute_input":"2024-08-08T05:13:05.485510Z","iopub.status.idle":"2024-08-08T05:13:08.530257Z","shell.execute_reply.started":"2024-08-08T05:13:05.485479Z","shell.execute_reply":"2024-08-08T05:13:08.528832Z"},"trusted":true},"execution_count":179,"outputs":[{"name":"stdout","text":"fatal: destination path 'pubmed-rct' already exists and is not an empty directory.\nPubMed_200k_RCT\nPubMed_200k_RCT_numbers_replaced_with_at_sign\nPubMed_20k_RCT\nPubMed_20k_RCT_numbers_replaced_with_at_sign\nREADME.md\n","output_type":"stream"}]},{"cell_type":"code","source":"# Check what files are in the PubMed_20K dataset \n!ls pubmed-rct/PubMed_20k_RCT_numbers_replaced_with_at_sign","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:08.532727Z","iopub.execute_input":"2024-08-08T05:13:08.533150Z","iopub.status.idle":"2024-08-08T05:13:09.960570Z","shell.execute_reply.started":"2024-08-08T05:13:08.533107Z","shell.execute_reply":"2024-08-08T05:13:09.958949Z"},"trusted":true},"execution_count":180,"outputs":[{"name":"stdout","text":"dev.txt  test.txt  train.txt\n","output_type":"stream"}]},{"cell_type":"code","source":"\n# Start by using the 20k dataset\ndata_dir = \"pubmed-rct/PubMed_20k_RCT_numbers_replaced_with_at_sign/\"","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:09.962476Z","iopub.execute_input":"2024-08-08T05:13:09.962878Z","iopub.status.idle":"2024-08-08T05:13:09.969170Z","shell.execute_reply.started":"2024-08-08T05:13:09.962842Z","shell.execute_reply":"2024-08-08T05:13:09.967876Z"},"trusted":true},"execution_count":181,"outputs":[]},{"cell_type":"code","source":"import os\nfile_names = [data_dir + i for i in os.listdir(data_dir)]","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:09.972088Z","iopub.execute_input":"2024-08-08T05:13:09.972470Z","iopub.status.idle":"2024-08-08T05:13:09.981811Z","shell.execute_reply.started":"2024-08-08T05:13:09.972427Z","shell.execute_reply":"2024-08-08T05:13:09.980736Z"},"trusted":true},"execution_count":182,"outputs":[]},{"cell_type":"markdown","source":"# **Preprocessing Data**","metadata":{}},{"cell_type":"code","source":"file_names","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:09.983145Z","iopub.execute_input":"2024-08-08T05:13:09.983537Z","iopub.status.idle":"2024-08-08T05:13:09.995352Z","shell.execute_reply.started":"2024-08-08T05:13:09.983507Z","shell.execute_reply":"2024-08-08T05:13:09.994204Z"},"trusted":true},"execution_count":183,"outputs":[{"execution_count":183,"output_type":"execute_result","data":{"text/plain":"['pubmed-rct/PubMed_20k_RCT_numbers_replaced_with_at_sign/test.txt',\n 'pubmed-rct/PubMed_20k_RCT_numbers_replaced_with_at_sign/train.txt',\n 'pubmed-rct/PubMed_20k_RCT_numbers_replaced_with_at_sign/dev.txt']"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def lines(dir):\n    file = open(dir,\"r\")\n    data = file.readlines()\n    return data","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:09.996858Z","iopub.execute_input":"2024-08-08T05:13:09.997290Z","iopub.status.idle":"2024-08-08T05:13:10.008402Z","shell.execute_reply.started":"2024-08-08T05:13:09.997258Z","shell.execute_reply":"2024-08-08T05:13:10.007286Z"},"trusted":true},"execution_count":184,"outputs":[]},{"cell_type":"code","source":"train_data = lines('pubmed-rct/PubMed_20k_RCT_numbers_replaced_with_at_sign/train.txt')\nval_data = lines('pubmed-rct/PubMed_20k_RCT_numbers_replaced_with_at_sign/dev.txt')\ntest_data = lines('pubmed-rct/PubMed_20k_RCT_numbers_replaced_with_at_sign/test.txt')\ntrain_data[:10]","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:10.009865Z","iopub.execute_input":"2024-08-08T05:13:10.010485Z","iopub.status.idle":"2024-08-08T05:13:10.169190Z","shell.execute_reply.started":"2024-08-08T05:13:10.010438Z","shell.execute_reply":"2024-08-08T05:13:10.167893Z"},"trusted":true},"execution_count":185,"outputs":[{"execution_count":185,"output_type":"execute_result","data":{"text/plain":"['###24293578\\n',\n 'OBJECTIVE\\tTo investigate the efficacy of @ weeks of daily low-dose oral prednisolone in improving pain , mobility , and systemic low-grade inflammation in the short term and whether the effect would be sustained at @ weeks in older adults with moderate to severe knee osteoarthritis ( OA ) .\\n',\n 'METHODS\\tA total of @ patients with primary knee OA were randomized @:@ ; @ received @ mg/day of prednisolone and @ received placebo for @ weeks .\\n',\n 'METHODS\\tOutcome measures included pain reduction and improvement in function scores and systemic inflammation markers .\\n',\n 'METHODS\\tPain was assessed using the visual analog pain scale ( @-@ mm ) .\\n',\n 'METHODS\\tSecondary outcome measures included the Western Ontario and McMaster Universities Osteoarthritis Index scores , patient global assessment ( PGA ) of the severity of knee OA , and @-min walk distance ( @MWD ) .\\n',\n 'METHODS\\tSerum levels of interleukin @ ( IL-@ ) , IL-@ , tumor necrosis factor ( TNF ) - , and high-sensitivity C-reactive protein ( hsCRP ) were measured .\\n',\n 'RESULTS\\tThere was a clinically relevant reduction in the intervention group compared to the placebo group for knee pain , physical function , PGA , and @MWD at @ weeks .\\n',\n 'RESULTS\\tThe mean difference between treatment arms ( @ % CI ) was @ ( @-@ @ ) , p < @ ; @ ( @-@ @ ) , p < @ ; @ ( @-@ @ ) , p < @ ; and @ ( @-@ @ ) , p < @ , respectively .\\n',\n 'RESULTS\\tFurther , there was a clinically relevant reduction in the serum levels of IL-@ , IL-@ , TNF - , and hsCRP at @ weeks in the intervention group when compared to the placebo group .\\n']"},"metadata":{}}]},{"cell_type":"code","source":"val_data[1], test_data[1]","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:10.170681Z","iopub.execute_input":"2024-08-08T05:13:10.171113Z","iopub.status.idle":"2024-08-08T05:13:10.179269Z","shell.execute_reply.started":"2024-08-08T05:13:10.171076Z","shell.execute_reply":"2024-08-08T05:13:10.178080Z"},"trusted":true},"execution_count":186,"outputs":[{"execution_count":186,"output_type":"execute_result","data":{"text/plain":"('BACKGROUND\\tIgE sensitization to Aspergillus fumigatus and a positive sputum fungal culture result are common in patients with refractory asthma .\\n',\n 'BACKGROUND\\tThis study analyzed liver function abnormalities in heart failure patients admitted with severe acute decompensated heart failure ( ADHF ) .\\n')"},"metadata":{}}]},{"cell_type":"code","source":"test_data[:10]","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:10.181038Z","iopub.execute_input":"2024-08-08T05:13:10.181540Z","iopub.status.idle":"2024-08-08T05:13:10.194531Z","shell.execute_reply.started":"2024-08-08T05:13:10.181496Z","shell.execute_reply":"2024-08-08T05:13:10.192988Z"},"trusted":true},"execution_count":187,"outputs":[{"execution_count":187,"output_type":"execute_result","data":{"text/plain":"['###24845963\\n',\n 'BACKGROUND\\tThis study analyzed liver function abnormalities in heart failure patients admitted with severe acute decompensated heart failure ( ADHF ) .\\n',\n 'RESULTS\\tA post hoc analysis was conducted with the use of data from the Evaluation Study of Congestive Heart Failure and Pulmonary Artery Catheterization Effectiveness ( ESCAPE ) .\\n',\n 'RESULTS\\tLiver function tests ( LFTs ) were measured at @ time points from baseline , at discharge , and up to @ months follow-up .\\n',\n 'RESULTS\\tSurvival analyses were used to assess the association between admission Model of End-Stage Liver Disease Excluding International Normalized Ratio ( MELD-XI ) scores and patient outcome.There was a high prevalence of abnormal baseline ( admission ) LFTs ( albumin @ % , aspartate transaminase @ % , alanine transaminase @ % , and total bilirubin @ % ) .\\n',\n \"RESULTS\\tThe percentage of patients with abnormal LFTs decreased significantly from baseline to @-months ' follow-up .\\n\",\n 'RESULTS\\tWhen mean hemodynamic profiles were compared in patients with abnormal versus normal LFTs , elevated total bilirubin was associated with a significantly lower cardiac index ( @ vs @ ; P < @ ) and higher central venous pressure ( @ vs @ ; P = @ ) .\\n',\n 'RESULTS\\tMultivariable analyses revealed that patients with elevated MELD-XI scores ( @ ) had a @-fold ( hazard ratio@ @ , @ % confidence interval @-@ @ ) increased risk of death , rehospitalization , or transplantation after adjusting for baseline LFTs , age , sex , race , body mass index , diabetes , and systolic blood pressure .\\n',\n 'CONCLUSIONS\\tAbnormal LFTs are common in the ADHF population and are a dynamic marker of an impaired hemodynamic state .\\n',\n 'CONCLUSIONS\\tElevated MELD-XI scores are associated with poor outcomes among patients admitted with ADHF .\\n']"},"metadata":{}}]},{"cell_type":"code","source":"def preprocessing_text(filename):\n    \n    input_lines = lines(filename)\n    abstract_lines = \" \"\n    abstract_samples = []\n    \n    for line in input_lines:\n        if line.startswith('###'):\n            abstract_id = line\n            abstract_lines = \"\"\n        elif line.isspace():\n            abstract_line_split = abstract_lines.splitlines()\n        \n            for abstract_line_number,abstract_line in enumerate (abstract_line_split):\n                line_data = {}\n                target_text_split = abstract_line.split('\\t')\n                line_data['target'] = target_text_split[0]\n                line_data['text'] = target_text_split[1]\n                line_data['line_number'] = abstract_line_number\n                line_data['total_lines'] = len(abstract_line_split)-1\n                abstract_samples.append(line_data)\n        else:\n            abstract_lines += line\n    return abstract_samples\n            \n            \n            \n    ","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:10.199710Z","iopub.execute_input":"2024-08-08T05:13:10.200319Z","iopub.status.idle":"2024-08-08T05:13:10.220334Z","shell.execute_reply.started":"2024-08-08T05:13:10.200279Z","shell.execute_reply":"2024-08-08T05:13:10.218846Z"},"trusted":true},"execution_count":188,"outputs":[]},{"cell_type":"code","source":"train_samples = preprocessing_text(data_dir + \"train.txt\")\nval_samples = preprocessing_text(data_dir + \"dev.txt\") # dev is another name for validation set\ntest_samples = preprocessing_text(data_dir + \"test.txt\")\nlen(train_samples), len(val_samples), len(test_samples)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:10.222163Z","iopub.execute_input":"2024-08-08T05:13:10.222564Z","iopub.status.idle":"2024-08-08T05:13:10.968640Z","shell.execute_reply.started":"2024-08-08T05:13:10.222519Z","shell.execute_reply":"2024-08-08T05:13:10.967443Z"},"trusted":true},"execution_count":189,"outputs":[{"execution_count":189,"output_type":"execute_result","data":{"text/plain":"(180040, 30212, 30135)"},"metadata":{}}]},{"cell_type":"code","source":"train_samples[:10]","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:10.970155Z","iopub.execute_input":"2024-08-08T05:13:10.970557Z","iopub.status.idle":"2024-08-08T05:13:10.980208Z","shell.execute_reply.started":"2024-08-08T05:13:10.970522Z","shell.execute_reply":"2024-08-08T05:13:10.978987Z"},"trusted":true},"execution_count":190,"outputs":[{"execution_count":190,"output_type":"execute_result","data":{"text/plain":"[{'target': 'OBJECTIVE',\n  'text': 'To investigate the efficacy of @ weeks of daily low-dose oral prednisolone in improving pain , mobility , and systemic low-grade inflammation in the short term and whether the effect would be sustained at @ weeks in older adults with moderate to severe knee osteoarthritis ( OA ) .',\n  'line_number': 0,\n  'total_lines': 11},\n {'target': 'METHODS',\n  'text': 'A total of @ patients with primary knee OA were randomized @:@ ; @ received @ mg/day of prednisolone and @ received placebo for @ weeks .',\n  'line_number': 1,\n  'total_lines': 11},\n {'target': 'METHODS',\n  'text': 'Outcome measures included pain reduction and improvement in function scores and systemic inflammation markers .',\n  'line_number': 2,\n  'total_lines': 11},\n {'target': 'METHODS',\n  'text': 'Pain was assessed using the visual analog pain scale ( @-@ mm ) .',\n  'line_number': 3,\n  'total_lines': 11},\n {'target': 'METHODS',\n  'text': 'Secondary outcome measures included the Western Ontario and McMaster Universities Osteoarthritis Index scores , patient global assessment ( PGA ) of the severity of knee OA , and @-min walk distance ( @MWD ) .',\n  'line_number': 4,\n  'total_lines': 11},\n {'target': 'METHODS',\n  'text': 'Serum levels of interleukin @ ( IL-@ ) , IL-@ , tumor necrosis factor ( TNF ) - , and high-sensitivity C-reactive protein ( hsCRP ) were measured .',\n  'line_number': 5,\n  'total_lines': 11},\n {'target': 'RESULTS',\n  'text': 'There was a clinically relevant reduction in the intervention group compared to the placebo group for knee pain , physical function , PGA , and @MWD at @ weeks .',\n  'line_number': 6,\n  'total_lines': 11},\n {'target': 'RESULTS',\n  'text': 'The mean difference between treatment arms ( @ % CI ) was @ ( @-@ @ ) , p < @ ; @ ( @-@ @ ) , p < @ ; @ ( @-@ @ ) , p < @ ; and @ ( @-@ @ ) , p < @ , respectively .',\n  'line_number': 7,\n  'total_lines': 11},\n {'target': 'RESULTS',\n  'text': 'Further , there was a clinically relevant reduction in the serum levels of IL-@ , IL-@ , TNF - , and hsCRP at @ weeks in the intervention group when compared to the placebo group .',\n  'line_number': 8,\n  'total_lines': 11},\n {'target': 'RESULTS',\n  'text': 'These differences remained significant at @ weeks .',\n  'line_number': 9,\n  'total_lines': 11}]"},"metadata":{}}]},{"cell_type":"code","source":"import pandas as pd\ntrain_df = pd.DataFrame(train_samples)\ntest_df = pd.DataFrame(test_samples)\nval_df = pd.DataFrame(val_samples)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:10.981621Z","iopub.execute_input":"2024-08-08T05:13:10.982072Z","iopub.status.idle":"2024-08-08T05:13:11.492410Z","shell.execute_reply.started":"2024-08-08T05:13:10.982001Z","shell.execute_reply":"2024-08-08T05:13:11.490880Z"},"trusted":true},"execution_count":191,"outputs":[]},{"cell_type":"code","source":"train_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:11.494159Z","iopub.execute_input":"2024-08-08T05:13:11.494799Z","iopub.status.idle":"2024-08-08T05:13:11.512746Z","shell.execute_reply.started":"2024-08-08T05:13:11.494743Z","shell.execute_reply":"2024-08-08T05:13:11.510692Z"},"trusted":true},"execution_count":192,"outputs":[{"execution_count":192,"output_type":"execute_result","data":{"text/plain":"      target                                               text  line_number  \\\n0  OBJECTIVE  To investigate the efficacy of @ weeks of dail...            0   \n1    METHODS  A total of @ patients with primary knee OA wer...            1   \n2    METHODS  Outcome measures included pain reduction and i...            2   \n3    METHODS  Pain was assessed using the visual analog pain...            3   \n4    METHODS  Secondary outcome measures included the Wester...            4   \n\n   total_lines  \n0           11  \n1           11  \n2           11  \n3           11  \n4           11  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>target</th>\n      <th>text</th>\n      <th>line_number</th>\n      <th>total_lines</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>OBJECTIVE</td>\n      <td>To investigate the efficacy of @ weeks of dail...</td>\n      <td>0</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>METHODS</td>\n      <td>A total of @ patients with primary knee OA wer...</td>\n      <td>1</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>METHODS</td>\n      <td>Outcome measures included pain reduction and i...</td>\n      <td>2</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>METHODS</td>\n      <td>Pain was assessed using the visual analog pain...</td>\n      <td>3</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>METHODS</td>\n      <td>Secondary outcome measures included the Wester...</td>\n      <td>4</td>\n      <td>11</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"train_df.total_lines.plot.hist()","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:11.514759Z","iopub.execute_input":"2024-08-08T05:13:11.515178Z","iopub.status.idle":"2024-08-08T05:13:11.851436Z","shell.execute_reply.started":"2024-08-08T05:13:11.515143Z","shell.execute_reply":"2024-08-08T05:13:11.850320Z"},"trusted":true},"execution_count":193,"outputs":[{"execution_count":193,"output_type":"execute_result","data":{"text/plain":"<Axes: ylabel='Frequency'>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"train_sentences = train_df['text'].tolist()\ntest_sentences = test_df['text'].tolist()\nval_sentences = val_df['text'].tolist()","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:11.852976Z","iopub.execute_input":"2024-08-08T05:13:11.853467Z","iopub.status.idle":"2024-08-08T05:13:11.868182Z","shell.execute_reply.started":"2024-08-08T05:13:11.853423Z","shell.execute_reply":"2024-08-08T05:13:11.866927Z"},"trusted":true},"execution_count":194,"outputs":[]},{"cell_type":"code","source":"train_labels = train_df['target'].to_numpy()\ntest_labels = test_df['target'].to_numpy()\nval_labels = val_df['target'].to_numpy()","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:11.869734Z","iopub.execute_input":"2024-08-08T05:13:11.870218Z","iopub.status.idle":"2024-08-08T05:13:11.883659Z","shell.execute_reply.started":"2024-08-08T05:13:11.870173Z","shell.execute_reply":"2024-08-08T05:13:11.882451Z"},"trusted":true},"execution_count":195,"outputs":[]},{"cell_type":"code","source":"train_labels[:10]","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:11.885578Z","iopub.execute_input":"2024-08-08T05:13:11.886035Z","iopub.status.idle":"2024-08-08T05:13:11.903096Z","shell.execute_reply.started":"2024-08-08T05:13:11.885974Z","shell.execute_reply":"2024-08-08T05:13:11.901820Z"},"trusted":true},"execution_count":196,"outputs":[{"execution_count":196,"output_type":"execute_result","data":{"text/plain":"array(['OBJECTIVE', 'METHODS', 'METHODS', 'METHODS', 'METHODS', 'METHODS',\n       'RESULTS', 'RESULTS', 'RESULTS', 'RESULTS'], dtype=object)"},"metadata":{}}]},{"cell_type":"code","source":"train_sentences[:10]","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:11.904809Z","iopub.execute_input":"2024-08-08T05:13:11.905295Z","iopub.status.idle":"2024-08-08T05:13:11.918572Z","shell.execute_reply.started":"2024-08-08T05:13:11.905258Z","shell.execute_reply":"2024-08-08T05:13:11.917238Z"},"trusted":true},"execution_count":197,"outputs":[{"execution_count":197,"output_type":"execute_result","data":{"text/plain":"['To investigate the efficacy of @ weeks of daily low-dose oral prednisolone in improving pain , mobility , and systemic low-grade inflammation in the short term and whether the effect would be sustained at @ weeks in older adults with moderate to severe knee osteoarthritis ( OA ) .',\n 'A total of @ patients with primary knee OA were randomized @:@ ; @ received @ mg/day of prednisolone and @ received placebo for @ weeks .',\n 'Outcome measures included pain reduction and improvement in function scores and systemic inflammation markers .',\n 'Pain was assessed using the visual analog pain scale ( @-@ mm ) .',\n 'Secondary outcome measures included the Western Ontario and McMaster Universities Osteoarthritis Index scores , patient global assessment ( PGA ) of the severity of knee OA , and @-min walk distance ( @MWD ) .',\n 'Serum levels of interleukin @ ( IL-@ ) , IL-@ , tumor necrosis factor ( TNF ) - , and high-sensitivity C-reactive protein ( hsCRP ) were measured .',\n 'There was a clinically relevant reduction in the intervention group compared to the placebo group for knee pain , physical function , PGA , and @MWD at @ weeks .',\n 'The mean difference between treatment arms ( @ % CI ) was @ ( @-@ @ ) , p < @ ; @ ( @-@ @ ) , p < @ ; @ ( @-@ @ ) , p < @ ; and @ ( @-@ @ ) , p < @ , respectively .',\n 'Further , there was a clinically relevant reduction in the serum levels of IL-@ , IL-@ , TNF - , and hsCRP at @ weeks in the intervention group when compared to the placebo group .',\n 'These differences remained significant at @ weeks .']"},"metadata":{}}]},{"cell_type":"markdown","source":"# **Make numerical Labels**","metadata":{}},{"cell_type":"code","source":"from sklearn.preprocessing import OneHotEncoder\nencoder = OneHotEncoder(sparse = False)\n\ntrain_labels_onehot = encoder.fit_transform(train_labels.reshape(-1,1))\ntest_labels_onehot = encoder.fit_transform(test_labels.reshape(-1,1))\nval_labels_onehot = encoder.fit_transform(val_labels.reshape(-1,1))","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:11.920067Z","iopub.execute_input":"2024-08-08T05:13:11.920428Z","iopub.status.idle":"2024-08-08T05:13:12.041222Z","shell.execute_reply.started":"2024-08-08T05:13:11.920399Z","shell.execute_reply":"2024-08-08T05:13:12.040021Z"},"trusted":true},"execution_count":198,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/preprocessing/_encoders.py:868: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/preprocessing/_encoders.py:868: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n/opt/conda/lib/python3.10/site-packages/sklearn/preprocessing/_encoders.py:868: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n","output_type":"stream"}]},{"cell_type":"code","source":"train_labels_onehot[:1]","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:12.042772Z","iopub.execute_input":"2024-08-08T05:13:12.043277Z","iopub.status.idle":"2024-08-08T05:13:12.052721Z","shell.execute_reply.started":"2024-08-08T05:13:12.043233Z","shell.execute_reply":"2024-08-08T05:13:12.051550Z"},"trusted":true},"execution_count":199,"outputs":[{"execution_count":199,"output_type":"execute_result","data":{"text/plain":"array([[0., 0., 0., 1., 0.]])"},"metadata":{}}]},{"cell_type":"markdown","source":"# **Labeled Encoding**","metadata":{}},{"cell_type":"code","source":"from sklearn.preprocessing import LabelEncoder\nlabelenc = LabelEncoder()","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:12.054439Z","iopub.execute_input":"2024-08-08T05:13:12.054872Z","iopub.status.idle":"2024-08-08T05:13:12.064688Z","shell.execute_reply.started":"2024-08-08T05:13:12.054839Z","shell.execute_reply":"2024-08-08T05:13:12.063456Z"},"trusted":true},"execution_count":200,"outputs":[]},{"cell_type":"code","source":"train_label_encoder = labelenc.fit_transform(train_labels.reshape(-1,1))\ntest_label_encoder = labelenc.fit_transform(test_labels.reshape(-1,1))\nval_label_encoder = labelenc.fit_transform(val_labels.reshape(-1,1))","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:12.066548Z","iopub.execute_input":"2024-08-08T05:13:12.066938Z","iopub.status.idle":"2024-08-08T05:13:12.154702Z","shell.execute_reply.started":"2024-08-08T05:13:12.066895Z","shell.execute_reply":"2024-08-08T05:13:12.153454Z"},"trusted":true},"execution_count":201,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/preprocessing/_label.py:116: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n  y = column_or_1d(y, warn=True)\n/opt/conda/lib/python3.10/site-packages/sklearn/preprocessing/_label.py:116: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n  y = column_or_1d(y, warn=True)\n/opt/conda/lib/python3.10/site-packages/sklearn/preprocessing/_label.py:116: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n  y = column_or_1d(y, warn=True)\n","output_type":"stream"}]},{"cell_type":"code","source":"train_label_encoder[:1]","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:12.156353Z","iopub.execute_input":"2024-08-08T05:13:12.156728Z","iopub.status.idle":"2024-08-08T05:13:12.163801Z","shell.execute_reply.started":"2024-08-08T05:13:12.156696Z","shell.execute_reply":"2024-08-08T05:13:12.162742Z"},"trusted":true},"execution_count":202,"outputs":[{"execution_count":202,"output_type":"execute_result","data":{"text/plain":"array([3])"},"metadata":{}}]},{"cell_type":"code","source":"val_label_encoder[:10]","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:12.165053Z","iopub.execute_input":"2024-08-08T05:13:12.165448Z","iopub.status.idle":"2024-08-08T05:13:12.177906Z","shell.execute_reply.started":"2024-08-08T05:13:12.165410Z","shell.execute_reply":"2024-08-08T05:13:12.176478Z"},"trusted":true},"execution_count":203,"outputs":[{"execution_count":203,"output_type":"execute_result","data":{"text/plain":"array([0, 0, 3, 2, 2, 4, 4, 4, 4, 1])"},"metadata":{}}]},{"cell_type":"markdown","source":"# **Building a baseline model**","metadata":{}},{"cell_type":"code","source":"from sklearn.naive_bayes import MultinomialNB\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.pipeline import Pipeline\n\nmodel_0 = Pipeline([\n\n    ('tf-idf', TfidfVectorizer()),\n    ('clf', MultinomialNB())\n]\n)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:12.179169Z","iopub.execute_input":"2024-08-08T05:13:12.179607Z","iopub.status.idle":"2024-08-08T05:13:12.191890Z","shell.execute_reply.started":"2024-08-08T05:13:12.179561Z","shell.execute_reply":"2024-08-08T05:13:12.190364Z"},"trusted":true},"execution_count":204,"outputs":[]},{"cell_type":"code","source":"model_0.fit(train_sentences,train_label_encoder)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:12.193583Z","iopub.execute_input":"2024-08-08T05:13:12.193989Z","iopub.status.idle":"2024-08-08T05:13:14.169362Z","shell.execute_reply.started":"2024-08-08T05:13:12.193954Z","shell.execute_reply":"2024-08-08T05:13:14.160199Z"},"trusted":true},"execution_count":205,"outputs":[{"name":"stdout","text":"Unexpected exception formatting exception. Falling back to standard exception\n","output_type":"stream"},{"name":"stderr","text":"Traceback (most recent call last):\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3553, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File \"/tmp/ipykernel_33/4271457621.py\", line 1, in <module>\n    model_0.fit(train_sentences,train_label_encoder)\n  File \"/opt/conda/lib/python3.10/site-packages/sklearn/pipeline.py\", line 401, in fit\n    Xt = self._fit(X, y, **fit_params_steps)\n  File \"/opt/conda/lib/python3.10/site-packages/sklearn/pipeline.py\", line 359, in _fit\n    X, fitted_transformer = fit_transform_one_cached(\n  File \"/opt/conda/lib/python3.10/site-packages/joblib/memory.py\", line 312, in __call__\n    return self.func(*args, **kwargs)\n  File \"/opt/conda/lib/python3.10/site-packages/sklearn/pipeline.py\", line 893, in _fit_transform_one\n    res = transformer.fit_transform(X, y, **fit_params)\n  File \"/opt/conda/lib/python3.10/site-packages/sklearn/feature_extraction/text.py\", line 2133, in fit_transform\n    X = super().fit_transform(raw_documents)\n  File \"/opt/conda/lib/python3.10/site-packages/sklearn/feature_extraction/text.py\", line 1388, in fit_transform\n    vocabulary, X = self._count_vocab(raw_documents, self.fixed_vocabulary_)\n  File \"/opt/conda/lib/python3.10/site-packages/sklearn/feature_extraction/text.py\", line -1, in _count_vocab\nKeyboardInterrupt\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 2144, in showtraceback\n    stb = self.InteractiveTB.structured_traceback(\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 1435, in structured_traceback\n    return FormattedTB.structured_traceback(\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 1326, in structured_traceback\n    return VerboseTB.structured_traceback(\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 1173, in structured_traceback\n    formatted_exception = self.format_exception_as_a_whole(etype, evalue, etb, number_of_lines_of_context,\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 1088, in format_exception_as_a_whole\n    frames.append(self.format_record(record))\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 970, in format_record\n    frame_info.lines, Colors, self.has_colors, lvals\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 792, in lines\n    return self._sd.lines\n  File \"/opt/conda/lib/python3.10/site-packages/stack_data/utils.py\", line 145, in cached_property_wrapper\n    value = obj.__dict__[self.func.__name__] = self.func(obj)\n  File \"/opt/conda/lib/python3.10/site-packages/stack_data/core.py\", line 734, in lines\n    pieces = self.included_pieces\n  File \"/opt/conda/lib/python3.10/site-packages/stack_data/utils.py\", line 145, in cached_property_wrapper\n    value = obj.__dict__[self.func.__name__] = self.func(obj)\n  File \"/opt/conda/lib/python3.10/site-packages/stack_data/core.py\", line 681, in included_pieces\n    pos = scope_pieces.index(self.executing_piece)\n  File \"/opt/conda/lib/python3.10/site-packages/stack_data/utils.py\", line 145, in cached_property_wrapper\n    value = obj.__dict__[self.func.__name__] = self.func(obj)\n  File \"/opt/conda/lib/python3.10/site-packages/stack_data/core.py\", line 660, in executing_piece\n    return only(\n  File \"/opt/conda/lib/python3.10/site-packages/executing/executing.py\", line 116, in only\n    raise NotOneValueFound('Expected one value, found 0')\nexecuting.executing.NotOneValueFound: Expected one value, found 0\n","output_type":"stream"}]},{"cell_type":"code","source":"acc0 = model_0.score(test_sentences,test_label_encoder)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.170340Z","iopub.status.idle":"2024-08-08T05:13:14.170801Z","shell.execute_reply.started":"2024-08-08T05:13:14.170580Z","shell.execute_reply":"2024-08-08T05:13:14.170599Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"acc0","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.172543Z","iopub.status.idle":"2024-08-08T05:13:14.173001Z","shell.execute_reply.started":"2024-08-08T05:13:14.172789Z","shell.execute_reply":"2024-08-08T05:13:14.172808Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"base_preds = model_0.predict(test_sentences)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.175427Z","iopub.status.idle":"2024-08-08T05:13:14.175970Z","shell.execute_reply.started":"2024-08-08T05:13:14.175713Z","shell.execute_reply":"2024-08-08T05:13:14.175735Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"!wget https://raw.githubusercontent.com/mrdbourke/tensorflow-deep-learning/main/extras/helper_functions.py","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.178973Z","iopub.status.idle":"2024-08-08T05:13:14.180252Z","shell.execute_reply.started":"2024-08-08T05:13:14.179888Z","shell.execute_reply":"2024-08-08T05:13:14.179919Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"base_preds.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.182202Z","iopub.status.idle":"2024-08-08T05:13:14.182825Z","shell.execute_reply.started":"2024-08-08T05:13:14.182530Z","shell.execute_reply":"2024-08-08T05:13:14.182557Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"test_label_encoder.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.184863Z","iopub.status.idle":"2024-08-08T05:13:14.185492Z","shell.execute_reply.started":"2024-08-08T05:13:14.185181Z","shell.execute_reply":"2024-08-08T05:13:14.185208Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from helper_functions import calculate_results\ncalculate_results(test_label_encoder,base_preds)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.187802Z","iopub.status.idle":"2024-08-08T05:13:14.188287Z","shell.execute_reply.started":"2024-08-08T05:13:14.188056Z","shell.execute_reply":"2024-08-08T05:13:14.188083Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# **Preparing data for deep sequence models**","metadata":{}},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport tensorflow as tf\nfrom tensorflow.keras import layers","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.189808Z","iopub.status.idle":"2024-08-08T05:13:14.190258Z","shell.execute_reply.started":"2024-08-08T05:13:14.190047Z","shell.execute_reply":"2024-08-08T05:13:14.190072Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"leng = 0\nsen_len = []\nfor sentence in train_sentences:\n#     print(sentence.split())\n#     print(len(sentence.split()))\n#     break\n    sen_len.append(len(sentence.split()))\navg = np.mean(sen_len)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.192125Z","iopub.status.idle":"2024-08-08T05:13:14.192539Z","shell.execute_reply.started":"2024-08-08T05:13:14.192339Z","shell.execute_reply":"2024-08-08T05:13:14.192356Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"avg,sen_len[:3]","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.193648Z","iopub.status.idle":"2024-08-08T05:13:14.194095Z","shell.execute_reply.started":"2024-08-08T05:13:14.193868Z","shell.execute_reply":"2024-08-08T05:13:14.193886Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nplt.hist(sen_len, bins = 20, edgecolor='black');","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.195792Z","iopub.status.idle":"2024-08-08T05:13:14.196246Z","shell.execute_reply.started":"2024-08-08T05:13:14.196029Z","shell.execute_reply":"2024-08-08T05:13:14.196052Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# **Create a text vectorizer**","metadata":{}},{"cell_type":"code","source":"max_tokens = 68000\n\nfrom tensorflow.keras.layers import TextVectorization\nvectorizer = TextVectorization(\nmax_tokens=max_tokens,\n    standardize='lower_and_strip_punctuation',\n    split='whitespace',\n    ngrams=None,\n    output_mode='int',\noutput_sequence_length= 55)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.198669Z","iopub.status.idle":"2024-08-08T05:13:14.199135Z","shell.execute_reply.started":"2024-08-08T05:13:14.198890Z","shell.execute_reply":"2024-08-08T05:13:14.198908Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"vectorizer.adapt(train_sentences)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.200453Z","iopub.status.idle":"2024-08-08T05:13:14.200914Z","shell.execute_reply.started":"2024-08-08T05:13:14.200696Z","shell.execute_reply":"2024-08-08T05:13:14.200715Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"words = vectorizer.get_vocabulary()\nwords[:5]","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.203392Z","iopub.status.idle":"2024-08-08T05:13:14.203828Z","shell.execute_reply.started":"2024-08-08T05:13:14.203629Z","shell.execute_reply":"2024-08-08T05:13:14.203647Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"vectorizer(train_sentences[1])","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.205526Z","iopub.status.idle":"2024-08-08T05:13:14.205998Z","shell.execute_reply.started":"2024-08-08T05:13:14.205739Z","shell.execute_reply":"2024-08-08T05:13:14.205780Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"vectorizer.get_config()","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.207661Z","iopub.status.idle":"2024-08-08T05:13:14.208092Z","shell.execute_reply.started":"2024-08-08T05:13:14.207863Z","shell.execute_reply":"2024-08-08T05:13:14.207879Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# **Create an Embedding layer**","metadata":{}},{"cell_type":"code","source":"embedded = layers.Embedding(\n input_dim = len(words),\n    output_dim = 128,\n    embeddings_initializer='uniform',\nmask_zero = True)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.210232Z","iopub.status.idle":"2024-08-08T05:13:14.210644Z","shell.execute_reply.started":"2024-08-08T05:13:14.210453Z","shell.execute_reply":"2024-08-08T05:13:14.210470Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(train_sentences[2])\nprint(vectorizer([train_sentences[2]]))\n\nexp = embedded(vectorizer([train_sentences[2]]))\nexp.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.211899Z","iopub.status.idle":"2024-08-08T05:13:14.212348Z","shell.execute_reply.started":"2024-08-08T05:13:14.212148Z","shell.execute_reply":"2024-08-08T05:13:14.212166Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## **Creating Datasets**","metadata":{}},{"cell_type":"code","source":"train_dataset = tf.data.Dataset.from_tensor_slices((train_sentences,train_labels_onehot))\ntest_dataset = tf.data.Dataset.from_tensor_slices((test_sentences,test_labels_onehot))\nval_dataset = tf.data.Dataset.from_tensor_slices((val_sentences,val_labels_onehot))","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.213778Z","iopub.status.idle":"2024-08-08T05:13:14.214272Z","shell.execute_reply.started":"2024-08-08T05:13:14.213993Z","shell.execute_reply":"2024-08-08T05:13:14.214035Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_dataset","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.216159Z","iopub.status.idle":"2024-08-08T05:13:14.216608Z","shell.execute_reply.started":"2024-08-08T05:13:14.216409Z","shell.execute_reply":"2024-08-08T05:13:14.216427Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_dataset = train_dataset.batch(32).prefetch(tf.data.AUTOTUNE)\ntest_dataset = test_dataset.batch(32).prefetch(tf.data.AUTOTUNE)\nval_dataset = val_dataset.batch(32).prefetch(tf.data.AUTOTUNE)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.217771Z","iopub.status.idle":"2024-08-08T05:13:14.218218Z","shell.execute_reply.started":"2024-08-08T05:13:14.217967Z","shell.execute_reply":"2024-08-08T05:13:14.217993Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_dataset","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.220584Z","iopub.status.idle":"2024-08-08T05:13:14.220990Z","shell.execute_reply.started":"2024-08-08T05:13:14.220798Z","shell.execute_reply":"2024-08-08T05:13:14.220815Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"val_dataset","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.222208Z","iopub.status.idle":"2024-08-08T05:13:14.222747Z","shell.execute_reply.started":"2024-08-08T05:13:14.222491Z","shell.execute_reply":"2024-08-08T05:13:14.222515Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# **Using Conv1D with token embeddings**","metadata":{}},{"cell_type":"code","source":"inputs = layers.Input((1,), dtype = tf.string)\nx = vectorizer(inputs)\nx = embedded(x)\nx = layers.Conv1D(64,kernel_size = 5,padding = 'valid', activation = 'relu')(x)\nx = layers.GlobalAveragePooling1D()(x)\noutputs = layers.Dense(5, activation = 'softmax')(x)\nmodel_1 = tf.keras.Model(inputs,outputs)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.225486Z","iopub.status.idle":"2024-08-08T05:13:14.225952Z","shell.execute_reply.started":"2024-08-08T05:13:14.225740Z","shell.execute_reply":"2024-08-08T05:13:14.225760Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model_1.summary()","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.227169Z","iopub.status.idle":"2024-08-08T05:13:14.227555Z","shell.execute_reply.started":"2024-08-08T05:13:14.227367Z","shell.execute_reply":"2024-08-08T05:13:14.227386Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model_1.compile(loss = 'categorical_crossentropy', optimizer = tf.keras.optimizers.Adam(), metrics = ['accuracy'])","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.229544Z","iopub.status.idle":"2024-08-08T05:13:14.229964Z","shell.execute_reply.started":"2024-08-08T05:13:14.229760Z","shell.execute_reply":"2024-08-08T05:13:14.229780Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"\n# # Fit the model\n# model_1_history = model_1.fit(train_dataset,\n#                               steps_per_epoch=int(0.1 * len(train_dataset)), # only fit on 10% of batches for faster training time\n#                               epochs=3,\n#                               validation_data=val_dataset,\n#                               validation_steps=int(0.1 * len(val_dataset))) # only validate on 10% of batches","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.231638Z","iopub.status.idle":"2024-08-08T05:13:14.232124Z","shell.execute_reply.started":"2024-08-08T05:13:14.231860Z","shell.execute_reply":"2024-08-08T05:13:14.231886Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model_1.fit(train_dataset, epochs = 5, steps_per_epoch = int(0.1 * len(train_dataset)), validation_data = (val_dataset),\n           validation_steps = int(len(val_dataset)*0.1))","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.233212Z","iopub.status.idle":"2024-08-08T05:13:14.233610Z","shell.execute_reply.started":"2024-08-08T05:13:14.233419Z","shell.execute_reply":"2024-08-08T05:13:14.233436Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"acc1 = model_1.evaluate(test_dataset)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.235448Z","iopub.status.idle":"2024-08-08T05:13:14.235868Z","shell.execute_reply.started":"2024-08-08T05:13:14.235673Z","shell.execute_reply":"2024-08-08T05:13:14.235691Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"acc1","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.237918Z","iopub.status.idle":"2024-08-08T05:13:14.238419Z","shell.execute_reply.started":"2024-08-08T05:13:14.238210Z","shell.execute_reply":"2024-08-08T05:13:14.238230Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model1_preds = model_1.predict(test_dataset)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.239784Z","iopub.status.idle":"2024-08-08T05:13:14.240460Z","shell.execute_reply.started":"2024-08-08T05:13:14.240224Z","shell.execute_reply":"2024-08-08T05:13:14.240243Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model1_probs = tf.argmax(model1_preds,axis = 1)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.242630Z","iopub.status.idle":"2024-08-08T05:13:14.243192Z","shell.execute_reply.started":"2024-08-08T05:13:14.242897Z","shell.execute_reply":"2024-08-08T05:13:14.242920Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model1_results = calculate_results(test_label_encoder, model1_probs)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.245232Z","iopub.status.idle":"2024-08-08T05:13:14.245789Z","shell.execute_reply.started":"2024-08-08T05:13:14.245508Z","shell.execute_reply":"2024-08-08T05:13:14.245532Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model1_results","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.247177Z","iopub.status.idle":"2024-08-08T05:13:14.247709Z","shell.execute_reply.started":"2024-08-08T05:13:14.247442Z","shell.execute_reply":"2024-08-08T05:13:14.247465Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# **Model 2 Feature Extraction using pre trained embedded layers**","metadata":{}},{"cell_type":"code","source":"import tensorflow_hub as hub\npre_embed = hub.KerasLayer(\"https://tfhub.dev/google/universal-sentence-encoder/4\", \n                          trainable = False,\n                          name = 'universal_sentence_encoder')","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.249630Z","iopub.status.idle":"2024-08-08T05:13:14.250186Z","shell.execute_reply.started":"2024-08-08T05:13:14.249887Z","shell.execute_reply":"2024-08-08T05:13:14.249911Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_sentences[1]","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.251885Z","iopub.status.idle":"2024-08-08T05:13:14.252338Z","shell.execute_reply.started":"2024-08-08T05:13:14.252140Z","shell.execute_reply":"2024-08-08T05:13:14.252158Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"pre_embed([train_sentences[1]]).shape","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.253418Z","iopub.status.idle":"2024-08-08T05:13:14.253806Z","shell.execute_reply.started":"2024-08-08T05:13:14.253618Z","shell.execute_reply":"2024-08-08T05:13:14.253635Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Create a custom layer that wraps the Universal Sentence Encoder\nclass UniversalSentenceEncoder(tf.keras.layers.Layer):\n    def __init__(self, **kwargs):\n        super(UniversalSentenceEncoder, self).__init__(**kwargs)\n        self.encoder = hub.load(\"https://tfhub.dev/google/universal-sentence-encoder/4\")\n\n    def call(self, inputs):\n        return self.encoder(inputs)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.255588Z","iopub.status.idle":"2024-08-08T05:13:14.255979Z","shell.execute_reply.started":"2024-08-08T05:13:14.255793Z","shell.execute_reply":"2024-08-08T05:13:14.255810Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# # Define feature extractor model using TF Hub layer\n# inputs = layers.Input(shape=[], dtype=tf.string)\n# pretrained_embedding = pre_embed(inputs) # tokenize text and create embedding\n# x = layers.Dense(128, activation=\"relu\")(pretrained_embedding) # add a fully connected layer on top of the embedding\n# # Note: you could add more layers here if you wanted to\n# outputs = layers.Dense(5, activation=\"softmax\")(x) # create the output layer\n# model_2 = tf.keras.Model(inputs=inputs,\n#                         outputs=outputs)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.257389Z","iopub.status.idle":"2024-08-08T05:13:14.257802Z","shell.execute_reply.started":"2024-08-08T05:13:14.257589Z","shell.execute_reply":"2024-08-08T05:13:14.257606Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"inputs = layers.Input(shape = [], dtype = tf.string)\n\nx = UniversalSentenceEncoder()(inputs)\nx = layers.Dense(128, activation = 'relu')(x)\noutputs = layers.Dense(5, activation = 'softmax')(x)\n\nmodel2 = tf.keras.Model(inputs,outputs)\n\n\n","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.258912Z","iopub.status.idle":"2024-08-08T05:13:14.259350Z","shell.execute_reply.started":"2024-08-08T05:13:14.259150Z","shell.execute_reply":"2024-08-08T05:13:14.259169Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model2.summary()","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.260857Z","iopub.status.idle":"2024-08-08T05:13:14.261270Z","shell.execute_reply.started":"2024-08-08T05:13:14.261067Z","shell.execute_reply":"2024-08-08T05:13:14.261084Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model2.compile(loss = 'categorical_crossentropy', optimizer = tf.optimizers.Adam(), metrics = ['accuracy'])","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.262806Z","iopub.status.idle":"2024-08-08T05:13:14.263227Z","shell.execute_reply.started":"2024-08-08T05:13:14.263001Z","shell.execute_reply":"2024-08-08T05:13:14.263041Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model2.fit(train_dataset, epochs = 5, validation_data = (val_dataset), \n          steps_per_epoch = int(len(train_dataset)*0.1),validation_steps = int(len(val_dataset)*0.1))","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.265383Z","iopub.status.idle":"2024-08-08T05:13:14.265757Z","shell.execute_reply.started":"2024-08-08T05:13:14.265575Z","shell.execute_reply":"2024-08-08T05:13:14.265591Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"acc2 = model2.evaluate(test_dataset)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.267390Z","iopub.status.idle":"2024-08-08T05:13:14.267787Z","shell.execute_reply.started":"2024-08-08T05:13:14.267594Z","shell.execute_reply":"2024-08-08T05:13:14.267611Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model2_pred = model2.predict(test_dataset)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.269889Z","iopub.status.idle":"2024-08-08T05:13:14.270443Z","shell.execute_reply.started":"2024-08-08T05:13:14.270166Z","shell.execute_reply":"2024-08-08T05:13:14.270190Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model2_probs = tf.argmax(model2_pred, axis = 1)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.272030Z","iopub.status.idle":"2024-08-08T05:13:14.272575Z","shell.execute_reply.started":"2024-08-08T05:13:14.272289Z","shell.execute_reply":"2024-08-08T05:13:14.272313Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"calculate_results(test_label_encoder, model2_probs)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.274517Z","iopub.status.idle":"2024-08-08T05:13:14.275093Z","shell.execute_reply.started":"2024-08-08T05:13:14.274794Z","shell.execute_reply":"2024-08-08T05:13:14.274819Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"acc2","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.277220Z","iopub.status.idle":"2024-08-08T05:13:14.277770Z","shell.execute_reply.started":"2024-08-08T05:13:14.277495Z","shell.execute_reply":"2024-08-08T05:13:14.277520Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# **1 D Convolution with character embeddings**","metadata":{}},{"cell_type":"code","source":"train_sentences[:3]","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.279529Z","iopub.status.idle":"2024-08-08T05:13:14.280093Z","shell.execute_reply.started":"2024-08-08T05:13:14.279798Z","shell.execute_reply":"2024-08-08T05:13:14.279822Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def make_char(sentence):\n   return ' '.join(list(sentence))","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.282058Z","iopub.status.idle":"2024-08-08T05:13:14.282649Z","shell.execute_reply.started":"2024-08-08T05:13:14.282348Z","shell.execute_reply":"2024-08-08T05:13:14.282385Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_chars = [make_char(sentence) for sentence in train_sentences]\ntest_chars = [make_char(sentence) for sentence in test_sentences]\nval_chars = [make_char(sentence) for sentence in val_sentences]","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.284817Z","iopub.status.idle":"2024-08-08T05:13:14.285290Z","shell.execute_reply.started":"2024-08-08T05:13:14.285072Z","shell.execute_reply":"2024-08-08T05:13:14.285093Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_chars[0]","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.286814Z","iopub.status.idle":"2024-08-08T05:13:14.287291Z","shell.execute_reply.started":"2024-08-08T05:13:14.287072Z","shell.execute_reply":"2024-08-08T05:13:14.287092Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"test_chars[0]","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.288918Z","iopub.status.idle":"2024-08-08T05:13:14.289682Z","shell.execute_reply.started":"2024-08-08T05:13:14.289420Z","shell.execute_reply":"2024-08-08T05:13:14.289450Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"val_chars[0]","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.291245Z","iopub.status.idle":"2024-08-08T05:13:14.291656Z","shell.execute_reply.started":"2024-08-08T05:13:14.291459Z","shell.execute_reply":"2024-08-08T05:13:14.291475Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import string\n\ntotal_chars = len(string.ascii_letters)//2 + len(string.digits) + len(string.punctuation)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.293157Z","iopub.status.idle":"2024-08-08T05:13:14.293603Z","shell.execute_reply.started":"2024-08-08T05:13:14.293383Z","shell.execute_reply":"2024-08-08T05:13:14.293409Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"total_chars","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.295137Z","iopub.status.idle":"2024-08-08T05:13:14.295587Z","shell.execute_reply.started":"2024-08-08T05:13:14.295355Z","shell.execute_reply":"2024-08-08T05:13:14.295373Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"count = []\ncount = [len(characters) for characters in train_sentences]\n\n    ","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.297632Z","iopub.status.idle":"2024-08-08T05:13:14.298113Z","shell.execute_reply.started":"2024-08-08T05:13:14.297868Z","shell.execute_reply":"2024-08-08T05:13:14.297887Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"int(np.mean(count))","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.299938Z","iopub.status.idle":"2024-08-08T05:13:14.300478Z","shell.execute_reply.started":"2024-08-08T05:13:14.300265Z","shell.execute_reply":"2024-08-08T05:13:14.300285Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"output_chars = int(np.percentile(count,95))\n","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.301757Z","iopub.status.idle":"2024-08-08T05:13:14.302231Z","shell.execute_reply.started":"2024-08-08T05:13:14.301981Z","shell.execute_reply":"2024-08-08T05:13:14.301999Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"\nchar_vectorizer = TextVectorization(max_tokens= total_chars,\n    standardize='lower_and_strip_punctuation',\n    split='whitespace',\n    ngrams=None,\n    output_mode='int',\n    output_sequence_length=output_chars)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.303635Z","iopub.status.idle":"2024-08-08T05:13:14.304050Z","shell.execute_reply.started":"2024-08-08T05:13:14.303835Z","shell.execute_reply":"2024-08-08T05:13:14.303851Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"char_vectorizer.adapt(train_chars)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.305386Z","iopub.status.idle":"2024-08-08T05:13:14.305785Z","shell.execute_reply.started":"2024-08-08T05:13:14.305595Z","shell.execute_reply":"2024-08-08T05:13:14.305612Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"char_vectorizer(train_chars[1]).shape","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.308251Z","iopub.status.idle":"2024-08-08T05:13:14.308741Z","shell.execute_reply.started":"2024-08-08T05:13:14.308533Z","shell.execute_reply":"2024-08-08T05:13:14.308553Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"char_embed = layers.Embedding(input_dim=total_chars,\n    output_dim = 25,\n    embeddings_initializer='uniform')","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.310048Z","iopub.status.idle":"2024-08-08T05:13:14.310530Z","shell.execute_reply.started":"2024-08-08T05:13:14.310262Z","shell.execute_reply":"2024-08-08T05:13:14.310278Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"inputs = layers.Input((1,), dtype = tf.string)\nx = char_vectorizer(inputs)\nx = char_embed(x)\nx = layers.Conv1D(64,kernel_size = 5, padding = 'same')(x)\nx = layers.GlobalAveragePooling1D()(x)\noutputs = layers.Dense(5, activation = 'softmax')(x)\n\nmodel_3 = tf.keras.Model(inputs,outputs)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.312143Z","iopub.status.idle":"2024-08-08T05:13:14.312535Z","shell.execute_reply.started":"2024-08-08T05:13:14.312342Z","shell.execute_reply":"2024-08-08T05:13:14.312358Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model_3.summary()","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.314194Z","iopub.status.idle":"2024-08-08T05:13:14.314610Z","shell.execute_reply.started":"2024-08-08T05:13:14.314422Z","shell.execute_reply":"2024-08-08T05:13:14.314439Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model_3.compile(loss = 'categorical_crossentropy', optimizer = tf.keras.optimizers.Adam(), metrics = ['accuracy'])","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.315861Z","iopub.status.idle":"2024-08-08T05:13:14.316363Z","shell.execute_reply.started":"2024-08-08T05:13:14.316091Z","shell.execute_reply":"2024-08-08T05:13:14.316169Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_chars_dataset = tf.data.Dataset.from_tensor_slices((train_chars,train_labels_onehot)).batch(32).prefetch(tf.data.AUTOTUNE)\ntest_chars_dataset = tf.data.Dataset.from_tensor_slices((test_chars, test_labels_onehot)).batch(32).prefetch(tf.data.AUTOTUNE)\nval_chars_dataset = tf.data.Dataset.from_tensor_slices((val_chars, val_labels_onehot)).batch(32).prefetch(tf.data.AUTOTUNE)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.318714Z","iopub.status.idle":"2024-08-08T05:13:14.319256Z","shell.execute_reply.started":"2024-08-08T05:13:14.318944Z","shell.execute_reply":"2024-08-08T05:13:14.318966Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"history_3 = model_3.fit(train_chars_dataset, epochs = 5,\n                        steps_per_epoch = int(0.1* len(train_chars_dataset)),\n                        validation_data = val_chars_dataset,\n                        validation_steps = int(0.1* len(val_chars_dataset)))","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.322476Z","iopub.status.idle":"2024-08-08T05:13:14.322999Z","shell.execute_reply.started":"2024-08-08T05:13:14.322766Z","shell.execute_reply":"2024-08-08T05:13:14.322787Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"acc3 = model_3.evaluate(test_chars_dataset)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.325168Z","iopub.status.idle":"2024-08-08T05:13:14.325616Z","shell.execute_reply.started":"2024-08-08T05:13:14.325412Z","shell.execute_reply":"2024-08-08T05:13:14.325432Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model3_preds = model_3.predict(test_chars_dataset)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.327000Z","iopub.status.idle":"2024-08-08T05:13:14.327437Z","shell.execute_reply.started":"2024-08-08T05:13:14.327242Z","shell.execute_reply":"2024-08-08T05:13:14.327260Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model3_probs = tf.argmax(model3_preds, axis = 1)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.329189Z","iopub.status.idle":"2024-08-08T05:13:14.329812Z","shell.execute_reply.started":"2024-08-08T05:13:14.329484Z","shell.execute_reply":"2024-08-08T05:13:14.329516Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model3_results = calculate_results(test_label_encoder,model3_probs)\nmodel3_results","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.331979Z","iopub.status.idle":"2024-08-08T05:13:14.332678Z","shell.execute_reply.started":"2024-08-08T05:13:14.332271Z","shell.execute_reply":"2024-08-08T05:13:14.332296Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"acc3","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:17:15.609572Z","iopub.execute_input":"2024-08-08T05:17:15.610093Z","iopub.status.idle":"2024-08-08T05:17:15.618225Z","shell.execute_reply.started":"2024-08-08T05:17:15.610054Z","shell.execute_reply":"2024-08-08T05:17:15.617024Z"},"trusted":true},"execution_count":206,"outputs":[{"execution_count":206,"output_type":"execute_result","data":{"text/plain":"[1.3225750923156738, 0.45189979672431946]"},"metadata":{}}]},{"cell_type":"markdown","source":"# **model4 combining pretrained token embeddings and character level embeddings**","metadata":{}},{"cell_type":"code","source":"# Create a custom layer that wraps the Universal Sentence Encoder\nclass UniversalSentenceEncoder(tf.keras.layers.Layer):\n    def __init__(self, **kwargs):\n        super(UniversalSentenceEncoder, self).__init__(**kwargs)\n        self.encoder = hub.load(\"https://tfhub.dev/google/universal-sentence-encoder/4\")\n\n    def call(self, inputs):\n        return self.encoder(inputs)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.340855Z","iopub.status.idle":"2024-08-08T05:13:14.341313Z","shell.execute_reply.started":"2024-08-08T05:13:14.341098Z","shell.execute_reply":"2024-08-08T05:13:14.341117Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"token_inputs = layers.Input([], dtype = tf.string)\ntoken_embedding = UniversalSentenceEncoder()(token_inputs)\ntoken_output = layers.Dense(128, activation = 'relu')(token_embedding)\ntoken_model = tf.keras.Model(token_inputs, token_output)\n\nchar_inputs = layers.Input((1,), dtype = tf.string)\nchar_vector = char_vectorizer(char_inputs)\nchar_embedding = char_embed(char_vector)\nchar_output = layers.Bidirectional(layers.LSTM(25))(char_embedding)\nchar_model = tf.keras.Model(char_inputs, char_output)\n\nconcat_output = layers.Concatenate()([token_model.output, char_model.output])\n\ncombine_drop = layers.Dropout(0.5)(concat_output)\ncombine_dense = layers.Dense(200, activation = 'relu')(combine_drop)\nagain_drop  = layers.Dropout(0.5)(combine_dense)\noutput_layer = layers.Dense(5,activation = 'softmax')(again_drop)\n\nmodel4 = tf.keras.Model(inputs = [token_model.input, char_model.input],\n                       outputs = output_layer)\n","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.342568Z","iopub.status.idle":"2024-08-08T05:13:14.342942Z","shell.execute_reply.started":"2024-08-08T05:13:14.342763Z","shell.execute_reply":"2024-08-08T05:13:14.342778Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model4.compile(loss = 'categorical_crossentropy', optimizer= tf._optimizers.Adam(), metrics = ['accuracy'])","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.345032Z","iopub.status.idle":"2024-08-08T05:13:14.345579Z","shell.execute_reply.started":"2024-08-08T05:13:14.345294Z","shell.execute_reply":"2024-08-08T05:13:14.345321Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model4.summary()","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:13:14.347115Z","iopub.status.idle":"2024-08-08T05:13:14.347644Z","shell.execute_reply.started":"2024-08-08T05:13:14.347375Z","shell.execute_reply":"2024-08-08T05:13:14.347398Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from tensorflow.keras.utils import plot_model\nplot_model(model4)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:17:23.224061Z","iopub.execute_input":"2024-08-08T05:17:23.224500Z","iopub.status.idle":"2024-08-08T05:17:23.511619Z","shell.execute_reply.started":"2024-08-08T05:17:23.224469Z","shell.execute_reply":"2024-08-08T05:17:23.510133Z"},"trusted":true},"execution_count":207,"outputs":[{"execution_count":207,"output_type":"execute_result","data":{"image/png":"","text/plain":"<IPython.core.display.Image object>"},"metadata":{}}]},{"cell_type":"code","source":"train_mix_tokens = tf.data.Dataset.from_tensor_slices((train_sentences, train_chars))\ntrain_mix_labels = tf.data.Dataset.from_tensor_slices(train_labels_onehot)\n\ntrain_mix_dataset = tf.data.Dataset.zip((train_mix_tokens,train_mix_labels))\n\ntrain_mix_dataset = train_mix_dataset.batch(32).prefetch(tf.data.AUTOTUNE)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:47:11.149547Z","iopub.execute_input":"2024-08-08T05:47:11.149960Z","iopub.status.idle":"2024-08-08T05:47:13.047165Z","shell.execute_reply.started":"2024-08-08T05:47:11.149929Z","shell.execute_reply":"2024-08-08T05:47:13.045691Z"},"trusted":true},"execution_count":213,"outputs":[]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"val_mix_tokens = tf.data.Dataset.from_tensor_slices((val_sentences,val_chars))\nval_mix_labels = tf.data.Dataset.from_tensor_slices(val_labels_onehot)\n\nval_mix_dataset = tf.data.Dataset.zip((val_mix_tokens,val_mix_labels))\n\nval_mix_dataset = val_mix_dataset.batch(32).prefetch(tf.data.AUTOTUNE)\n\n","metadata":{"execution":{"iopub.status.busy":"2024-08-08T05:49:57.853293Z","iopub.execute_input":"2024-08-08T05:49:57.853782Z","iopub.status.idle":"2024-08-08T05:49:58.178913Z","shell.execute_reply.started":"2024-08-08T05:49:57.853750Z","shell.execute_reply":"2024-08-08T05:49:58.177210Z"},"trusted":true},"execution_count":216,"outputs":[]},{"cell_type":"code","source":"history4 = model4.fit(train_mix_dataset, \n                     validation_data = val_mix_dataset,\n                     epochs = 5,\n                     steps_per_epoch = int(0.1* len(train_mix_dataset)),\n                     validation_steps = int(0.1 * len(val_mix_dataset)))","metadata":{"execution":{"iopub.status.busy":"2024-08-08T06:19:45.268743Z","iopub.execute_input":"2024-08-08T06:19:45.271756Z","iopub.status.idle":"2024-08-08T06:26:15.108882Z","shell.execute_reply.started":"2024-08-08T06:19:45.271669Z","shell.execute_reply":"2024-08-08T06:26:15.107575Z"},"trusted":true},"execution_count":217,"outputs":[{"name":"stdout","text":"Epoch 1/5\n\u001b[1m562/562\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m84s\u001b[0m 136ms/step - accuracy: 0.5266 - loss: 1.1461 - val_accuracy: 0.7011 - val_loss: 0.7865\nEpoch 2/5\n\u001b[1m562/562\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m75s\u001b[0m 134ms/step - accuracy: 0.6893 - loss: 0.8092 - val_accuracy: 0.7197 - val_loss: 0.7156\nEpoch 3/5\n\u001b[1m562/562\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m74s\u001b[0m 132ms/step - accuracy: 0.7048 - loss: 0.7737 - val_accuracy: 0.7357 - val_loss: 0.6869\nEpoch 4/5\n\u001b[1m562/562\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m74s\u001b[0m 131ms/step - accuracy: 0.7258 - loss: 0.7401 - val_accuracy: 0.7437 - val_loss: 0.6769\nEpoch 5/5\n\u001b[1m562/562\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m75s\u001b[0m 134ms/step - accuracy: 0.7178 - loss: 0.7422 - val_accuracy: 0.7410 - val_loss: 0.6790\n","output_type":"stream"}]},{"cell_type":"code","source":"acc4 = model4.evaluate(val_mix_dataset)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T06:26:48.932905Z","iopub.execute_input":"2024-08-08T06:26:48.933369Z","iopub.status.idle":"2024-08-08T06:27:22.168822Z","shell.execute_reply.started":"2024-08-08T06:26:48.933328Z","shell.execute_reply":"2024-08-08T06:27:22.167402Z"},"trusted":true},"execution_count":218,"outputs":[{"name":"stdout","text":"\u001b[1m945/945\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m33s\u001b[0m 35ms/step - accuracy: 0.7432 - loss: 0.6703\n","output_type":"stream"}]},{"cell_type":"code","source":"model4_pred = model4.predict(val_mix_dataset)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T06:28:20.653123Z","iopub.execute_input":"2024-08-08T06:28:20.653587Z","iopub.status.idle":"2024-08-08T06:28:56.067536Z","shell.execute_reply.started":"2024-08-08T06:28:20.653548Z","shell.execute_reply":"2024-08-08T06:28:56.066270Z"},"trusted":true},"execution_count":220,"outputs":[{"name":"stdout","text":"\u001b[1m945/945\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m35s\u001b[0m 37ms/step\n","output_type":"stream"}]},{"cell_type":"code","source":"model4_probs = tf.argmax(model4_pred, axis = 1)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T06:29:24.936697Z","iopub.execute_input":"2024-08-08T06:29:24.937147Z","iopub.status.idle":"2024-08-08T06:29:24.943859Z","shell.execute_reply.started":"2024-08-08T06:29:24.937111Z","shell.execute_reply":"2024-08-08T06:29:24.942679Z"},"trusted":true},"execution_count":221,"outputs":[]},{"cell_type":"code","source":"model4_results = calculate_results(val_label_encoder, model4_probs)\nmodel4_results","metadata":{"execution":{"iopub.status.busy":"2024-08-08T06:31:21.390542Z","iopub.execute_input":"2024-08-08T06:31:21.390964Z","iopub.status.idle":"2024-08-08T06:31:21.415747Z","shell.execute_reply.started":"2024-08-08T06:31:21.390930Z","shell.execute_reply":"2024-08-08T06:31:21.414643Z"},"trusted":true},"execution_count":223,"outputs":[{"execution_count":223,"output_type":"execute_result","data":{"text/plain":"{'accuracy': 74.33470144313517,\n 'precision': 0.7408470238703434,\n 'recall': 0.7433470144313518,\n 'f1': 0.7369478317109494}"},"metadata":{}}]},{"cell_type":"code","source":"acc4","metadata":{"execution":{"iopub.status.busy":"2024-08-08T06:33:28.623603Z","iopub.execute_input":"2024-08-08T06:33:28.624040Z","iopub.status.idle":"2024-08-08T06:33:28.631848Z","shell.execute_reply.started":"2024-08-08T06:33:28.623990Z","shell.execute_reply":"2024-08-08T06:33:28.630627Z"},"trusted":true},"execution_count":225,"outputs":[{"execution_count":225,"output_type":"execute_result","data":{"text/plain":"[0.6717339754104614, 0.7433469891548157]"},"metadata":{}}]},{"cell_type":"markdown","source":"# **Model 5: Transfer Learning with pretrained token embeddings + character embeddings + positional embeddings**","metadata":{}},{"cell_type":"code","source":"train_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-08T06:35:31.395316Z","iopub.execute_input":"2024-08-08T06:35:31.395797Z","iopub.status.idle":"2024-08-08T06:35:31.410784Z","shell.execute_reply.started":"2024-08-08T06:35:31.395763Z","shell.execute_reply":"2024-08-08T06:35:31.409560Z"},"trusted":true},"execution_count":226,"outputs":[{"execution_count":226,"output_type":"execute_result","data":{"text/plain":"      target                                               text  line_number  \\\n0  OBJECTIVE  To investigate the efficacy of @ weeks of dail...            0   \n1    METHODS  A total of @ patients with primary knee OA wer...            1   \n2    METHODS  Outcome measures included pain reduction and i...            2   \n3    METHODS  Pain was assessed using the visual analog pain...            3   \n4    METHODS  Secondary outcome measures included the Wester...            4   \n\n   total_lines  \n0           11  \n1           11  \n2           11  \n3           11  \n4           11  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>target</th>\n      <th>text</th>\n      <th>line_number</th>\n      <th>total_lines</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>OBJECTIVE</td>\n      <td>To investigate the efficacy of @ weeks of dail...</td>\n      <td>0</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>METHODS</td>\n      <td>A total of @ patients with primary knee OA wer...</td>\n      <td>1</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>METHODS</td>\n      <td>Outcome measures included pain reduction and i...</td>\n      <td>2</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>METHODS</td>\n      <td>Pain was assessed using the visual analog pain...</td>\n      <td>3</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>METHODS</td>\n      <td>Secondary outcome measures included the Wester...</td>\n      <td>4</td>\n      <td>11</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"train_df['line_number'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-08-08T06:37:48.462264Z","iopub.execute_input":"2024-08-08T06:37:48.463218Z","iopub.status.idle":"2024-08-08T06:37:48.474172Z","shell.execute_reply.started":"2024-08-08T06:37:48.463166Z","shell.execute_reply":"2024-08-08T06:37:48.473003Z"},"trusted":true},"execution_count":230,"outputs":[{"execution_count":230,"output_type":"execute_result","data":{"text/plain":"line_number\n0     15000\n1     15000\n2     15000\n3     15000\n4     14992\n5     14949\n6     14758\n7     14279\n8     13346\n9     11981\n10    10041\n11     7892\n12     5853\n13     4152\n14     2835\n15     1861\n16     1188\n17      751\n18      462\n19      286\n20      162\n21      101\n22       66\n23       33\n24       22\n25       14\n26        7\n27        4\n28        3\n29        1\n30        1\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"train_df.line_number.plot.hist()","metadata":{"execution":{"iopub.status.busy":"2024-08-08T06:38:32.798599Z","iopub.execute_input":"2024-08-08T06:38:32.799051Z","iopub.status.idle":"2024-08-08T06:38:33.111381Z","shell.execute_reply.started":"2024-08-08T06:38:32.799001Z","shell.execute_reply":"2024-08-08T06:38:33.110063Z"},"trusted":true},"execution_count":231,"outputs":[{"execution_count":231,"output_type":"execute_result","data":{"text/plain":"<Axes: ylabel='Frequency'>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{"execution":{"iopub.status.busy":"2024-08-08T06:38:58.730576Z","iopub.execute_input":"2024-08-08T06:38:58.730996Z","iopub.status.idle":"2024-08-08T06:38:58.738501Z","shell.execute_reply.started":"2024-08-08T06:38:58.730963Z","shell.execute_reply":"2024-08-08T06:38:58.737442Z"},"trusted":true},"execution_count":233,"outputs":[{"execution_count":233,"output_type":"execute_result","data":{"text/plain":"1"},"metadata":{}}]},{"cell_type":"code","source":"np.percentile(train_df.line_number,98)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T06:39:21.674683Z","iopub.execute_input":"2024-08-08T06:39:21.675119Z","iopub.status.idle":"2024-08-08T06:39:21.686232Z","shell.execute_reply.started":"2024-08-08T06:39:21.675077Z","shell.execute_reply":"2024-08-08T06:39:21.684965Z"},"trusted":true},"execution_count":235,"outputs":[{"execution_count":235,"output_type":"execute_result","data":{"text/plain":"15.0"},"metadata":{}}]},{"cell_type":"code","source":"train_line_numbers_one_hot = tf.one_hot(train_df['line_number'].to_numpy(), depth = 15)\n","metadata":{"execution":{"iopub.status.busy":"2024-08-08T06:41:15.216389Z","iopub.execute_input":"2024-08-08T06:41:15.216894Z","iopub.status.idle":"2024-08-08T06:41:15.225386Z","shell.execute_reply.started":"2024-08-08T06:41:15.216860Z","shell.execute_reply":"2024-08-08T06:41:15.224122Z"},"trusted":true},"execution_count":239,"outputs":[]},{"cell_type":"code","source":"(test_df.head())","metadata":{"execution":{"iopub.status.busy":"2024-08-08T06:42:07.902713Z","iopub.execute_input":"2024-08-08T06:42:07.903161Z","iopub.status.idle":"2024-08-08T06:42:07.916429Z","shell.execute_reply.started":"2024-08-08T06:42:07.903118Z","shell.execute_reply":"2024-08-08T06:42:07.915260Z"},"trusted":true},"execution_count":244,"outputs":[{"execution_count":244,"output_type":"execute_result","data":{"text/plain":"       target                                               text  line_number  \\\n0  BACKGROUND  This study analyzed liver function abnormaliti...            0   \n1     RESULTS  A post hoc analysis was conducted with the use...            1   \n2     RESULTS  Liver function tests ( LFTs ) were measured at...            2   \n3     RESULTS  Survival analyses were used to assess the asso...            3   \n4     RESULTS  The percentage of patients with abnormal LFTs ...            4   \n\n   total_lines  \n0            8  \n1            8  \n2            8  \n3            8  \n4            8  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>target</th>\n      <th>text</th>\n      <th>line_number</th>\n      <th>total_lines</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>BACKGROUND</td>\n      <td>This study analyzed liver function abnormaliti...</td>\n      <td>0</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>RESULTS</td>\n      <td>A post hoc analysis was conducted with the use...</td>\n      <td>1</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>RESULTS</td>\n      <td>Liver function tests ( LFTs ) were measured at...</td>\n      <td>2</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>RESULTS</td>\n      <td>Survival analyses were used to assess the asso...</td>\n      <td>3</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>RESULTS</td>\n      <td>The percentage of patients with abnormal LFTs ...</td>\n      <td>4</td>\n      <td>8</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"(val_df.head())","metadata":{"execution":{"iopub.status.busy":"2024-08-08T06:42:14.001230Z","iopub.execute_input":"2024-08-08T06:42:14.001657Z","iopub.status.idle":"2024-08-08T06:42:14.014816Z","shell.execute_reply.started":"2024-08-08T06:42:14.001627Z","shell.execute_reply":"2024-08-08T06:42:14.013383Z"},"trusted":true},"execution_count":245,"outputs":[{"execution_count":245,"output_type":"execute_result","data":{"text/plain":"       target                                               text  line_number  \\\n0  BACKGROUND  IgE sensitization to Aspergillus fumigatus and...            0   \n1  BACKGROUND  It is not clear whether these patients would b...            1   \n2   OBJECTIVE  We sought to determine whether a @-month cours...            2   \n3     METHODS  Asthmatic patients who were IgE sensitized to ...            3   \n4     METHODS  Primary outcomes were improvement in quality o...            4   \n\n   total_lines  \n0            9  \n1            9  \n2            9  \n3            9  \n4            9  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>target</th>\n      <th>text</th>\n      <th>line_number</th>\n      <th>total_lines</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>BACKGROUND</td>\n      <td>IgE sensitization to Aspergillus fumigatus and...</td>\n      <td>0</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>BACKGROUND</td>\n      <td>It is not clear whether these patients would b...</td>\n      <td>1</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>OBJECTIVE</td>\n      <td>We sought to determine whether a @-month cours...</td>\n      <td>2</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>METHODS</td>\n      <td>Asthmatic patients who were IgE sensitized to ...</td>\n      <td>3</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>METHODS</td>\n      <td>Primary outcomes were improvement in quality o...</td>\n      <td>4</td>\n      <td>9</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"test_line_numbers_one_hot = tf.one_hot(test_df['line_number'].to_numpy(),depth = 15)\nval_line_numbers_one_hot = tf.one_hot(val_df['line_number'].to_numpy(), depth = 15)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T06:43:58.268290Z","iopub.execute_input":"2024-08-08T06:43:58.268768Z","iopub.status.idle":"2024-08-08T06:43:58.278278Z","shell.execute_reply.started":"2024-08-08T06:43:58.268733Z","shell.execute_reply":"2024-08-08T06:43:58.276833Z"},"trusted":true},"execution_count":248,"outputs":[]},{"cell_type":"code","source":"train_total_line_one_hot = tf.one_hot(train_df['total_lines'].to_numpy(),depth = 20)\ntest_total_line_one_hot = tf.one_hot(test_df['total_lines'].to_numpy(),depth = 20)\nval_total_line_one_hot = tf.one_hot(val_df['total_lines'].to_numpy(),depth = 20)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T07:13:10.994569Z","iopub.execute_input":"2024-08-08T07:13:10.995061Z","iopub.status.idle":"2024-08-08T07:13:11.008388Z","shell.execute_reply.started":"2024-08-08T07:13:10.994998Z","shell.execute_reply":"2024-08-08T07:13:11.006875Z"},"trusted":true},"execution_count":251,"outputs":[]},{"cell_type":"code","source":"# build a layer for tokens\n\ntoken_inputs = layers.Input([], dtype = tf.string)\ntoken_embed = UniversalSentenceEncoder()(token_inputs)\ntoken_outputs = layers.Dense(128, activation = 'relu')(token_embed)\ntoken_model = tf.keras.Model(token_inputs, token_outputs)\n\n#build a layer for characters\nchar_inputs = layers.Input((1,), dtype = tf.string)\nchar_vec = char_vectorizer(char_inputs)\nchar_emb = char_embed(char_vec)\nchar_output = layers.Bidirectional(layers.LSTM(32))(char_emb)\nchar_model = tf.keras.Model(char_inputs, char_output)\n\n\n\n# individual lines layer\nline_input = layers.Input(shape= (15,), dtype = tf.int32)\nline_output = layers.Dense(32,activation = 'relu')(line_input)\nline_model = tf.keras.Model(line_input, line_output)\n\n#total lines layer\ntotal_line_input = layers.Input(shape = (20,), dtype = tf.int32)\ntotal_line_output = layers.Dense(32, activation = 'relu')(total_line_input)\ntotal_line_model = tf.keras.Model(total_line_input, total_line_output)\n\n# concatinate the layers\nconc_layer = layers.Concatenate()([token_model.output, char_model.output])\n\nz = layers.Dense(256, activation = 'relu')(conc_layer)\nz = layers.Dropout(0.5)(z)\n\nz = layers.Concatenate()([line_model.output,total_line_model.output,z])\n\noutput_layer = layers.Dense(5, activation = 'softmax')(z)\n\nfinal_model = tf.keras.Model([token_model.input,\n                             char_model.input,\n                             line_model.input,\n                             total_line_model.input],\n                             output_layer)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T07:15:04.997378Z","iopub.execute_input":"2024-08-08T07:15:04.997862Z","iopub.status.idle":"2024-08-08T07:15:11.124335Z","shell.execute_reply.started":"2024-08-08T07:15:04.997825Z","shell.execute_reply":"2024-08-08T07:15:11.122772Z"},"trusted":true},"execution_count":256,"outputs":[]},{"cell_type":"code","source":"final_model.summary()","metadata":{"execution":{"iopub.status.busy":"2024-08-08T07:15:11.126511Z","iopub.execute_input":"2024-08-08T07:15:11.126969Z","iopub.status.idle":"2024-08-08T07:15:11.172345Z","shell.execute_reply.started":"2024-08-08T07:15:11.126929Z","shell.execute_reply":"2024-08-08T07:15:11.171028Z"},"trusted":true},"execution_count":257,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"functional_33\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"functional_33\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)       \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape     \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m   Param #\u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mConnected to     \u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━┩\n│ input_layer_30      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)         │          \u001b[38;5;34m0\u001b[0m │ -                 │\n│ (\u001b[38;5;33mInputLayer\u001b[0m)        │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ input_layer_29      │ (\u001b[38;5;45mNone\u001b[0m)            │          \u001b[38;5;34m0\u001b[0m │ -                 │\n│ (\u001b[38;5;33mInputLayer\u001b[0m)        │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ text_vectorization… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m290\u001b[0m)       │          \u001b[38;5;34m0\u001b[0m │ input_layer_30[\u001b[38;5;34m0\u001b[0m… │\n│ (\u001b[38;5;33mTextVectorization\u001b[0m) │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ universal_sentence… │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m512\u001b[0m)       │          \u001b[38;5;34m0\u001b[0m │ input_layer_29[\u001b[38;5;34m0\u001b[0m… │\n│ (\u001b[38;5;33mUniversalSentence…\u001b[0m │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ embedding_3         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m290\u001b[0m, \u001b[38;5;34m25\u001b[0m)   │      \u001b[38;5;34m1,700\u001b[0m │ text_vectorizati… │\n│ (\u001b[38;5;33mEmbedding\u001b[0m)         │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ dense_29 (\u001b[38;5;33mDense\u001b[0m)    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)       │     \u001b[38;5;34m65,664\u001b[0m │ universal_senten… │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ bidirectional_8     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)        │     \u001b[38;5;34m14,848\u001b[0m │ embedding_3[\u001b[38;5;34m11\u001b[0m][\u001b[38;5;34m…\u001b[0m │\n│ (\u001b[38;5;33mBidirectional\u001b[0m)     │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ concatenate_6       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m192\u001b[0m)       │          \u001b[38;5;34m0\u001b[0m │ dense_29[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m],   │\n│ (\u001b[38;5;33mConcatenate\u001b[0m)       │                   │            │ bidirectional_8[\u001b[38;5;34m…\u001b[0m │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ input_layer_31      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m15\u001b[0m)        │          \u001b[38;5;34m0\u001b[0m │ -                 │\n│ (\u001b[38;5;33mInputLayer\u001b[0m)        │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ input_layer_32      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m20\u001b[0m)        │          \u001b[38;5;34m0\u001b[0m │ -                 │\n│ (\u001b[38;5;33mInputLayer\u001b[0m)        │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ dense_32 (\u001b[38;5;33mDense\u001b[0m)    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m256\u001b[0m)       │     \u001b[38;5;34m49,408\u001b[0m │ concatenate_6[\u001b[38;5;34m0\u001b[0m]… │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ dense_30 (\u001b[38;5;33mDense\u001b[0m)    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m32\u001b[0m)        │        \u001b[38;5;34m512\u001b[0m │ input_layer_31[\u001b[38;5;34m0\u001b[0m… │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ dense_31 (\u001b[38;5;33mDense\u001b[0m)    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m32\u001b[0m)        │        \u001b[38;5;34m672\u001b[0m │ input_layer_32[\u001b[38;5;34m0\u001b[0m… │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ dropout_8 (\u001b[38;5;33mDropout\u001b[0m) │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m256\u001b[0m)       │          \u001b[38;5;34m0\u001b[0m │ dense_32[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]    │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ concatenate_7       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m320\u001b[0m)       │          \u001b[38;5;34m0\u001b[0m │ dense_30[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m],   │\n│ (\u001b[38;5;33mConcatenate\u001b[0m)       │                   │            │ dense_31[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m],   │\n│                     │                   │            │ dropout_8[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ dense_33 (\u001b[38;5;33mDense\u001b[0m)    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m5\u001b[0m)         │      \u001b[38;5;34m1,605\u001b[0m │ concatenate_7[\u001b[38;5;34m0\u001b[0m]… │\n└─────────────────────┴───────────────────┴────────────┴───────────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)        </span>┃<span style=\"font-weight: bold\"> Output Shape      </span>┃<span style=\"font-weight: bold\">    Param # </span>┃<span style=\"font-weight: bold\"> Connected to      </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━┩\n│ input_layer_30      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)         │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ -                 │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)        │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ input_layer_29      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>)            │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ -                 │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)        │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ text_vectorization… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">290</span>)       │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ input_layer_30[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>… │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">TextVectorization</span>) │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ universal_sentence… │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)       │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ input_layer_29[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>… │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">UniversalSentence…</span> │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ embedding_3         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">290</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">25</span>)   │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,700</span> │ text_vectorizati… │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Embedding</span>)         │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ dense_29 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)       │     <span style=\"color: #00af00; text-decoration-color: #00af00\">65,664</span> │ universal_senten… │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ bidirectional_8     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)        │     <span style=\"color: #00af00; text-decoration-color: #00af00\">14,848</span> │ embedding_3[<span style=\"color: #00af00; text-decoration-color: #00af00\">11</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Bidirectional</span>)     │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ concatenate_6       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">192</span>)       │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ dense_29[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>],   │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Concatenate</span>)       │                   │            │ bidirectional_8[<span style=\"color: #00af00; text-decoration-color: #00af00\">…</span> │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ input_layer_31      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">15</span>)        │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ -                 │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)        │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ input_layer_32      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">20</span>)        │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ -                 │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)        │                   │            │                   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ dense_32 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)       │     <span style=\"color: #00af00; text-decoration-color: #00af00\">49,408</span> │ concatenate_6[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]… │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ dense_30 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)        │        <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span> │ input_layer_31[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>… │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ dense_31 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)        │        <span style=\"color: #00af00; text-decoration-color: #00af00\">672</span> │ input_layer_32[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>… │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ dropout_8 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>) │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)       │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ dense_32[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]    │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ concatenate_7       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">320</span>)       │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ dense_30[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>],   │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Concatenate</span>)       │                   │            │ dense_31[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>],   │\n│                     │                   │            │ dropout_8[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]   │\n├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n│ dense_33 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">5</span>)         │      <span style=\"color: #00af00; text-decoration-color: #00af00\">1,605</span> │ concatenate_7[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]… │\n└─────────────────────┴───────────────────┴────────────┴───────────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m134,409\u001b[0m (525.04 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">134,409</span> (525.04 KB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m134,409\u001b[0m (525.04 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">134,409</span> (525.04 KB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}]},{"cell_type":"code","source":"from tensorflow.keras.utils import plot_model\nplot_model(final_model)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T07:16:31.568416Z","iopub.execute_input":"2024-08-08T07:16:31.568866Z","iopub.status.idle":"2024-08-08T07:16:31.889455Z","shell.execute_reply.started":"2024-08-08T07:16:31.568830Z","shell.execute_reply":"2024-08-08T07:16:31.887969Z"},"trusted":true},"execution_count":260,"outputs":[{"execution_count":260,"output_type":"execute_result","data":{"image/png":"","text/plain":"<IPython.core.display.Image object>"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}