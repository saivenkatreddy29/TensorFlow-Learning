{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9078270,"sourceType":"datasetVersion","datasetId":5476691}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# Download helper functions script\n!wget https://raw.githubusercontent.com/mrdbourke/tensorflow-deep-learning/main/extras/helper_functions.py","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-08-05T00:43:26.876019Z","iopub.execute_input":"2024-08-05T00:43:26.876929Z","iopub.status.idle":"2024-08-05T00:43:28.229942Z","shell.execute_reply.started":"2024-08-05T00:43:26.876889Z","shell.execute_reply":"2024-08-05T00:43:28.228351Z"},"trusted":true},"execution_count":88,"outputs":[{"name":"stdout","text":"--2024-08-05 00:43:27--  https://raw.githubusercontent.com/mrdbourke/tensorflow-deep-learning/main/extras/helper_functions.py\nResolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...\nConnecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 10246 (10K) [text/plain]\nSaving to: 'helper_functions.py.2'\n\nhelper_functions.py 100%[===================>]  10.01K  --.-KB/s    in 0.001s  \n\n2024-08-05 00:43:28 (11.6 MB/s) - 'helper_functions.py.2' saved [10246/10246]\n\n","output_type":"stream"}]},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\n","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:45.446178Z","iopub.execute_input":"2024-08-05T00:43:45.446717Z","iopub.status.idle":"2024-08-05T00:43:45.453448Z","shell.execute_reply.started":"2024-08-05T00:43:45.446663Z","shell.execute_reply":"2024-08-05T00:43:45.451846Z"},"trusted":true},"execution_count":89,"outputs":[]},{"cell_type":"code","source":"train_data = pd.read_csv(\"/kaggle/input/nlp-data/nlp_data/train.csv\")\ntest_data = pd.read_csv(\"/kaggle/input/nlp-data/nlp_data/test.csv\")\n","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:45.456501Z","iopub.execute_input":"2024-08-05T00:43:45.457013Z","iopub.status.idle":"2024-08-05T00:43:45.511817Z","shell.execute_reply.started":"2024-08-05T00:43:45.456970Z","shell.execute_reply":"2024-08-05T00:43:45.510638Z"},"trusted":true},"execution_count":90,"outputs":[]},{"cell_type":"code","source":"train_data.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:45.513274Z","iopub.execute_input":"2024-08-05T00:43:45.513678Z","iopub.status.idle":"2024-08-05T00:43:45.528000Z","shell.execute_reply.started":"2024-08-05T00:43:45.513646Z","shell.execute_reply":"2024-08-05T00:43:45.526589Z"},"trusted":true},"execution_count":91,"outputs":[{"execution_count":91,"output_type":"execute_result","data":{"text/plain":"   id keyword location                                               text  \\\n0   1     NaN      NaN  Our Deeds are the Reason of this #earthquake M...   \n1   4     NaN      NaN             Forest fire near La Ronge Sask. Canada   \n2   5     NaN      NaN  All residents asked to 'shelter in place' are ...   \n3   6     NaN      NaN  13,000 people receive #wildfires evacuation or...   \n4   7     NaN      NaN  Just got sent this photo from Ruby #Alaska as ...   \n\n   target  \n0       1  \n1       1  \n2       1  \n3       1  \n4       1  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>keyword</th>\n      <th>location</th>\n      <th>text</th>\n      <th>target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Our Deeds are the Reason of this #earthquake M...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Forest fire near La Ronge Sask. Canada</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>5</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>All residents asked to 'shelter in place' are ...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>13,000 people receive #wildfires evacuation or...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Just got sent this photo from Ruby #Alaska as ...</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"test_data.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:45.529718Z","iopub.execute_input":"2024-08-05T00:43:45.530102Z","iopub.status.idle":"2024-08-05T00:43:45.546451Z","shell.execute_reply.started":"2024-08-05T00:43:45.530071Z","shell.execute_reply":"2024-08-05T00:43:45.545186Z"},"trusted":true},"execution_count":92,"outputs":[{"execution_count":92,"output_type":"execute_result","data":{"text/plain":"   id keyword location                                               text\n0   0     NaN      NaN                 Just happened a terrible car crash\n1   2     NaN      NaN  Heard about #earthquake is different cities, s...\n2   3     NaN      NaN  there is a forest fire at spot pond, geese are...\n3   9     NaN      NaN           Apocalypse lighting. #Spokane #wildfires\n4  11     NaN      NaN      Typhoon Soudelor kills 28 in China and Taiwan","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>keyword</th>\n      <th>location</th>\n      <th>text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Just happened a terrible car crash</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Heard about #earthquake is different cities, s...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>there is a forest fire at spot pond, geese are...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>9</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Apocalypse lighting. #Spokane #wildfires</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>11</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Typhoon Soudelor kills 28 in China and Taiwan</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"train_data.target.value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:45.550874Z","iopub.execute_input":"2024-08-05T00:43:45.551747Z","iopub.status.idle":"2024-08-05T00:43:45.561142Z","shell.execute_reply.started":"2024-08-05T00:43:45.551708Z","shell.execute_reply":"2024-08-05T00:43:45.559803Z"},"trusted":true},"execution_count":93,"outputs":[{"execution_count":93,"output_type":"execute_result","data":{"text/plain":"target\n0    4342\n1    3271\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"train_data = train_data.sample(frac= 1, random_state = 42)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:45.562859Z","iopub.execute_input":"2024-08-05T00:43:45.563348Z","iopub.status.idle":"2024-08-05T00:43:45.571824Z","shell.execute_reply.started":"2024-08-05T00:43:45.563314Z","shell.execute_reply":"2024-08-05T00:43:45.570748Z"},"trusted":true},"execution_count":94,"outputs":[]},{"cell_type":"code","source":"train_data[['text','target']][:5]","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:45.573790Z","iopub.execute_input":"2024-08-05T00:43:45.574248Z","iopub.status.idle":"2024-08-05T00:43:45.588208Z","shell.execute_reply.started":"2024-08-05T00:43:45.574205Z","shell.execute_reply":"2024-08-05T00:43:45.587052Z"},"trusted":true},"execution_count":95,"outputs":[{"execution_count":95,"output_type":"execute_result","data":{"text/plain":"                                                   text  target\n2644  So you have a new weapon that can cause un-ima...       1\n2227  The f$&amp;@ing things I do for #GISHWHES Just...       0\n5448  DT @georgegalloway: RT @Galloway4Mayor: ÛÏThe...       1\n132   Aftershock back to school kick off was great. ...       0\n6845  in response to trauma Children of Addicts deve...       0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>text</th>\n      <th>target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2644</th>\n      <td>So you have a new weapon that can cause un-ima...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2227</th>\n      <td>The f$&amp;amp;@ing things I do for #GISHWHES Just...</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>5448</th>\n      <td>DT @georgegalloway: RT @Galloway4Mayor: ÛÏThe...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>132</th>\n      <td>Aftershock back to school kick off was great. ...</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>6845</th>\n      <td>in response to trauma Children of Addicts deve...</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"for row in train_data[['text', 'target']][:5].itertuples():\n    \n    _,text,label = row\n    print(text)\n    print(label)\n    print(\"\\n\")\n    \n","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:45.589793Z","iopub.execute_input":"2024-08-05T00:43:45.590316Z","iopub.status.idle":"2024-08-05T00:43:45.600583Z","shell.execute_reply.started":"2024-08-05T00:43:45.590199Z","shell.execute_reply":"2024-08-05T00:43:45.599105Z"},"trusted":true},"execution_count":96,"outputs":[{"name":"stdout","text":"So you have a new weapon that can cause un-imaginable destruction.\n1\n\n\nThe f$&amp;@ing things I do for #GISHWHES Just got soaked in a deluge going for pads and tampons. Thx @mishacollins @/@\n0\n\n\nDT @georgegalloway: RT @Galloway4Mayor: ÛÏThe CoL police can catch a pickpocket in Liverpool Stree... http://t.co/vXIn1gOq4Q\n1\n\n\nAftershock back to school kick off was great. I want to thank everyone for making it possible. What a great night.\n0\n\n\nin response to trauma Children of Addicts develop a defensive self - one that decreases vulnerability. (3\n0\n\n\n","output_type":"stream"}]},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(train_data['text'].to_numpy(), train_data['target'].to_numpy(), test_size = 0.1, random_state = 42)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:45.602090Z","iopub.execute_input":"2024-08-05T00:43:45.603315Z","iopub.status.idle":"2024-08-05T00:43:45.612733Z","shell.execute_reply.started":"2024-08-05T00:43:45.603269Z","shell.execute_reply":"2024-08-05T00:43:45.611568Z"},"trusted":true},"execution_count":97,"outputs":[]},{"cell_type":"code","source":"X_train.shape, y_train.shape, X_test.shape, y_test.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:45.614119Z","iopub.execute_input":"2024-08-05T00:43:45.614490Z","iopub.status.idle":"2024-08-05T00:43:45.626341Z","shell.execute_reply.started":"2024-08-05T00:43:45.614460Z","shell.execute_reply":"2024-08-05T00:43:45.625196Z"},"trusted":true},"execution_count":98,"outputs":[{"execution_count":98,"output_type":"execute_result","data":{"text/plain":"((6851,), (6851,), (762,), (762,))"},"metadata":{}}]},{"cell_type":"code","source":"len(X_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:45.628129Z","iopub.execute_input":"2024-08-05T00:43:45.628542Z","iopub.status.idle":"2024-08-05T00:43:45.636975Z","shell.execute_reply.started":"2024-08-05T00:43:45.628486Z","shell.execute_reply":"2024-08-05T00:43:45.635810Z"},"trusted":true},"execution_count":99,"outputs":[{"execution_count":99,"output_type":"execute_result","data":{"text/plain":"6851"},"metadata":{}}]},{"cell_type":"markdown","source":"# **Converting text into numbers**","metadata":{}},{"cell_type":"code","source":"from tensorflow.keras.layers import TextVectorization\n\nvectorizer = TextVectorization(max_tokens=1000,standardize='lower_and_strip_punctuation', split='whitespace',ngrams=None,\n                               output_mode='int', output_sequence_length=None,pad_to_max_tokens=True,\n    encoding='utf-8')\n                    ","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:45.638793Z","iopub.execute_input":"2024-08-05T00:43:45.639247Z","iopub.status.idle":"2024-08-05T00:43:45.661410Z","shell.execute_reply.started":"2024-08-05T00:43:45.639207Z","shell.execute_reply":"2024-08-05T00:43:45.660085Z"},"trusted":true},"execution_count":100,"outputs":[]},{"cell_type":"code","source":"len(X_train[1].split())\n","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:45.662980Z","iopub.execute_input":"2024-08-05T00:43:45.663328Z","iopub.status.idle":"2024-08-05T00:43:45.671268Z","shell.execute_reply.started":"2024-08-05T00:43:45.663300Z","shell.execute_reply":"2024-08-05T00:43:45.670067Z"},"trusted":true},"execution_count":101,"outputs":[{"execution_count":101,"output_type":"execute_result","data":{"text/plain":"6"},"metadata":{}}]},{"cell_type":"code","source":"len(X_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:45.677575Z","iopub.execute_input":"2024-08-05T00:43:45.677949Z","iopub.status.idle":"2024-08-05T00:43:45.684891Z","shell.execute_reply.started":"2024-08-05T00:43:45.677919Z","shell.execute_reply":"2024-08-05T00:43:45.683826Z"},"trusted":true},"execution_count":102,"outputs":[{"execution_count":102,"output_type":"execute_result","data":{"text/plain":"6851"},"metadata":{}}]},{"cell_type":"code","source":"c=0\nfor i in range (len(X_train)):\n    c = c+ len(X_train[i].split())","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:45.686040Z","iopub.execute_input":"2024-08-05T00:43:45.686416Z","iopub.status.idle":"2024-08-05T00:43:45.708032Z","shell.execute_reply.started":"2024-08-05T00:43:45.686385Z","shell.execute_reply":"2024-08-05T00:43:45.706807Z"},"trusted":true},"execution_count":103,"outputs":[]},{"cell_type":"code","source":"c/len(X_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:45.709889Z","iopub.execute_input":"2024-08-05T00:43:45.710285Z","iopub.status.idle":"2024-08-05T00:43:45.720975Z","shell.execute_reply.started":"2024-08-05T00:43:45.710253Z","shell.execute_reply":"2024-08-05T00:43:45.719802Z"},"trusted":true},"execution_count":104,"outputs":[{"execution_count":104,"output_type":"execute_result","data":{"text/plain":"14.901036345059115"},"metadata":{}}]},{"cell_type":"code","source":"\nvectorizer = TextVectorization(output_sequence_length = 15,max_tokens=10000, output_mode = 'int')\n    ","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:45.722468Z","iopub.execute_input":"2024-08-05T00:43:45.722856Z","iopub.status.idle":"2024-08-05T00:43:45.739829Z","shell.execute_reply.started":"2024-08-05T00:43:45.722828Z","shell.execute_reply":"2024-08-05T00:43:45.738612Z"},"trusted":true},"execution_count":105,"outputs":[]},{"cell_type":"code","source":"vectorizer.adapt(X_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:45.741968Z","iopub.execute_input":"2024-08-05T00:43:45.743002Z","iopub.status.idle":"2024-08-05T00:43:45.882951Z","shell.execute_reply.started":"2024-08-05T00:43:45.742967Z","shell.execute_reply":"2024-08-05T00:43:45.881771Z"},"trusted":true},"execution_count":106,"outputs":[]},{"cell_type":"code","source":"# Create sample sentence and tokenize it\nsample_sentence = \"There's a flood in my street!\"\nvectorizer([sample_sentence])","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:45.884882Z","iopub.execute_input":"2024-08-05T00:43:45.885364Z","iopub.status.idle":"2024-08-05T00:43:45.915808Z","shell.execute_reply.started":"2024-08-05T00:43:45.885322Z","shell.execute_reply":"2024-08-05T00:43:45.914708Z"},"trusted":true},"execution_count":107,"outputs":[{"execution_count":107,"output_type":"execute_result","data":{"text/plain":"<tf.Tensor: shape=(1, 15), dtype=int64, numpy=\narray([[264,   3, 232,   4,  13, 698,   0,   0,   0,   0,   0,   0,   0,\n          0,   0]])>"},"metadata":{}}]},{"cell_type":"code","source":"words = vectorizer.get_vocabulary()","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:45.917065Z","iopub.execute_input":"2024-08-05T00:43:45.917409Z","iopub.status.idle":"2024-08-05T00:43:45.973566Z","shell.execute_reply.started":"2024-08-05T00:43:45.917380Z","shell.execute_reply":"2024-08-05T00:43:45.972471Z"},"trusted":true},"execution_count":108,"outputs":[]},{"cell_type":"code","source":"len(words), words[:5], words[-5:]","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:45.974844Z","iopub.execute_input":"2024-08-05T00:43:45.975188Z","iopub.status.idle":"2024-08-05T00:43:45.983071Z","shell.execute_reply.started":"2024-08-05T00:43:45.975160Z","shell.execute_reply":"2024-08-05T00:43:45.981977Z"},"trusted":true},"execution_count":109,"outputs":[{"execution_count":109,"output_type":"execute_result","data":{"text/plain":"(10000,\n ['', '[UNK]', 'the', 'a', 'in'],\n ['pages', 'paeds', 'pads', 'padres', 'paddytomlinson1'])"},"metadata":{}}]},{"cell_type":"markdown","source":"# **Create Embeddings using embedding layer**","metadata":{}},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from tensorflow.keras import layers\nmax_len = 10000","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:45.984759Z","iopub.execute_input":"2024-08-05T00:43:45.985174Z","iopub.status.idle":"2024-08-05T00:43:45.993156Z","shell.execute_reply.started":"2024-08-05T00:43:45.985138Z","shell.execute_reply":"2024-08-05T00:43:45.992121Z"},"trusted":true},"execution_count":110,"outputs":[]},{"cell_type":"code","source":"embeddings = layers.Embedding(input_dim = max_len, output_dim =128,  embeddings_initializer='uniform' )","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:45.994605Z","iopub.execute_input":"2024-08-05T00:43:45.994954Z","iopub.status.idle":"2024-08-05T00:43:46.006136Z","shell.execute_reply.started":"2024-08-05T00:43:45.994925Z","shell.execute_reply":"2024-08-05T00:43:46.005059Z"},"trusted":true},"execution_count":111,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"embeddings(vectorizer('this is money'))","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:46.007360Z","iopub.execute_input":"2024-08-05T00:43:46.007828Z","iopub.status.idle":"2024-08-05T00:43:46.056891Z","shell.execute_reply.started":"2024-08-05T00:43:46.007792Z","shell.execute_reply":"2024-08-05T00:43:46.055745Z"},"trusted":true},"execution_count":112,"outputs":[{"execution_count":112,"output_type":"execute_result","data":{"text/plain":"<tf.Tensor: shape=(15, 128), dtype=float32, numpy=\narray([[-0.02170444, -0.00286465,  0.02590417, ...,  0.02221015,\n         0.04437499,  0.04084165],\n       [-0.01145774,  0.01278508,  0.00950241, ..., -0.01715187,\n        -0.03704606, -0.03936387],\n       [ 0.03892199,  0.00696348, -0.04260271, ...,  0.04908686,\n        -0.00206698, -0.03948278],\n       ...,\n       [-0.01726342, -0.01426289, -0.03427234, ...,  0.00047821,\n         0.0008161 ,  0.04854501],\n       [-0.01726342, -0.01426289, -0.03427234, ...,  0.00047821,\n         0.0008161 ,  0.04854501],\n       [-0.01726342, -0.01426289, -0.03427234, ...,  0.00047821,\n         0.0008161 ,  0.04854501]], dtype=float32)>"},"metadata":{}}]},{"cell_type":"markdown","source":"# **Model 1 using Naive bayes **","metadata":{}},{"cell_type":"code","source":"from sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.pipeline import Pipeline\n\nmodel0 = Pipeline(\n[\n    ('tfidf', TfidfVectorizer()),\n    ('clf', MultinomialNB())\n])","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:46.058226Z","iopub.execute_input":"2024-08-05T00:43:46.058581Z","iopub.status.idle":"2024-08-05T00:43:46.064752Z","shell.execute_reply.started":"2024-08-05T00:43:46.058545Z","shell.execute_reply":"2024-08-05T00:43:46.063731Z"},"trusted":true},"execution_count":113,"outputs":[]},{"cell_type":"code","source":"y_train","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:46.066129Z","iopub.execute_input":"2024-08-05T00:43:46.066990Z","iopub.status.idle":"2024-08-05T00:43:46.079624Z","shell.execute_reply.started":"2024-08-05T00:43:46.066958Z","shell.execute_reply":"2024-08-05T00:43:46.078453Z"},"trusted":true},"execution_count":114,"outputs":[{"execution_count":114,"output_type":"execute_result","data":{"text/plain":"array([0, 0, 1, ..., 1, 1, 0])"},"metadata":{}}]},{"cell_type":"code","source":"model0.fit(X_train,y_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:46.081203Z","iopub.execute_input":"2024-08-05T00:43:46.081571Z","iopub.status.idle":"2024-08-05T00:43:46.336357Z","shell.execute_reply.started":"2024-08-05T00:43:46.081539Z","shell.execute_reply":"2024-08-05T00:43:46.335009Z"},"trusted":true},"execution_count":115,"outputs":[{"execution_count":115,"output_type":"execute_result","data":{"text/plain":"Pipeline(steps=[('tfidf', TfidfVectorizer()), ('clf', MultinomialNB())])","text/html":"<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;tfidf&#x27;, TfidfVectorizer()), (&#x27;clf&#x27;, MultinomialNB())])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;tfidf&#x27;, TfidfVectorizer()), (&#x27;clf&#x27;, MultinomialNB())])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" ><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">TfidfVectorizer</label><div class=\"sk-toggleable__content\"><pre>TfidfVectorizer()</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" ><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">MultinomialNB</label><div class=\"sk-toggleable__content\"><pre>MultinomialNB()</pre></div></div></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"y_pred = model0.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:46.337818Z","iopub.execute_input":"2024-08-05T00:43:46.338173Z","iopub.status.idle":"2024-08-05T00:43:46.367815Z","shell.execute_reply.started":"2024-08-05T00:43:46.338143Z","shell.execute_reply":"2024-08-05T00:43:46.366574Z"},"trusted":true},"execution_count":116,"outputs":[]},{"cell_type":"code","source":"from sklearn.metrics import accuracy_score, classification_report\ndef metrics (y_test, y_pred):\n    acc = accuracy_score(y_test,y_pred)\n    report = classification_report(y_test,y_pred, output_dict = True)\n    disaster = report['0']\n    safe = report['1']\n    print(f\"The details of disaster prediction is \\n {disaster} \\n\")\n    \n    print(f\"The details of disaster prediction is \\n {safe} \\n\") \n    print(f\"The final accuray is \\n {acc}\")\n    ","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:46.369370Z","iopub.execute_input":"2024-08-05T00:43:46.370066Z","iopub.status.idle":"2024-08-05T00:43:46.377638Z","shell.execute_reply.started":"2024-08-05T00:43:46.370033Z","shell.execute_reply":"2024-08-05T00:43:46.376445Z"},"trusted":true},"execution_count":117,"outputs":[]},{"cell_type":"code","source":" metrics(y_test,y_pred)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:46.379170Z","iopub.execute_input":"2024-08-05T00:43:46.379583Z","iopub.status.idle":"2024-08-05T00:43:46.402232Z","shell.execute_reply.started":"2024-08-05T00:43:46.379553Z","shell.execute_reply":"2024-08-05T00:43:46.401122Z"},"trusted":true},"execution_count":118,"outputs":[{"name":"stdout","text":"The details of disaster prediction is \n {'precision': 0.748062015503876, 'recall': 0.9323671497584541, 'f1-score': 0.8301075268817204, 'support': 414} \n\nThe details of disaster prediction is \n {'precision': 0.8861788617886179, 'recall': 0.6264367816091954, 'f1-score': 0.734006734006734, 'support': 348} \n\nThe final accuray is \n 0.7926509186351706\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# **Deep learning model**","metadata":{}},{"cell_type":"code","source":"from helper_functions import create_tensorboard_callback\n\nSave_dir = \"model_logs\"","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:46.403736Z","iopub.execute_input":"2024-08-05T00:43:46.404152Z","iopub.status.idle":"2024-08-05T00:43:46.409742Z","shell.execute_reply.started":"2024-08-05T00:43:46.404120Z","shell.execute_reply":"2024-08-05T00:43:46.408400Z"},"trusted":true},"execution_count":119,"outputs":[]},{"cell_type":"code","source":"X_train.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:46.411616Z","iopub.execute_input":"2024-08-05T00:43:46.412541Z","iopub.status.idle":"2024-08-05T00:43:46.423125Z","shell.execute_reply.started":"2024-08-05T00:43:46.412485Z","shell.execute_reply":"2024-08-05T00:43:46.422045Z"},"trusted":true},"execution_count":120,"outputs":[{"execution_count":120,"output_type":"execute_result","data":{"text/plain":"(6851,)"},"metadata":{}}]},{"cell_type":"code","source":"import tensorflow as tf","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:46.424695Z","iopub.execute_input":"2024-08-05T00:43:46.425131Z","iopub.status.idle":"2024-08-05T00:43:46.433909Z","shell.execute_reply.started":"2024-08-05T00:43:46.425100Z","shell.execute_reply":"2024-08-05T00:43:46.432679Z"},"trusted":true},"execution_count":121,"outputs":[]},{"cell_type":"code","source":" from tensorflow.keras import layers\n\ninputs = layers.Input(shape =(1,), dtype = tf.string)\n\nx = embeddings(vectorizer(inputs))\nx = layers.GlobalAveragePooling1D()(x)  \n\noutputs = layers.Dense(1,activation = 'sigmoid')(x)\n\nmodel1 = tf.keras.Model(inputs,outputs)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:46.435717Z","iopub.execute_input":"2024-08-05T00:43:46.436202Z","iopub.status.idle":"2024-08-05T00:43:46.463231Z","shell.execute_reply.started":"2024-08-05T00:43:46.436162Z","shell.execute_reply":"2024-08-05T00:43:46.462087Z"},"trusted":true},"execution_count":122,"outputs":[]},{"cell_type":"code","source":"model1.compile(loss = 'binary_crossentropy', optimizer = tf.keras.optimizers.Adam(), metrics = ['accuracy'])","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:46.464944Z","iopub.execute_input":"2024-08-05T00:43:46.465666Z","iopub.status.idle":"2024-08-05T00:43:46.477137Z","shell.execute_reply.started":"2024-08-05T00:43:46.465621Z","shell.execute_reply":"2024-08-05T00:43:46.475968Z"},"trusted":true},"execution_count":123,"outputs":[]},{"cell_type":"code","source":"model1.summary()","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:46.478639Z","iopub.execute_input":"2024-08-05T00:43:46.479162Z","iopub.status.idle":"2024-08-05T00:43:46.510480Z","shell.execute_reply.started":"2024-08-05T00:43:46.479127Z","shell.execute_reply":"2024-08-05T00:43:46.509427Z"},"trusted":true},"execution_count":124,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"functional_4\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"functional_4\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ input_layer_4 (\u001b[38;5;33mInputLayer\u001b[0m)      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ text_vectorization_3            │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m15\u001b[0m)             │             \u001b[38;5;34m0\u001b[0m │\n│ (\u001b[38;5;33mTextVectorization\u001b[0m)             │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ embedding_3 (\u001b[38;5;33mEmbedding\u001b[0m)         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m15\u001b[0m, \u001b[38;5;34m128\u001b[0m)        │     \u001b[38;5;34m1,280,000\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ global_average_pooling1d_1      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)            │             \u001b[38;5;34m0\u001b[0m │\n│ (\u001b[38;5;33mGlobalAveragePooling1D\u001b[0m)        │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_4 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │           \u001b[38;5;34m129\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ input_layer_4 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ text_vectorization_3            │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">15</span>)             │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">TextVectorization</span>)             │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ embedding_3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Embedding</span>)         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">15</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)        │     <span style=\"color: #00af00; text-decoration-color: #00af00\">1,280,000</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ global_average_pooling1d_1      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)            │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">GlobalAveragePooling1D</span>)        │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_4 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │           <span style=\"color: #00af00; text-decoration-color: #00af00\">129</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m1,280,129\u001b[0m (4.88 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">1,280,129</span> (4.88 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m1,280,129\u001b[0m (4.88 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">1,280,129</span> (4.88 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}]},{"cell_type":"code","source":"print(\"X_train shape:\", X_train.shape)\nprint(\"y_train shape:\", y_train.shape)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:46.511889Z","iopub.execute_input":"2024-08-05T00:43:46.512245Z","iopub.status.idle":"2024-08-05T00:43:46.518313Z","shell.execute_reply.started":"2024-08-05T00:43:46.512206Z","shell.execute_reply":"2024-08-05T00:43:46.516961Z"},"trusted":true},"execution_count":125,"outputs":[{"name":"stdout","text":"X_train shape: (6851,)\ny_train shape: (6851,)\n","output_type":"stream"}]},{"cell_type":"code","source":"# y_train = y_train.reshape(-1, 1)\n# y_test = y_test.reshape(-1, 1)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:46.519580Z","iopub.execute_input":"2024-08-05T00:43:46.519972Z","iopub.status.idle":"2024-08-05T00:43:46.529734Z","shell.execute_reply.started":"2024-08-05T00:43:46.519937Z","shell.execute_reply":"2024-08-05T00:43:46.528571Z"},"trusted":true},"execution_count":126,"outputs":[]},{"cell_type":"code","source":"print(\"X_train shape:\", X_train.shape)\nprint(\"y_train shape:\", y_train.shape)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:46.531151Z","iopub.execute_input":"2024-08-05T00:43:46.531579Z","iopub.status.idle":"2024-08-05T00:43:46.540765Z","shell.execute_reply.started":"2024-08-05T00:43:46.531541Z","shell.execute_reply":"2024-08-05T00:43:46.539579Z"},"trusted":true},"execution_count":127,"outputs":[{"name":"stdout","text":"X_train shape: (6851,)\ny_train shape: (6851,)\n","output_type":"stream"}]},{"cell_type":"code","source":"history1 = model1.fit(x= X_train, y= y_train,\n                     batch_size = 32, epochs = 5, validation_data = (X_test,y_test))","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:46.542233Z","iopub.execute_input":"2024-08-05T00:43:46.542686Z","iopub.status.idle":"2024-08-05T00:43:56.874338Z","shell.execute_reply.started":"2024-08-05T00:43:46.542648Z","shell.execute_reply":"2024-08-05T00:43:56.873259Z"},"trusted":true},"execution_count":128,"outputs":[{"name":"stdout","text":"Epoch 1/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 10ms/step - accuracy: 0.6396 - loss: 0.6501 - val_accuracy: 0.7585 - val_loss: 0.5346\nEpoch 2/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 8ms/step - accuracy: 0.8079 - loss: 0.4674 - val_accuracy: 0.7913 - val_loss: 0.4739\nEpoch 3/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 8ms/step - accuracy: 0.8526 - loss: 0.3631 - val_accuracy: 0.7966 - val_loss: 0.4615\nEpoch 4/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 8ms/step - accuracy: 0.8853 - loss: 0.2968 - val_accuracy: 0.7874 - val_loss: 0.4674\nEpoch 5/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 8ms/step - accuracy: 0.9062 - loss: 0.2480 - val_accuracy: 0.7822 - val_loss: 0.4828\n","output_type":"stream"}]},{"cell_type":"code","source":"model1_predict = model1.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:56.885882Z","iopub.execute_input":"2024-08-05T00:43:56.886785Z","iopub.status.idle":"2024-08-05T00:43:57.300548Z","shell.execute_reply.started":"2024-08-05T00:43:56.886741Z","shell.execute_reply":"2024-08-05T00:43:57.299313Z"},"trusted":true},"execution_count":129,"outputs":[{"name":"stdout","text":"\u001b[1m24/24\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step\n","output_type":"stream"}]},{"cell_type":"code","source":"model1_predict[0]","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:43:57.302352Z","iopub.execute_input":"2024-08-05T00:43:57.303334Z","iopub.status.idle":"2024-08-05T00:43:57.311267Z","shell.execute_reply.started":"2024-08-05T00:43:57.303289Z","shell.execute_reply":"2024-08-05T00:43:57.310044Z"},"trusted":true},"execution_count":130,"outputs":[{"execution_count":130,"output_type":"execute_result","data":{"text/plain":"array([0.33667123], dtype=float32)"},"metadata":{}}]},{"cell_type":"code","source":"# weights = model1.get_layer(\"embedding\").get_weights()[0]\n# vocab = vectorizer.get_vocabulary()","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:46:47.651048Z","iopub.execute_input":"2024-08-05T00:46:47.651638Z","iopub.status.idle":"2024-08-05T00:46:47.656895Z","shell.execute_reply.started":"2024-08-05T00:46:47.651592Z","shell.execute_reply":"2024-08-05T00:46:47.655526Z"},"trusted":true},"execution_count":132,"outputs":[]},{"cell_type":"code","source":"import io\nimport os\nimport re\nimport shutil\nimport string\nimport tensorflow as tf\n\nfrom tensorflow.keras import Sequential\nfrom tensorflow.keras.layers import Dense, Embedding, GlobalAveragePooling1D\nfrom tensorflow.keras.layers import TextVectorization","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:46:48.205865Z","iopub.execute_input":"2024-08-05T00:46:48.206302Z","iopub.status.idle":"2024-08-05T00:46:48.214290Z","shell.execute_reply.started":"2024-08-05T00:46:48.206267Z","shell.execute_reply":"2024-08-05T00:46:48.212891Z"},"trusted":true},"execution_count":133,"outputs":[]},{"cell_type":"code","source":"out_v = io.open('vectors.tsv', 'w', encoding='utf-8')\nout_m = io.open('metadata.tsv', 'w', encoding='utf-8')\n\nfor index, word in enumerate(vocab):\n  if index == 0:\n    continue  # skip 0, it's padding.\n  vec = weights[index]\n  out_v.write('\\t'.join([str(x) for x in vec]) + \"\\n\")\n  out_m.write(word + \"\\n\")\nout_v.close()\nout_m.close()","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:46:48.798930Z","iopub.execute_input":"2024-08-05T00:46:48.799360Z","iopub.status.idle":"2024-08-05T00:46:49.949568Z","shell.execute_reply.started":"2024-08-05T00:46:48.799326Z","shell.execute_reply":"2024-08-05T00:46:49.948033Z"},"trusted":true},"execution_count":134,"outputs":[]},{"cell_type":"markdown","source":"# **Recurrent Neural Networks**","metadata":{}},{"cell_type":"code","source":"max_len","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:46:49.951905Z","iopub.execute_input":"2024-08-05T00:46:49.952286Z","iopub.status.idle":"2024-08-05T00:46:49.959190Z","shell.execute_reply.started":"2024-08-05T00:46:49.952253Z","shell.execute_reply":"2024-08-05T00:46:49.958019Z"},"trusted":true},"execution_count":135,"outputs":[{"execution_count":135,"output_type":"execute_result","data":{"text/plain":"10000"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model2_embedding = layers.Embedding(input_dim =max_len ,\n    output_dim = 128,\n    embeddings_initializer='uniform',\n    embeddings_regularizer=None,\n    embeddings_constraint=None,\n    mask_zero=False,\n    input_length = 15,\n    weights=None,\n    lora_rank=None,name = 'embedding2')\n                                   ","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:46:49.960739Z","iopub.execute_input":"2024-08-05T00:46:49.961183Z","iopub.status.idle":"2024-08-05T00:46:49.972435Z","shell.execute_reply.started":"2024-08-05T00:46:49.961152Z","shell.execute_reply":"2024-08-05T00:46:49.971267Z"},"trusted":true},"execution_count":136,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/embedding.py:90: UserWarning: Argument `input_length` is deprecated. Just remove it.\n  warnings.warn(\n","output_type":"stream"}]},{"cell_type":"code","source":"inputs = layers.Input(shape = (1,), dtype = tf.string)\nx = vectorizer(inputs)\nx = model2_embedding(x)\nx = layers.LSTM(64)(x)\noutputs = layers.Dense(1, activation = 'sigmoid')(x)\n\nmodel2 = tf.keras.Model(inputs, outputs)\n","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:46:50.163487Z","iopub.execute_input":"2024-08-05T00:46:50.163972Z","iopub.status.idle":"2024-08-05T00:46:50.221689Z","shell.execute_reply.started":"2024-08-05T00:46:50.163928Z","shell.execute_reply":"2024-08-05T00:46:50.220631Z"},"trusted":true},"execution_count":137,"outputs":[]},{"cell_type":"code","source":"model2.summary()","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:46:50.883279Z","iopub.execute_input":"2024-08-05T00:46:50.883772Z","iopub.status.idle":"2024-08-05T00:46:50.909210Z","shell.execute_reply.started":"2024-08-05T00:46:50.883737Z","shell.execute_reply":"2024-08-05T00:46:50.907959Z"},"trusted":true},"execution_count":138,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"functional_5\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"functional_5\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ input_layer_5 (\u001b[38;5;33mInputLayer\u001b[0m)      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ text_vectorization_3            │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m15\u001b[0m)             │             \u001b[38;5;34m0\u001b[0m │\n│ (\u001b[38;5;33mTextVectorization\u001b[0m)             │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ embedding2 (\u001b[38;5;33mEmbedding\u001b[0m)          │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m15\u001b[0m, \u001b[38;5;34m128\u001b[0m)        │     \u001b[38;5;34m1,280,000\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ lstm_2 (\u001b[38;5;33mLSTM\u001b[0m)                   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │        \u001b[38;5;34m49,408\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_5 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │            \u001b[38;5;34m65\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ input_layer_5 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ text_vectorization_3            │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">15</span>)             │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">TextVectorization</span>)             │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ embedding2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Embedding</span>)          │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">15</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)        │     <span style=\"color: #00af00; text-decoration-color: #00af00\">1,280,000</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ lstm_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │        <span style=\"color: #00af00; text-decoration-color: #00af00\">49,408</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_5 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │            <span style=\"color: #00af00; text-decoration-color: #00af00\">65</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m1,329,473\u001b[0m (5.07 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">1,329,473</span> (5.07 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m1,329,473\u001b[0m (5.07 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">1,329,473</span> (5.07 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}]},{"cell_type":"code","source":"model2.compile(loss = 'binary_crossentropy', optimizer = tf.optimizers.Adam(), metrics = ['accuracy'])","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:46:51.098851Z","iopub.execute_input":"2024-08-05T00:46:51.099364Z","iopub.status.idle":"2024-08-05T00:46:51.111975Z","shell.execute_reply.started":"2024-08-05T00:46:51.099283Z","shell.execute_reply":"2024-08-05T00:46:51.110723Z"},"trusted":true},"execution_count":139,"outputs":[]},{"cell_type":"code","source":"model2.fit(X_train,\n          y_train, \n    batch_size= 32,\n    epochs=5,\n    validation_data=(X_test,y_test)\n      )","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:46:51.749544Z","iopub.execute_input":"2024-08-05T00:46:51.750818Z","iopub.status.idle":"2024-08-05T00:47:13.754231Z","shell.execute_reply.started":"2024-08-05T00:46:51.750780Z","shell.execute_reply":"2024-08-05T00:47:13.753036Z"},"trusted":true},"execution_count":140,"outputs":[{"name":"stdout","text":"Epoch 1/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 18ms/step - accuracy: 0.6761 - loss: 0.5831 - val_accuracy: 0.7756 - val_loss: 0.4593\nEpoch 2/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 16ms/step - accuracy: 0.8664 - loss: 0.3320 - val_accuracy: 0.7546 - val_loss: 0.5097\nEpoch 3/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 16ms/step - accuracy: 0.9134 - loss: 0.2322 - val_accuracy: 0.7585 - val_loss: 0.5856\nEpoch 4/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 16ms/step - accuracy: 0.9411 - loss: 0.1659 - val_accuracy: 0.7651 - val_loss: 0.6252\nEpoch 5/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 16ms/step - accuracy: 0.9597 - loss: 0.1210 - val_accuracy: 0.7690 - val_loss: 0.7355\n","output_type":"stream"},{"execution_count":140,"output_type":"execute_result","data":{"text/plain":"<keras.src.callbacks.history.History at 0x7d7e435e4b50>"},"metadata":{}}]},{"cell_type":"code","source":"model2_pred = model2.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:47:13.756274Z","iopub.execute_input":"2024-08-05T00:47:13.756660Z","iopub.status.idle":"2024-08-05T00:47:14.551753Z","shell.execute_reply.started":"2024-08-05T00:47:13.756628Z","shell.execute_reply":"2024-08-05T00:47:14.550540Z"},"trusted":true},"execution_count":141,"outputs":[{"name":"stdout","text":"\u001b[1m24/24\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 18ms/step\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_train.shape,y_test.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:47:14.553777Z","iopub.execute_input":"2024-08-05T00:47:14.554237Z","iopub.status.idle":"2024-08-05T00:47:14.563179Z","shell.execute_reply.started":"2024-08-05T00:47:14.554198Z","shell.execute_reply":"2024-08-05T00:47:14.561975Z"},"trusted":true},"execution_count":142,"outputs":[{"execution_count":142,"output_type":"execute_result","data":{"text/plain":"((6851,), (762,))"},"metadata":{}}]},{"cell_type":"code","source":"acc = model2.evaluate(X_test,y_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:47:14.566653Z","iopub.execute_input":"2024-08-05T00:47:14.567092Z","iopub.status.idle":"2024-08-05T00:47:14.798041Z","shell.execute_reply.started":"2024-08-05T00:47:14.567051Z","shell.execute_reply":"2024-08-05T00:47:14.796804Z"},"trusted":true},"execution_count":143,"outputs":[{"name":"stdout","text":"\u001b[1m24/24\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.7569 - loss: 0.7927\n","output_type":"stream"}]},{"cell_type":"code","source":"model2_pred.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:47:14.800046Z","iopub.execute_input":"2024-08-05T00:47:14.800443Z","iopub.status.idle":"2024-08-05T00:47:14.808402Z","shell.execute_reply.started":"2024-08-05T00:47:14.800405Z","shell.execute_reply":"2024-08-05T00:47:14.807127Z"},"trusted":true},"execution_count":144,"outputs":[{"execution_count":144,"output_type":"execute_result","data":{"text/plain":"(762, 1)"},"metadata":{}}]},{"cell_type":"code","source":"y_test = tf.squeeze(y_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:47:14.810189Z","iopub.execute_input":"2024-08-05T00:47:14.810635Z","iopub.status.idle":"2024-08-05T00:47:14.818887Z","shell.execute_reply.started":"2024-08-05T00:47:14.810604Z","shell.execute_reply":"2024-08-05T00:47:14.817595Z"},"trusted":true},"execution_count":145,"outputs":[]},{"cell_type":"code","source":"y_test.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:47:14.820553Z","iopub.execute_input":"2024-08-05T00:47:14.820978Z","iopub.status.idle":"2024-08-05T00:47:14.828928Z","shell.execute_reply.started":"2024-08-05T00:47:14.820948Z","shell.execute_reply":"2024-08-05T00:47:14.827775Z"},"trusted":true},"execution_count":146,"outputs":[{"execution_count":146,"output_type":"execute_result","data":{"text/plain":"TensorShape([762])"},"metadata":{}}]},{"cell_type":"code","source":"(y_test.numpy())","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:47:14.830356Z","iopub.execute_input":"2024-08-05T00:47:14.830825Z","iopub.status.idle":"2024-08-05T00:47:14.846565Z","shell.execute_reply.started":"2024-08-05T00:47:14.830788Z","shell.execute_reply":"2024-08-05T00:47:14.845012Z"},"trusted":true},"execution_count":147,"outputs":[{"execution_count":147,"output_type":"execute_result","data":{"text/plain":"array([0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1,\n       1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0,\n       0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n       1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0,\n       1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0,\n       1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1,\n       1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0,\n       0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0,\n       1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1,\n       1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0,\n       1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1,\n       1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n       1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0,\n       1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,\n       0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1,\n       1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0,\n       1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1,\n       0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1,\n       0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1,\n       0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1,\n       0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,\n       0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1,\n       0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1,\n       0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0,\n       1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0,\n       1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1,\n       1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0,\n       0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0,\n       0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0,\n       1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1,\n       0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1,\n       0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0,\n       1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0,\n       0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0,\n       0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0])"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"metrics((y_test.numpy()),tf.squeeze(tf.round(model2_pred)).numpy())","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:47:14.850703Z","iopub.execute_input":"2024-08-05T00:47:14.851754Z","iopub.status.idle":"2024-08-05T00:47:14.875189Z","shell.execute_reply.started":"2024-08-05T00:47:14.851713Z","shell.execute_reply":"2024-08-05T00:47:14.873896Z"},"trusted":true},"execution_count":148,"outputs":[{"name":"stdout","text":"The details of disaster prediction is \n {'precision': 0.7819905213270142, 'recall': 0.7971014492753623, 'f1-score': 0.7894736842105263, 'support': 414} \n\nThe details of disaster prediction is \n {'precision': 0.7529411764705882, 'recall': 0.735632183908046, 'f1-score': 0.7441860465116279, 'support': 348} \n\nThe final accuray is \n 0.7690288713910761\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# **Building GRU**","metadata":{}},{"cell_type":"code","source":"max_len","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:48:00.341195Z","iopub.execute_input":"2024-08-05T00:48:00.341717Z","iopub.status.idle":"2024-08-05T00:48:00.349535Z","shell.execute_reply.started":"2024-08-05T00:48:00.341681Z","shell.execute_reply":"2024-08-05T00:48:00.348115Z"},"trusted":true},"execution_count":149,"outputs":[{"execution_count":149,"output_type":"execute_result","data":{"text/plain":"10000"},"metadata":{}}]},{"cell_type":"code","source":"embedding =  layers.Embedding(input_dim = max_len,\n    output_dim = 128,\n    embeddings_initializer='uniform')","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:48:00.351699Z","iopub.execute_input":"2024-08-05T00:48:00.352084Z","iopub.status.idle":"2024-08-05T00:48:00.363100Z","shell.execute_reply.started":"2024-08-05T00:48:00.352054Z","shell.execute_reply":"2024-08-05T00:48:00.361712Z"},"trusted":true},"execution_count":150,"outputs":[]},{"cell_type":"code","source":"inputs = layers.Input(shape = (1,), dtype = tf.string)\n\nx= vectorizer(inputs)\nx= embedding(x)\nx = layers.GRU(64)(x)\noutputs = layers.Dense(1, activation = 'sigmoid')(x)\n\nmodel3 = tf.keras.Model(inputs,outputs)\n","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:48:00.364915Z","iopub.execute_input":"2024-08-05T00:48:00.365471Z","iopub.status.idle":"2024-08-05T00:48:00.426867Z","shell.execute_reply.started":"2024-08-05T00:48:00.365418Z","shell.execute_reply":"2024-08-05T00:48:00.425633Z"},"trusted":true},"execution_count":151,"outputs":[]},{"cell_type":"code","source":"model3.compile(loss = 'binary_crossentropy', optimizer = tf.keras.optimizers.Adam(), metrics = ['accuracy'])","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:48:00.428567Z","iopub.execute_input":"2024-08-05T00:48:00.429007Z","iopub.status.idle":"2024-08-05T00:48:00.440811Z","shell.execute_reply.started":"2024-08-05T00:48:00.428968Z","shell.execute_reply":"2024-08-05T00:48:00.439602Z"},"trusted":true},"execution_count":152,"outputs":[]},{"cell_type":"code","source":"history3 = model3.fit(X_train,\n                     y_train,\n                      epochs = 5,\n                      validation_data = (X_test,y_test),\n                      batch_size = 32\n                 )","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:48:00.444623Z","iopub.execute_input":"2024-08-05T00:48:00.444994Z","iopub.status.idle":"2024-08-05T00:48:21.465204Z","shell.execute_reply.started":"2024-08-05T00:48:00.444963Z","shell.execute_reply":"2024-08-05T00:48:21.464051Z"},"trusted":true},"execution_count":153,"outputs":[{"name":"stdout","text":"Epoch 1/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 18ms/step - accuracy: 0.6485 - loss: 0.6061 - val_accuracy: 0.7717 - val_loss: 0.4605\nEpoch 2/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 16ms/step - accuracy: 0.8609 - loss: 0.3404 - val_accuracy: 0.7703 - val_loss: 0.5148\nEpoch 3/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 16ms/step - accuracy: 0.9100 - loss: 0.2383 - val_accuracy: 0.7572 - val_loss: 0.5739\nEpoch 4/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 16ms/step - accuracy: 0.9385 - loss: 0.1703 - val_accuracy: 0.7730 - val_loss: 0.5877\nEpoch 5/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 18ms/step - accuracy: 0.9567 - loss: 0.1370 - val_accuracy: 0.7638 - val_loss: 0.6550\n","output_type":"stream"}]},{"cell_type":"code","source":"model3.summary()","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:48:21.467396Z","iopub.execute_input":"2024-08-05T00:48:21.468442Z","iopub.status.idle":"2024-08-05T00:48:21.494927Z","shell.execute_reply.started":"2024-08-05T00:48:21.468396Z","shell.execute_reply":"2024-08-05T00:48:21.493776Z"},"trusted":true},"execution_count":154,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"functional_6\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"functional_6\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ input_layer_6 (\u001b[38;5;33mInputLayer\u001b[0m)      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ text_vectorization_3            │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m15\u001b[0m)             │             \u001b[38;5;34m0\u001b[0m │\n│ (\u001b[38;5;33mTextVectorization\u001b[0m)             │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ embedding_4 (\u001b[38;5;33mEmbedding\u001b[0m)         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m15\u001b[0m, \u001b[38;5;34m128\u001b[0m)        │     \u001b[38;5;34m1,280,000\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ gru_1 (\u001b[38;5;33mGRU\u001b[0m)                     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │        \u001b[38;5;34m37,248\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_6 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │            \u001b[38;5;34m65\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ input_layer_6 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ text_vectorization_3            │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">15</span>)             │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">TextVectorization</span>)             │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ embedding_4 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Embedding</span>)         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">15</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)        │     <span style=\"color: #00af00; text-decoration-color: #00af00\">1,280,000</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ gru_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">GRU</span>)                     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │        <span style=\"color: #00af00; text-decoration-color: #00af00\">37,248</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_6 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │            <span style=\"color: #00af00; text-decoration-color: #00af00\">65</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m3,951,941\u001b[0m (15.08 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">3,951,941</span> (15.08 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m1,317,313\u001b[0m (5.03 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">1,317,313</span> (5.03 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Optimizer params: \u001b[0m\u001b[38;5;34m2,634,628\u001b[0m (10.05 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Optimizer params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">2,634,628</span> (10.05 MB)\n</pre>\n"},"metadata":{}}]},{"cell_type":"code","source":"model3_pred = model3.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:48:21.496454Z","iopub.execute_input":"2024-08-05T00:48:21.496840Z","iopub.status.idle":"2024-08-05T00:48:22.274727Z","shell.execute_reply.started":"2024-08-05T00:48:21.496811Z","shell.execute_reply":"2024-08-05T00:48:22.273483Z"},"trusted":true},"execution_count":155,"outputs":[{"name":"stdout","text":"\u001b[1m24/24\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 17ms/step\n","output_type":"stream"}]},{"cell_type":"code","source":"acc = model3.evaluate(X_test,y_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:48:22.276595Z","iopub.execute_input":"2024-08-05T00:48:22.277026Z","iopub.status.idle":"2024-08-05T00:48:22.469558Z","shell.execute_reply.started":"2024-08-05T00:48:22.276992Z","shell.execute_reply":"2024-08-05T00:48:22.468328Z"},"trusted":true},"execution_count":156,"outputs":[{"name":"stdout","text":"\u001b[1m24/24\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7471 - loss: 0.7113\n","output_type":"stream"}]},{"cell_type":"code","source":"acc","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:48:22.471436Z","iopub.execute_input":"2024-08-05T00:48:22.471831Z","iopub.status.idle":"2024-08-05T00:48:22.480064Z","shell.execute_reply.started":"2024-08-05T00:48:22.471800Z","shell.execute_reply":"2024-08-05T00:48:22.478586Z"},"trusted":true},"execution_count":157,"outputs":[{"execution_count":157,"output_type":"execute_result","data":{"text/plain":"[0.6549810171127319, 0.7637795209884644]"},"metadata":{}}]},{"cell_type":"code","source":"metrics((y_test.numpy()),tf.squeeze(tf.round(model3_pred)).numpy())","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:48:22.481894Z","iopub.execute_input":"2024-08-05T00:48:22.482357Z","iopub.status.idle":"2024-08-05T00:48:22.503091Z","shell.execute_reply.started":"2024-08-05T00:48:22.482319Z","shell.execute_reply":"2024-08-05T00:48:22.501871Z"},"trusted":true},"execution_count":158,"outputs":[{"name":"stdout","text":"The details of disaster prediction is \n {'precision': 0.7457983193277311, 'recall': 0.857487922705314, 'f1-score': 0.7977528089887641, 'support': 414} \n\nThe details of disaster prediction is \n {'precision': 0.7937062937062938, 'recall': 0.6522988505747126, 'f1-score': 0.7160883280757098, 'support': 348} \n\nThe final accuray is \n 0.7637795275590551\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# **Bidirectional LSTM**\n","metadata":{}},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"tf.random.set_seed(42)\nembedding4 = layers.Embedding(input_dim = max_len,\n    output_dim = 128,\n    embeddings_initializer='uniform')\n\ninputs = layers.Input(shape = (1,), dtype = tf.string)\nx = vectorizer(inputs)\nx = embedding4(x)\nx = layers.Bidirectional(layers.LSTM(64))(x)\noutputs = layers.Dense(1,activation = 'sigmoid')(x)\n\nmodel4 = tf.keras.Model(inputs,outputs)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:48:22.504600Z","iopub.execute_input":"2024-08-05T00:48:22.504968Z","iopub.status.idle":"2024-08-05T00:48:22.683462Z","shell.execute_reply.started":"2024-08-05T00:48:22.504932Z","shell.execute_reply":"2024-08-05T00:48:22.682319Z"},"trusted":true},"execution_count":159,"outputs":[]},{"cell_type":"code","source":"model4.summary()","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:48:22.684803Z","iopub.execute_input":"2024-08-05T00:48:22.685135Z","iopub.status.idle":"2024-08-05T00:48:22.708727Z","shell.execute_reply.started":"2024-08-05T00:48:22.685106Z","shell.execute_reply":"2024-08-05T00:48:22.707727Z"},"trusted":true},"execution_count":160,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"functional_7\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"functional_7\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ input_layer_7 (\u001b[38;5;33mInputLayer\u001b[0m)      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ text_vectorization_3            │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m15\u001b[0m)             │             \u001b[38;5;34m0\u001b[0m │\n│ (\u001b[38;5;33mTextVectorization\u001b[0m)             │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ embedding_5 (\u001b[38;5;33mEmbedding\u001b[0m)         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m15\u001b[0m, \u001b[38;5;34m128\u001b[0m)        │     \u001b[38;5;34m1,280,000\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ bidirectional_1 (\u001b[38;5;33mBidirectional\u001b[0m) │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)            │        \u001b[38;5;34m98,816\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_7 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │           \u001b[38;5;34m129\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ input_layer_7 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ text_vectorization_3            │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">15</span>)             │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">TextVectorization</span>)             │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ embedding_5 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Embedding</span>)         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">15</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)        │     <span style=\"color: #00af00; text-decoration-color: #00af00\">1,280,000</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ bidirectional_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Bidirectional</span>) │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)            │        <span style=\"color: #00af00; text-decoration-color: #00af00\">98,816</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_7 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │           <span style=\"color: #00af00; text-decoration-color: #00af00\">129</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m1,378,945\u001b[0m (5.26 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">1,378,945</span> (5.26 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m1,378,945\u001b[0m (5.26 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">1,378,945</span> (5.26 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}]},{"cell_type":"code","source":"model4.compile(loss = 'binary_crossentropy', optimizer = tf.keras.optimizers.Adam(), metrics = ['accuracy'])","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:48:22.710099Z","iopub.execute_input":"2024-08-05T00:48:22.710552Z","iopub.status.idle":"2024-08-05T00:48:22.728267Z","shell.execute_reply.started":"2024-08-05T00:48:22.710483Z","shell.execute_reply":"2024-08-05T00:48:22.727258Z"},"trusted":true},"execution_count":161,"outputs":[]},{"cell_type":"code","source":"history4 = model4.fit(X_train,\n                     y_train,\n                     epochs = 5,\n                      batch_size = 32,\n                      validation_data = (X_test,y_test)\n                 )","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:48:22.733533Z","iopub.execute_input":"2024-08-05T00:48:22.733885Z","iopub.status.idle":"2024-08-05T00:48:47.338907Z","shell.execute_reply.started":"2024-08-05T00:48:22.733856Z","shell.execute_reply":"2024-08-05T00:48:47.337723Z"},"trusted":true},"execution_count":162,"outputs":[{"name":"stdout","text":"Epoch 1/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 21ms/step - accuracy: 0.6714 - loss: 0.5806 - val_accuracy: 0.7848 - val_loss: 0.4612\nEpoch 2/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 19ms/step - accuracy: 0.8610 - loss: 0.3287 - val_accuracy: 0.7638 - val_loss: 0.5054\nEpoch 3/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 18ms/step - accuracy: 0.9147 - loss: 0.2250 - val_accuracy: 0.7480 - val_loss: 0.6270\nEpoch 4/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 19ms/step - accuracy: 0.9492 - loss: 0.1456 - val_accuracy: 0.7572 - val_loss: 0.7225\nEpoch 5/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 19ms/step - accuracy: 0.9630 - loss: 0.1160 - val_accuracy: 0.7559 - val_loss: 0.7189\n","output_type":"stream"}]},{"cell_type":"code","source":"acc4 = model4.evaluate(X_test,y_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:48:47.342244Z","iopub.execute_input":"2024-08-05T00:48:47.342650Z","iopub.status.idle":"2024-08-05T00:48:47.565121Z","shell.execute_reply.started":"2024-08-05T00:48:47.342616Z","shell.execute_reply":"2024-08-05T00:48:47.563969Z"},"trusted":true},"execution_count":163,"outputs":[{"name":"stdout","text":"\u001b[1m24/24\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.7384 - loss: 0.7820\n","output_type":"stream"}]},{"cell_type":"code","source":"model4_pred = model4.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:48:47.566680Z","iopub.execute_input":"2024-08-05T00:48:47.567026Z","iopub.status.idle":"2024-08-05T00:48:48.639714Z","shell.execute_reply.started":"2024-08-05T00:48:47.566997Z","shell.execute_reply":"2024-08-05T00:48:48.638475Z"},"trusted":true},"execution_count":164,"outputs":[{"name":"stdout","text":"\u001b[1m24/24\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 23ms/step\n","output_type":"stream"}]},{"cell_type":"code","source":"metrics((y_test.numpy()),tf.squeeze(tf.round(model4_pred)).numpy())","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:48:48.642112Z","iopub.execute_input":"2024-08-05T00:48:48.642493Z","iopub.status.idle":"2024-08-05T00:48:48.663633Z","shell.execute_reply.started":"2024-08-05T00:48:48.642460Z","shell.execute_reply":"2024-08-05T00:48:48.662307Z"},"trusted":true},"execution_count":165,"outputs":[{"name":"stdout","text":"The details of disaster prediction is \n {'precision': 0.7651162790697674, 'recall': 0.7946859903381642, 'f1-score': 0.7796208530805686, 'support': 414} \n\nThe details of disaster prediction is \n {'precision': 0.7439759036144579, 'recall': 0.7097701149425287, 'f1-score': 0.7264705882352942, 'support': 348} \n\nThe final accuray is \n 0.7559055118110236\n","output_type":"stream"}]},{"cell_type":"code","source":"acc4","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:48:48.665214Z","iopub.execute_input":"2024-08-05T00:48:48.665726Z","iopub.status.idle":"2024-08-05T00:48:48.673781Z","shell.execute_reply.started":"2024-08-05T00:48:48.665684Z","shell.execute_reply":"2024-08-05T00:48:48.672568Z"},"trusted":true},"execution_count":166,"outputs":[{"execution_count":166,"output_type":"execute_result","data":{"text/plain":"[0.7189016342163086, 0.7559055089950562]"},"metadata":{}}]},{"cell_type":"markdown","source":"# **Using Conv 1D**","metadata":{}},{"cell_type":"code","source":"embedding_c = layers.Embedding(input_dim = max_len,\n    output_dim = 128,\n    embeddings_initializer='uniform')","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:48:48.675306Z","iopub.execute_input":"2024-08-05T00:48:48.675766Z","iopub.status.idle":"2024-08-05T00:48:48.684401Z","shell.execute_reply.started":"2024-08-05T00:48:48.675724Z","shell.execute_reply":"2024-08-05T00:48:48.683090Z"},"trusted":true},"execution_count":167,"outputs":[]},{"cell_type":"code","source":"inputs = layers.Input(shape = (1,), dtype = tf.string)\nx = vectorizer(inputs)\nx = embedding_c(x)\nx = layers.Conv1D(filters = 64,\n    kernel_size = 3,\n    strides=1,\n    padding='valid',\n    activation = 'sigmoid')(x)\nx = layers.GlobalAveragePooling1D()(x)\noutputs = layers.Dense(1,activation = 'sigmoid')(x)\nmodel5 = tf.keras.Model(inputs,outputs)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:48:48.686259Z","iopub.execute_input":"2024-08-05T00:48:48.686769Z","iopub.status.idle":"2024-08-05T00:48:48.738094Z","shell.execute_reply.started":"2024-08-05T00:48:48.686724Z","shell.execute_reply":"2024-08-05T00:48:48.736961Z"},"trusted":true},"execution_count":168,"outputs":[]},{"cell_type":"code","source":"model5.summary()","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:48:48.739622Z","iopub.execute_input":"2024-08-05T00:48:48.740061Z","iopub.status.idle":"2024-08-05T00:48:48.767687Z","shell.execute_reply.started":"2024-08-05T00:48:48.740010Z","shell.execute_reply":"2024-08-05T00:48:48.766473Z"},"trusted":true},"execution_count":169,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"functional_8\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"functional_8\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ input_layer_8 (\u001b[38;5;33mInputLayer\u001b[0m)      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ text_vectorization_3            │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m15\u001b[0m)             │             \u001b[38;5;34m0\u001b[0m │\n│ (\u001b[38;5;33mTextVectorization\u001b[0m)             │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ embedding_6 (\u001b[38;5;33mEmbedding\u001b[0m)         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m15\u001b[0m, \u001b[38;5;34m128\u001b[0m)        │     \u001b[38;5;34m1,280,000\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv1d (\u001b[38;5;33mConv1D\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m13\u001b[0m, \u001b[38;5;34m64\u001b[0m)         │        \u001b[38;5;34m24,640\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ global_average_pooling1d_2      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │             \u001b[38;5;34m0\u001b[0m │\n│ (\u001b[38;5;33mGlobalAveragePooling1D\u001b[0m)        │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_8 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │            \u001b[38;5;34m65\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ input_layer_8 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ text_vectorization_3            │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">15</span>)             │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">TextVectorization</span>)             │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ embedding_6 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Embedding</span>)         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">15</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)        │     <span style=\"color: #00af00; text-decoration-color: #00af00\">1,280,000</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv1d (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv1D</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">13</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)         │        <span style=\"color: #00af00; text-decoration-color: #00af00\">24,640</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ global_average_pooling1d_2      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">GlobalAveragePooling1D</span>)        │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_8 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │            <span style=\"color: #00af00; text-decoration-color: #00af00\">65</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m1,304,705\u001b[0m (4.98 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">1,304,705</span> (4.98 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m1,304,705\u001b[0m (4.98 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">1,304,705</span> (4.98 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}]},{"cell_type":"code","source":"model5.compile(loss = 'binary_crossentropy', optimizer = tf.keras.optimizers.Adam(), metrics = ['accuracy'])","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:48:48.769091Z","iopub.execute_input":"2024-08-05T00:48:48.769679Z","iopub.status.idle":"2024-08-05T00:48:48.781858Z","shell.execute_reply.started":"2024-08-05T00:48:48.769639Z","shell.execute_reply":"2024-08-05T00:48:48.780743Z"},"trusted":true},"execution_count":170,"outputs":[]},{"cell_type":"code","source":"history_5 = model5.fit(X_train,y_train, epochs = 5, batch_size =32, validation_data = (X_test,y_test))","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:48:48.783425Z","iopub.execute_input":"2024-08-05T00:48:48.783834Z","iopub.status.idle":"2024-08-05T00:49:01.663603Z","shell.execute_reply.started":"2024-08-05T00:48:48.783781Z","shell.execute_reply":"2024-08-05T00:49:01.661934Z"},"trusted":true},"execution_count":171,"outputs":[{"name":"stdout","text":"Epoch 1/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 11ms/step - accuracy: 0.6077 - loss: 0.6526 - val_accuracy: 0.7795 - val_loss: 0.4889\nEpoch 2/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 9ms/step - accuracy: 0.8370 - loss: 0.3983 - val_accuracy: 0.7782 - val_loss: 0.4745\nEpoch 3/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 10ms/step - accuracy: 0.8835 - loss: 0.2965 - val_accuracy: 0.7651 - val_loss: 0.5071\nEpoch 4/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 9ms/step - accuracy: 0.9147 - loss: 0.2334 - val_accuracy: 0.7507 - val_loss: 0.5543\nEpoch 5/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 9ms/step - accuracy: 0.9311 - loss: 0.1923 - val_accuracy: 0.7520 - val_loss: 0.5981\n","output_type":"stream"}]},{"cell_type":"code","source":"acc5 = model5.evaluate(X_test,y_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:49:01.666148Z","iopub.execute_input":"2024-08-05T00:49:01.666551Z","iopub.status.idle":"2024-08-05T00:49:01.819120Z","shell.execute_reply.started":"2024-08-05T00:49:01.666490Z","shell.execute_reply":"2024-08-05T00:49:01.817777Z"},"trusted":true},"execution_count":172,"outputs":[{"name":"stdout","text":"\u001b[1m24/24\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7304 - loss: 0.6357\n","output_type":"stream"}]},{"cell_type":"code","source":"model5_pred = model5.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:49:01.821396Z","iopub.execute_input":"2024-08-05T00:49:01.822366Z","iopub.status.idle":"2024-08-05T00:49:02.271194Z","shell.execute_reply.started":"2024-08-05T00:49:01.822330Z","shell.execute_reply":"2024-08-05T00:49:02.270205Z"},"trusted":true},"execution_count":173,"outputs":[{"name":"stdout","text":"\u001b[1m24/24\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step\n","output_type":"stream"}]},{"cell_type":"code","source":"metrics((y_test.numpy()),tf.squeeze(tf.round(model5_pred)).numpy())","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:49:02.273095Z","iopub.execute_input":"2024-08-05T00:49:02.273466Z","iopub.status.idle":"2024-08-05T00:49:02.295178Z","shell.execute_reply.started":"2024-08-05T00:49:02.273436Z","shell.execute_reply":"2024-08-05T00:49:02.293997Z"},"trusted":true},"execution_count":174,"outputs":[{"name":"stdout","text":"The details of disaster prediction is \n {'precision': 0.7710843373493976, 'recall': 0.7729468599033816, 'f1-score': 0.7720144752714113, 'support': 414} \n\nThe details of disaster prediction is \n {'precision': 0.729106628242075, 'recall': 0.7270114942528736, 'f1-score': 0.7280575539568346, 'support': 348} \n\nThe final accuray is \n 0.7519685039370079\n","output_type":"stream"}]},{"cell_type":"code","source":"acc5","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:49:02.296783Z","iopub.execute_input":"2024-08-05T00:49:02.297150Z","iopub.status.idle":"2024-08-05T00:49:02.304224Z","shell.execute_reply.started":"2024-08-05T00:49:02.297118Z","shell.execute_reply":"2024-08-05T00:49:02.303024Z"},"trusted":true},"execution_count":175,"outputs":[{"execution_count":175,"output_type":"execute_result","data":{"text/plain":"[0.5980896949768066, 0.751968502998352]"},"metadata":{}}]},{"cell_type":"markdown","source":"# **transfer learning embeddings**","metadata":{}},{"cell_type":"code","source":"import tensorflow as tf\nimport tensorflow_hub as hub\n\nprint(\"TensorFlow version:\", tf.__version__)\nprint(\"TensorFlow Hub version:\", hub.__version__)\n","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:49:02.305653Z","iopub.execute_input":"2024-08-05T00:49:02.306021Z","iopub.status.idle":"2024-08-05T00:49:03.563688Z","shell.execute_reply.started":"2024-08-05T00:49:02.305982Z","shell.execute_reply":"2024-08-05T00:49:03.562427Z"},"trusted":true},"execution_count":176,"outputs":[{"name":"stdout","text":"TensorFlow version: 2.15.0\nTensorFlow Hub version: 0.16.1\n","output_type":"stream"}]},{"cell_type":"code","source":"# # Example of pretrained embedding with universal sentence encoder - https://tfhub.dev/google/universal-sentence-encoder/4\n# import tensorflow_hub as hub\n# embed = hub.load(\"https://tfhub.dev/google/universal-sentence-encoder/4\") # load Universal Sentence Encoder\n# embed_samples = embed([sample_sentence,\n#                       \"When you call the universal sentence encoder on a sentence, it turns it into numbers.\"])\n\n# print(embed_samples[0][:50])","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:49:03.565215Z","iopub.execute_input":"2024-08-05T00:49:03.565659Z","iopub.status.idle":"2024-08-05T00:49:03.570983Z","shell.execute_reply.started":"2024-08-05T00:49:03.565626Z","shell.execute_reply":"2024-08-05T00:49:03.569589Z"},"trusted":true},"execution_count":177,"outputs":[]},{"cell_type":"code","source":"# # Each sentence has been encoded into a 512 dimension vector\n# embed_samples[0].shape","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:49:03.572584Z","iopub.execute_input":"2024-08-05T00:49:03.572968Z","iopub.status.idle":"2024-08-05T00:49:03.583321Z","shell.execute_reply.started":"2024-08-05T00:49:03.572938Z","shell.execute_reply":"2024-08-05T00:49:03.581967Z"},"trusted":true},"execution_count":178,"outputs":[]},{"cell_type":"code","source":"# # We can use this encoding layer in place of our text_vectorizer and embedding layer\n# sentence_encoder_layer = hub.KerasLayer(\"https://tfhub.dev/google/universal-sentence-encoder/4\",\n#                                         input_shape=[], # shape of inputs coming to our model \n#                                         dtype=tf.string, # data type of inputs coming to the USE layer\n#                                         trainable=False, # keep the pretrained weights (we'll create a feature extractor)\n#                                         name=\"USE\") ","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:49:03.585078Z","iopub.execute_input":"2024-08-05T00:49:03.585910Z","iopub.status.idle":"2024-08-05T00:49:03.597166Z","shell.execute_reply.started":"2024-08-05T00:49:03.585867Z","shell.execute_reply":"2024-08-05T00:49:03.595856Z"},"trusted":true},"execution_count":179,"outputs":[]},{"cell_type":"code","source":"# # Create model using the Sequential API\n# model_6 = tf.keras.Sequential([\n#   sentence_encoder_layer, # take in sentences and then encode them into an embedding\n#   layers.Dense(64, activation=\"relu\"),\n#   layers.Dense(1, activation=\"sigmoid\")\n# ], name=\"model_6_USE\")\n\n# # Compile model\n# model_6.compile(loss=\"binary_crossentropy\",\n#                 optimizer=tf.keras.optimizers.Adam(),\n#                 metrics=[\"accuracy\"])\n\n# model_6.summary()","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:49:03.598758Z","iopub.execute_input":"2024-08-05T00:49:03.599144Z","iopub.status.idle":"2024-08-05T00:49:03.613383Z","shell.execute_reply.started":"2024-08-05T00:49:03.599104Z","shell.execute_reply":"2024-08-05T00:49:03.612084Z"},"trusted":true},"execution_count":180,"outputs":[]},{"cell_type":"code","source":"# import tensorflow as tf\n# import tensorflow_hub as hub\n\n# # Load Universal Sentence Encoder\n# embed = hub.load(\"https://tfhub.dev/google/universal-sentence-encoder/4\")\n\n# # Create the sentence encoder layer\n# sentence_encoder_layer = hub.KerasLayer(\"https://tfhub.dev/google/universal-sentence-encoder/4\",\n#                                         input_shape=[], \n#                                         dtype=tf.string, \n#                                         trainable=False, \n#                                         name=\"USE\")\n\n# # Create model using the Functional API\n# inputs = tf.keras.Input(shape=(), dtype=tf.string)\n# x = sentence_encoder_layer(inputs)\n# x = tf.keras.layers.Dense(64, activation=\"relu\")(x)\n# outputs = tf.keras.layers.Dense(1, activation=\"sigmoid\")(x)\n\n# model_6 = tf.keras.Model(inputs=inputs, outputs=outputs, name=\"model_6_USE\")\n\n# # Compile model\n# model_6.compile(loss=\"binary_crossentropy\",\n#                 optimizer=tf.keras.optimizers.Adam(),\n#                 metrics=[\"accuracy\"])\n\n# model_6.summary()","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:49:03.615121Z","iopub.execute_input":"2024-08-05T00:49:03.615627Z","iopub.status.idle":"2024-08-05T00:49:03.624017Z","shell.execute_reply.started":"2024-08-05T00:49:03.615593Z","shell.execute_reply":"2024-08-05T00:49:03.622606Z"},"trusted":true},"execution_count":181,"outputs":[]},{"cell_type":"code","source":"# import tensorflow as tf\n# import tensorflow_hub as hub\n\n# # Create the sentence encoder layer\n# sentence_encoder_layer = hub.KerasLayer(\"https://tfhub.dev/google/universal-sentence-encoder/4\",\n#                                         input_shape=[], \n#                                         dtype=tf.string, \n#                                         trainable=False, \n#                                         name=\"USE\")\n\n# # Create model using the Sequential API\n# model_6 = tf.keras.Sequential([\n#     tf.keras.Input(shape=(), dtype=tf.string),  # Specify the input shape and dtype\n#     sentence_encoder_layer,\n#     tf.keras.layers.Dense(64, activation=\"relu\"),\n#     tf.keras.layers.Dense(1, activation=\"sigmoid\")\n# ], name=\"model_6_USE\")\n\n# # Compile model\n# model_6.compile(loss=\"binary_crossentropy\",\n#                 optimizer=tf.keras.optimizers.Adam(),\n#                 metrics=[\"accuracy\"])\n\n# model_6.summary()","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:49:03.625535Z","iopub.execute_input":"2024-08-05T00:49:03.625926Z","iopub.status.idle":"2024-08-05T00:49:03.638872Z","shell.execute_reply.started":"2024-08-05T00:49:03.625895Z","shell.execute_reply":"2024-08-05T00:49:03.637370Z"},"trusted":true},"execution_count":182,"outputs":[]},{"cell_type":"code","source":"import tensorflow as tf\nimport tensorflow_hub as hub\n\n# Create a custom layer that wraps the Universal Sentence Encoder\nclass UniversalSentenceEncoder(tf.keras.layers.Layer):\n    def __init__(self, **kwargs):\n        super(UniversalSentenceEncoder, self).__init__(**kwargs)\n        self.encoder = hub.load(\"https://tfhub.dev/google/universal-sentence-encoder/4\")\n\n    def call(self, inputs):\n        return self.encoder(inputs)\n\n# Create model using the Functional API\ninputs = tf.keras.Input(shape=(), dtype=tf.string)\nx = UniversalSentenceEncoder()(inputs)\nx = tf.keras.layers.Dense(64, activation=\"relu\")(x)\noutputs = tf.keras.layers.Dense(1, activation=\"sigmoid\")(x)\n\nmodel_6 = tf.keras.Model(inputs=inputs, outputs=outputs, name=\"model_6_USE\")\n\n# Compile model\nmodel_6.compile(loss=\"binary_crossentropy\",\n                optimizer=tf.keras.optimizers.Adam(),\n                metrics=[\"accuracy\"])\n\nmodel_6.summary()","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:49:03.640577Z","iopub.execute_input":"2024-08-05T00:49:03.641621Z","iopub.status.idle":"2024-08-05T00:49:41.933173Z","shell.execute_reply.started":"2024-08-05T00:49:03.641572Z","shell.execute_reply":"2024-08-05T00:49:41.931956Z"},"trusted":true},"execution_count":183,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"model_6_USE\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"model_6_USE\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ input_layer_9 (\u001b[38;5;33mInputLayer\u001b[0m)      │ (\u001b[38;5;45mNone\u001b[0m)                 │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ universal_sentence_encoder      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m512\u001b[0m)            │             \u001b[38;5;34m0\u001b[0m │\n│ (\u001b[38;5;33mUniversalSentenceEncoder\u001b[0m)      │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_9 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │        \u001b[38;5;34m32,832\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_10 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │            \u001b[38;5;34m65\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ input_layer_9 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>)                 │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ universal_sentence_encoder      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)            │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">UniversalSentenceEncoder</span>)      │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_9 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │        <span style=\"color: #00af00; text-decoration-color: #00af00\">32,832</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_10 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │            <span style=\"color: #00af00; text-decoration-color: #00af00\">65</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m32,897\u001b[0m (128.50 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">32,897</span> (128.50 KB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m32,897\u001b[0m (128.50 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">32,897</span> (128.50 KB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}]},{"cell_type":"code","source":"model_6.fit(X_train, y_train, validation_data = (X_test, y_test), epochs = 5,batch_size = 32 )","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:49:41.934619Z","iopub.execute_input":"2024-08-05T00:49:41.934976Z","iopub.status.idle":"2024-08-05T00:49:56.556085Z","shell.execute_reply.started":"2024-08-05T00:49:41.934945Z","shell.execute_reply":"2024-08-05T00:49:56.554730Z"},"trusted":true},"execution_count":184,"outputs":[{"name":"stdout","text":"Epoch 1/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 12ms/step - accuracy: 0.7572 - loss: 0.5822 - val_accuracy: 0.7940 - val_loss: 0.4497\nEpoch 2/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 9ms/step - accuracy: 0.8031 - loss: 0.4222 - val_accuracy: 0.8071 - val_loss: 0.4387\nEpoch 3/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 9ms/step - accuracy: 0.8121 - loss: 0.4071 - val_accuracy: 0.8123 - val_loss: 0.4329\nEpoch 4/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 10ms/step - accuracy: 0.8172 - loss: 0.3986 - val_accuracy: 0.8110 - val_loss: 0.4291\nEpoch 5/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 9ms/step - accuracy: 0.8194 - loss: 0.3919 - val_accuracy: 0.8150 - val_loss: 0.4268\n","output_type":"stream"},{"execution_count":184,"output_type":"execute_result","data":{"text/plain":"<keras.src.callbacks.history.History at 0x7d7e79c92a70>"},"metadata":{}}]},{"cell_type":"code","source":"model_6.summary()","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:49:56.557461Z","iopub.execute_input":"2024-08-05T00:49:56.557860Z","iopub.status.idle":"2024-08-05T00:49:56.584390Z","shell.execute_reply.started":"2024-08-05T00:49:56.557828Z","shell.execute_reply":"2024-08-05T00:49:56.583070Z"},"trusted":true},"execution_count":185,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"model_6_USE\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"model_6_USE\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ input_layer_9 (\u001b[38;5;33mInputLayer\u001b[0m)      │ (\u001b[38;5;45mNone\u001b[0m)                 │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ universal_sentence_encoder      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m512\u001b[0m)            │             \u001b[38;5;34m0\u001b[0m │\n│ (\u001b[38;5;33mUniversalSentenceEncoder\u001b[0m)      │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_9 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │        \u001b[38;5;34m32,832\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_10 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │            \u001b[38;5;34m65\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ input_layer_9 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>)                 │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ universal_sentence_encoder      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)            │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">UniversalSentenceEncoder</span>)      │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_9 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │        <span style=\"color: #00af00; text-decoration-color: #00af00\">32,832</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_10 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │            <span style=\"color: #00af00; text-decoration-color: #00af00\">65</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m98,693\u001b[0m (385.52 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">98,693</span> (385.52 KB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m32,897\u001b[0m (128.50 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">32,897</span> (128.50 KB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Optimizer params: \u001b[0m\u001b[38;5;34m65,796\u001b[0m (257.02 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Optimizer params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">65,796</span> (257.02 KB)\n</pre>\n"},"metadata":{}}]},{"cell_type":"code","source":"acc = model_6.evaluate(X_test,y_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:53:02.256624Z","iopub.execute_input":"2024-08-05T00:53:02.257470Z","iopub.status.idle":"2024-08-05T00:53:02.543357Z","shell.execute_reply.started":"2024-08-05T00:53:02.257425Z","shell.execute_reply":"2024-08-05T00:53:02.542225Z"},"trusted":true},"execution_count":186,"outputs":[{"name":"stdout","text":"\u001b[1m24/24\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - accuracy: 0.7883 - loss: 0.4776\n","output_type":"stream"}]},{"cell_type":"code","source":"acc","metadata":{"execution":{"iopub.status.busy":"2024-08-05T00:53:04.764212Z","iopub.execute_input":"2024-08-05T00:53:04.764685Z","iopub.status.idle":"2024-08-05T00:53:04.772657Z","shell.execute_reply.started":"2024-08-05T00:53:04.764649Z","shell.execute_reply":"2024-08-05T00:53:04.771330Z"},"trusted":true},"execution_count":187,"outputs":[{"execution_count":187,"output_type":"execute_result","data":{"text/plain":"[0.4267880618572235, 0.8149606585502625]"},"metadata":{}}]},{"cell_type":"code","source":"model6_pred = model_6.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-05T01:10:50.369392Z","iopub.execute_input":"2024-08-05T01:10:50.370709Z","iopub.status.idle":"2024-08-05T01:10:51.435562Z","shell.execute_reply.started":"2024-08-05T01:10:50.370659Z","shell.execute_reply":"2024-08-05T01:10:51.434374Z"},"trusted":true},"execution_count":188,"outputs":[{"name":"stdout","text":"\u001b[1m24/24\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 25ms/step\n","output_type":"stream"}]},{"cell_type":"code","source":"metrics((y_test.numpy()),tf.squeeze(tf.round(model6_pred)).numpy())","metadata":{"execution":{"iopub.status.busy":"2024-08-05T01:11:06.470797Z","iopub.execute_input":"2024-08-05T01:11:06.471226Z","iopub.status.idle":"2024-08-05T01:11:06.492206Z","shell.execute_reply.started":"2024-08-05T01:11:06.471192Z","shell.execute_reply":"2024-08-05T01:11:06.490769Z"},"trusted":true},"execution_count":190,"outputs":[{"name":"stdout","text":"The details of disaster prediction is \n {'precision': 0.8109339407744874, 'recall': 0.8599033816425121, 'f1-score': 0.8347010550996483, 'support': 414} \n\nThe details of disaster prediction is \n {'precision': 0.8204334365325078, 'recall': 0.7614942528735632, 'f1-score': 0.789865871833085, 'support': 348} \n\nThe final accuray is \n 0.8149606299212598\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# **Make the model with 10% of training data**","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}