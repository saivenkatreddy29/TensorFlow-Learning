{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9078270,"sourceType":"datasetVersion","datasetId":5476691}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# Download helper functions script\n!wget https://raw.githubusercontent.com/mrdbourke/tensorflow-deep-learning/main/extras/helper_functions.py","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-08-02T01:50:50.363051Z","iopub.execute_input":"2024-08-02T01:50:50.363452Z","iopub.status.idle":"2024-08-02T01:50:51.495990Z","shell.execute_reply.started":"2024-08-02T01:50:50.363423Z","shell.execute_reply":"2024-08-02T01:50:51.494562Z"},"trusted":true},"execution_count":38,"outputs":[{"name":"stdout","text":"--2024-08-02 01:50:51--  https://raw.githubusercontent.com/mrdbourke/tensorflow-deep-learning/main/extras/helper_functions.py\nResolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.110.133, 185.199.109.133, ...\nConnecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 10246 (10K) [text/plain]\nSaving to: 'helper_functions.py.1'\n\nhelper_functions.py 100%[===================>]  10.01K  --.-KB/s    in 0s      \n\n2024-08-02 01:50:51 (60.9 MB/s) - 'helper_functions.py.1' saved [10246/10246]\n\n","output_type":"stream"}]},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\n","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:51.499433Z","iopub.execute_input":"2024-08-02T01:50:51.499905Z","iopub.status.idle":"2024-08-02T01:50:51.505081Z","shell.execute_reply.started":"2024-08-02T01:50:51.499859Z","shell.execute_reply":"2024-08-02T01:50:51.503819Z"},"trusted":true},"execution_count":39,"outputs":[]},{"cell_type":"code","source":"train_data = pd.read_csv(\"/kaggle/input/nlp-data/nlp_data/train.csv\")\ntest_data = pd.read_csv(\"/kaggle/input/nlp-data/nlp_data/test.csv\")\n","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:51.506533Z","iopub.execute_input":"2024-08-02T01:50:51.506974Z","iopub.status.idle":"2024-08-02T01:50:51.556189Z","shell.execute_reply.started":"2024-08-02T01:50:51.506938Z","shell.execute_reply":"2024-08-02T01:50:51.555214Z"},"trusted":true},"execution_count":40,"outputs":[]},{"cell_type":"code","source":"train_data.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:51.559176Z","iopub.execute_input":"2024-08-02T01:50:51.559627Z","iopub.status.idle":"2024-08-02T01:50:51.572365Z","shell.execute_reply.started":"2024-08-02T01:50:51.559589Z","shell.execute_reply":"2024-08-02T01:50:51.571122Z"},"trusted":true},"execution_count":41,"outputs":[{"execution_count":41,"output_type":"execute_result","data":{"text/plain":"   id keyword location                                               text  \\\n0   1     NaN      NaN  Our Deeds are the Reason of this #earthquake M...   \n1   4     NaN      NaN             Forest fire near La Ronge Sask. Canada   \n2   5     NaN      NaN  All residents asked to 'shelter in place' are ...   \n3   6     NaN      NaN  13,000 people receive #wildfires evacuation or...   \n4   7     NaN      NaN  Just got sent this photo from Ruby #Alaska as ...   \n\n   target  \n0       1  \n1       1  \n2       1  \n3       1  \n4       1  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>keyword</th>\n      <th>location</th>\n      <th>text</th>\n      <th>target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Our Deeds are the Reason of this #earthquake M...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Forest fire near La Ronge Sask. Canada</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>5</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>All residents asked to 'shelter in place' are ...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>13,000 people receive #wildfires evacuation or...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Just got sent this photo from Ruby #Alaska as ...</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"test_data.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:51.573746Z","iopub.execute_input":"2024-08-02T01:50:51.574179Z","iopub.status.idle":"2024-08-02T01:50:51.588980Z","shell.execute_reply.started":"2024-08-02T01:50:51.574143Z","shell.execute_reply":"2024-08-02T01:50:51.587861Z"},"trusted":true},"execution_count":42,"outputs":[{"execution_count":42,"output_type":"execute_result","data":{"text/plain":"   id keyword location                                               text\n0   0     NaN      NaN                 Just happened a terrible car crash\n1   2     NaN      NaN  Heard about #earthquake is different cities, s...\n2   3     NaN      NaN  there is a forest fire at spot pond, geese are...\n3   9     NaN      NaN           Apocalypse lighting. #Spokane #wildfires\n4  11     NaN      NaN      Typhoon Soudelor kills 28 in China and Taiwan","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>keyword</th>\n      <th>location</th>\n      <th>text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Just happened a terrible car crash</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Heard about #earthquake is different cities, s...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>there is a forest fire at spot pond, geese are...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>9</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Apocalypse lighting. #Spokane #wildfires</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>11</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Typhoon Soudelor kills 28 in China and Taiwan</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"train_data.target.value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:51.590519Z","iopub.execute_input":"2024-08-02T01:50:51.592058Z","iopub.status.idle":"2024-08-02T01:50:51.603769Z","shell.execute_reply.started":"2024-08-02T01:50:51.592020Z","shell.execute_reply":"2024-08-02T01:50:51.602740Z"},"trusted":true},"execution_count":43,"outputs":[{"execution_count":43,"output_type":"execute_result","data":{"text/plain":"target\n0    4342\n1    3271\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"train_data = train_data.sample(frac= 1, random_state = 42)","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:51.605605Z","iopub.execute_input":"2024-08-02T01:50:51.606057Z","iopub.status.idle":"2024-08-02T01:50:51.613862Z","shell.execute_reply.started":"2024-08-02T01:50:51.606021Z","shell.execute_reply":"2024-08-02T01:50:51.612796Z"},"trusted":true},"execution_count":44,"outputs":[]},{"cell_type":"code","source":"train_data[['text','target']][:5]","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:51.615466Z","iopub.execute_input":"2024-08-02T01:50:51.615870Z","iopub.status.idle":"2024-08-02T01:50:51.629670Z","shell.execute_reply.started":"2024-08-02T01:50:51.615837Z","shell.execute_reply":"2024-08-02T01:50:51.628440Z"},"trusted":true},"execution_count":45,"outputs":[{"execution_count":45,"output_type":"execute_result","data":{"text/plain":"                                                   text  target\n2644  So you have a new weapon that can cause un-ima...       1\n2227  The f$&amp;@ing things I do for #GISHWHES Just...       0\n5448  DT @georgegalloway: RT @Galloway4Mayor: ÛÏThe...       1\n132   Aftershock back to school kick off was great. ...       0\n6845  in response to trauma Children of Addicts deve...       0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>text</th>\n      <th>target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2644</th>\n      <td>So you have a new weapon that can cause un-ima...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2227</th>\n      <td>The f$&amp;amp;@ing things I do for #GISHWHES Just...</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>5448</th>\n      <td>DT @georgegalloway: RT @Galloway4Mayor: ÛÏThe...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>132</th>\n      <td>Aftershock back to school kick off was great. ...</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>6845</th>\n      <td>in response to trauma Children of Addicts deve...</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"for row in train_data[['text', 'target']][:5].itertuples():\n    \n    _,text,label = row\n    print(text)\n    print(label)\n    print(\"\\n\")\n    \n","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:51.631114Z","iopub.execute_input":"2024-08-02T01:50:51.632076Z","iopub.status.idle":"2024-08-02T01:50:51.646802Z","shell.execute_reply.started":"2024-08-02T01:50:51.632041Z","shell.execute_reply":"2024-08-02T01:50:51.645666Z"},"trusted":true},"execution_count":46,"outputs":[{"name":"stdout","text":"So you have a new weapon that can cause un-imaginable destruction.\n1\n\n\nThe f$&amp;@ing things I do for #GISHWHES Just got soaked in a deluge going for pads and tampons. Thx @mishacollins @/@\n0\n\n\nDT @georgegalloway: RT @Galloway4Mayor: ÛÏThe CoL police can catch a pickpocket in Liverpool Stree... http://t.co/vXIn1gOq4Q\n1\n\n\nAftershock back to school kick off was great. I want to thank everyone for making it possible. What a great night.\n0\n\n\nin response to trauma Children of Addicts develop a defensive self - one that decreases vulnerability. (3\n0\n\n\n","output_type":"stream"}]},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(train_data['text'].to_numpy(), train_data['target'].to_numpy(), test_size = 0.1, random_state = 42)","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:51.651981Z","iopub.execute_input":"2024-08-02T01:50:51.652741Z","iopub.status.idle":"2024-08-02T01:50:51.664214Z","shell.execute_reply.started":"2024-08-02T01:50:51.652703Z","shell.execute_reply":"2024-08-02T01:50:51.663187Z"},"trusted":true},"execution_count":47,"outputs":[]},{"cell_type":"code","source":"X_train.shape, y_train.shape, X_test.shape, y_test.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:51.665473Z","iopub.execute_input":"2024-08-02T01:50:51.665847Z","iopub.status.idle":"2024-08-02T01:50:51.685105Z","shell.execute_reply.started":"2024-08-02T01:50:51.665816Z","shell.execute_reply":"2024-08-02T01:50:51.683961Z"},"trusted":true},"execution_count":48,"outputs":[{"execution_count":48,"output_type":"execute_result","data":{"text/plain":"((6851,), (6851,), (762,), (762,))"},"metadata":{}}]},{"cell_type":"code","source":"len(X_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:51.686683Z","iopub.execute_input":"2024-08-02T01:50:51.687089Z","iopub.status.idle":"2024-08-02T01:50:51.700281Z","shell.execute_reply.started":"2024-08-02T01:50:51.687053Z","shell.execute_reply":"2024-08-02T01:50:51.698961Z"},"trusted":true},"execution_count":49,"outputs":[{"execution_count":49,"output_type":"execute_result","data":{"text/plain":"6851"},"metadata":{}}]},{"cell_type":"markdown","source":"# **Converting text into numbers**","metadata":{}},{"cell_type":"code","source":"from tensorflow.keras.layers import TextVectorization\n\nvectorizer = TextVectorization(max_tokens=1000,standardize='lower_and_strip_punctuation', split='whitespace',ngrams=None,\n                               output_mode='int', output_sequence_length=None,pad_to_max_tokens=True,\n    encoding='utf-8')\n                    ","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:51.702111Z","iopub.execute_input":"2024-08-02T01:50:51.702509Z","iopub.status.idle":"2024-08-02T01:50:51.717464Z","shell.execute_reply.started":"2024-08-02T01:50:51.702474Z","shell.execute_reply":"2024-08-02T01:50:51.716146Z"},"trusted":true},"execution_count":50,"outputs":[]},{"cell_type":"code","source":"len(X_train[1].split())\n","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:51.718761Z","iopub.execute_input":"2024-08-02T01:50:51.719368Z","iopub.status.idle":"2024-08-02T01:50:51.726414Z","shell.execute_reply.started":"2024-08-02T01:50:51.719333Z","shell.execute_reply":"2024-08-02T01:50:51.725450Z"},"trusted":true},"execution_count":51,"outputs":[{"execution_count":51,"output_type":"execute_result","data":{"text/plain":"6"},"metadata":{}}]},{"cell_type":"code","source":"len(X_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:51.727899Z","iopub.execute_input":"2024-08-02T01:50:51.728533Z","iopub.status.idle":"2024-08-02T01:50:51.735875Z","shell.execute_reply.started":"2024-08-02T01:50:51.728496Z","shell.execute_reply":"2024-08-02T01:50:51.734834Z"},"trusted":true},"execution_count":52,"outputs":[{"execution_count":52,"output_type":"execute_result","data":{"text/plain":"6851"},"metadata":{}}]},{"cell_type":"code","source":"c=0\nfor i in range (len(X_train)):\n    c = c+ len(X_train[i].split())","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:51.737594Z","iopub.execute_input":"2024-08-02T01:50:51.737990Z","iopub.status.idle":"2024-08-02T01:50:51.760838Z","shell.execute_reply.started":"2024-08-02T01:50:51.737954Z","shell.execute_reply":"2024-08-02T01:50:51.759548Z"},"trusted":true},"execution_count":53,"outputs":[]},{"cell_type":"code","source":"c/len(X_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:51.762832Z","iopub.execute_input":"2024-08-02T01:50:51.763266Z","iopub.status.idle":"2024-08-02T01:50:51.772460Z","shell.execute_reply.started":"2024-08-02T01:50:51.763219Z","shell.execute_reply":"2024-08-02T01:50:51.771329Z"},"trusted":true},"execution_count":54,"outputs":[{"execution_count":54,"output_type":"execute_result","data":{"text/plain":"14.901036345059115"},"metadata":{}}]},{"cell_type":"code","source":"\nvectorizer = TextVectorization(output_sequence_length = 15,max_tokens=10000, output_mode = 'int')\n    ","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:51.773896Z","iopub.execute_input":"2024-08-02T01:50:51.774793Z","iopub.status.idle":"2024-08-02T01:50:51.787929Z","shell.execute_reply.started":"2024-08-02T01:50:51.774757Z","shell.execute_reply":"2024-08-02T01:50:51.786787Z"},"trusted":true},"execution_count":55,"outputs":[]},{"cell_type":"code","source":"vectorizer.adapt(X_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:51.789826Z","iopub.execute_input":"2024-08-02T01:50:51.790298Z","iopub.status.idle":"2024-08-02T01:50:51.893096Z","shell.execute_reply.started":"2024-08-02T01:50:51.790259Z","shell.execute_reply":"2024-08-02T01:50:51.891966Z"},"trusted":true},"execution_count":56,"outputs":[]},{"cell_type":"code","source":"# Create sample sentence and tokenize it\nsample_sentence = \"There's a flood in my street!\"\nvectorizer([sample_sentence])","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:51.895449Z","iopub.execute_input":"2024-08-02T01:50:51.895792Z","iopub.status.idle":"2024-08-02T01:50:51.913102Z","shell.execute_reply.started":"2024-08-02T01:50:51.895762Z","shell.execute_reply":"2024-08-02T01:50:51.912066Z"},"trusted":true},"execution_count":57,"outputs":[{"execution_count":57,"output_type":"execute_result","data":{"text/plain":"<tf.Tensor: shape=(1, 15), dtype=int64, numpy=\narray([[264,   3, 232,   4,  13, 698,   0,   0,   0,   0,   0,   0,   0,\n          0,   0]])>"},"metadata":{}}]},{"cell_type":"code","source":"words = vectorizer.get_vocabulary()","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:51.914506Z","iopub.execute_input":"2024-08-02T01:50:51.914934Z","iopub.status.idle":"2024-08-02T01:50:51.971644Z","shell.execute_reply.started":"2024-08-02T01:50:51.914870Z","shell.execute_reply":"2024-08-02T01:50:51.970479Z"},"trusted":true},"execution_count":58,"outputs":[]},{"cell_type":"code","source":"len(words), words[:5], words[-5:]","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:51.972923Z","iopub.execute_input":"2024-08-02T01:50:51.973293Z","iopub.status.idle":"2024-08-02T01:50:51.980950Z","shell.execute_reply.started":"2024-08-02T01:50:51.973260Z","shell.execute_reply":"2024-08-02T01:50:51.979961Z"},"trusted":true},"execution_count":59,"outputs":[{"execution_count":59,"output_type":"execute_result","data":{"text/plain":"(10000,\n ['', '[UNK]', 'the', 'a', 'in'],\n ['pages', 'paeds', 'pads', 'padres', 'paddytomlinson1'])"},"metadata":{}}]},{"cell_type":"markdown","source":"# **Create Embeddings using embedding layer**","metadata":{}},{"cell_type":"code","source":"from tensorflow.keras import layers\nmax_len = 10000","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:51.982232Z","iopub.execute_input":"2024-08-02T01:50:51.982690Z","iopub.status.idle":"2024-08-02T01:50:51.988774Z","shell.execute_reply.started":"2024-08-02T01:50:51.982663Z","shell.execute_reply":"2024-08-02T01:50:51.987818Z"},"trusted":true},"execution_count":60,"outputs":[]},{"cell_type":"code","source":"embeddings = layers.Embedding(input_dim = max_len, output_dim =128,  embeddings_initializer='uniform' )","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:51.990258Z","iopub.execute_input":"2024-08-02T01:50:51.990553Z","iopub.status.idle":"2024-08-02T01:50:52.004776Z","shell.execute_reply.started":"2024-08-02T01:50:51.990529Z","shell.execute_reply":"2024-08-02T01:50:52.003752Z"},"trusted":true},"execution_count":61,"outputs":[]},{"cell_type":"code","source":"embeddings(vectorizer('this is money'))","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:52.007530Z","iopub.execute_input":"2024-08-02T01:50:52.010147Z","iopub.status.idle":"2024-08-02T01:50:52.047931Z","shell.execute_reply.started":"2024-08-02T01:50:52.010109Z","shell.execute_reply":"2024-08-02T01:50:52.046972Z"},"trusted":true},"execution_count":62,"outputs":[{"execution_count":62,"output_type":"execute_result","data":{"text/plain":"<tf.Tensor: shape=(15, 128), dtype=float32, numpy=\narray([[ 0.01421328, -0.0262231 , -0.03990563, ...,  0.02400113,\n         0.00859147,  0.00769035],\n       [-0.01372974,  0.0184515 , -0.01473534, ..., -0.00988911,\n         0.03259045, -0.00187547],\n       [-0.01875142, -0.01843839, -0.01733533, ..., -0.00736075,\n         0.03592733,  0.02325722],\n       ...,\n       [-0.04376069, -0.0269156 , -0.02837255, ..., -0.02900155,\n        -0.02909648,  0.02926309],\n       [-0.04376069, -0.0269156 , -0.02837255, ..., -0.02900155,\n        -0.02909648,  0.02926309],\n       [-0.04376069, -0.0269156 , -0.02837255, ..., -0.02900155,\n        -0.02909648,  0.02926309]], dtype=float32)>"},"metadata":{}}]},{"cell_type":"markdown","source":"# **Model 1 using Naive bayes **","metadata":{}},{"cell_type":"code","source":"from sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.pipeline import Pipeline\n\nmodel0 = Pipeline(\n[\n    ('tfidf', TfidfVectorizer()),\n    ('clf', MultinomialNB())\n])","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:52.049259Z","iopub.execute_input":"2024-08-02T01:50:52.049572Z","iopub.status.idle":"2024-08-02T01:50:52.054772Z","shell.execute_reply.started":"2024-08-02T01:50:52.049546Z","shell.execute_reply":"2024-08-02T01:50:52.053755Z"},"trusted":true},"execution_count":63,"outputs":[]},{"cell_type":"code","source":"y_train","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:52.056328Z","iopub.execute_input":"2024-08-02T01:50:52.056661Z","iopub.status.idle":"2024-08-02T01:50:52.066518Z","shell.execute_reply.started":"2024-08-02T01:50:52.056635Z","shell.execute_reply":"2024-08-02T01:50:52.065390Z"},"trusted":true},"execution_count":64,"outputs":[{"execution_count":64,"output_type":"execute_result","data":{"text/plain":"array([0, 0, 1, ..., 1, 1, 0])"},"metadata":{}}]},{"cell_type":"code","source":"model0.fit(X_train,y_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:52.072693Z","iopub.execute_input":"2024-08-02T01:50:52.073040Z","iopub.status.idle":"2024-08-02T01:50:52.253848Z","shell.execute_reply.started":"2024-08-02T01:50:52.073013Z","shell.execute_reply":"2024-08-02T01:50:52.252770Z"},"trusted":true},"execution_count":65,"outputs":[{"execution_count":65,"output_type":"execute_result","data":{"text/plain":"Pipeline(steps=[('tfidf', TfidfVectorizer()), ('clf', MultinomialNB())])","text/html":"<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;tfidf&#x27;, TfidfVectorizer()), (&#x27;clf&#x27;, MultinomialNB())])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;tfidf&#x27;, TfidfVectorizer()), (&#x27;clf&#x27;, MultinomialNB())])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" ><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">TfidfVectorizer</label><div class=\"sk-toggleable__content\"><pre>TfidfVectorizer()</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" ><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">MultinomialNB</label><div class=\"sk-toggleable__content\"><pre>MultinomialNB()</pre></div></div></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"model0.score(X_test,y_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:52.255474Z","iopub.execute_input":"2024-08-02T01:50:52.255807Z","iopub.status.idle":"2024-08-02T01:50:52.280601Z","shell.execute_reply.started":"2024-08-02T01:50:52.255778Z","shell.execute_reply":"2024-08-02T01:50:52.279506Z"},"trusted":true},"execution_count":66,"outputs":[{"execution_count":66,"output_type":"execute_result","data":{"text/plain":"0.7926509186351706"},"metadata":{}}]},{"cell_type":"code","source":"y_pred = model0.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:52.283473Z","iopub.execute_input":"2024-08-02T01:50:52.284161Z","iopub.status.idle":"2024-08-02T01:50:52.307133Z","shell.execute_reply.started":"2024-08-02T01:50:52.284130Z","shell.execute_reply":"2024-08-02T01:50:52.306075Z"},"trusted":true},"execution_count":67,"outputs":[]},{"cell_type":"code","source":"from sklearn.metrics import accuracy_score, classification_report\ndef metrics (y_pred,y_test):\n    acc = accuracy_score(y_test,y_pred)\n    report = classification_report(y_test,y_pred, output_dict = True)\n    disaster = report['0']\n    safe = report['1']\n    print(f\"The details of disaster prediction is \\n {disaster} \\n\")\n    \n    print(f\"The details of disaster prediction is \\n {safe} \\n\") \n    print(f\"The final accuray is \\n {acc}\")\n    ","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:52.308847Z","iopub.execute_input":"2024-08-02T01:50:52.309717Z","iopub.status.idle":"2024-08-02T01:50:52.316634Z","shell.execute_reply.started":"2024-08-02T01:50:52.309677Z","shell.execute_reply":"2024-08-02T01:50:52.315637Z"},"trusted":true},"execution_count":68,"outputs":[]},{"cell_type":"code","source":" metrics(y_test,y_pred)","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:52.318135Z","iopub.execute_input":"2024-08-02T01:50:52.318516Z","iopub.status.idle":"2024-08-02T01:50:52.340117Z","shell.execute_reply.started":"2024-08-02T01:50:52.318482Z","shell.execute_reply":"2024-08-02T01:50:52.338894Z"},"trusted":true},"execution_count":69,"outputs":[{"name":"stdout","text":"The details of disaster prediction is \n {'precision': 0.9323671497584541, 'recall': 0.748062015503876, 'f1-score': 0.8301075268817204, 'support': 516} \n\nThe details of disaster prediction is \n {'precision': 0.6264367816091954, 'recall': 0.8861788617886179, 'f1-score': 0.734006734006734, 'support': 246} \n\nThe final accuray is \n 0.7926509186351706\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# **Deep learning model**","metadata":{}},{"cell_type":"code","source":"from helper_functions import create_tensorboard_callback\n\nSave_dir = \"model_logs\"","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:52.341862Z","iopub.execute_input":"2024-08-02T01:50:52.342305Z","iopub.status.idle":"2024-08-02T01:50:52.349220Z","shell.execute_reply.started":"2024-08-02T01:50:52.342260Z","shell.execute_reply":"2024-08-02T01:50:52.348167Z"},"trusted":true},"execution_count":70,"outputs":[]},{"cell_type":"code","source":"X_train.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:50:52.351431Z","iopub.execute_input":"2024-08-02T01:50:52.351866Z","iopub.status.idle":"2024-08-02T01:50:52.359825Z","shell.execute_reply.started":"2024-08-02T01:50:52.351830Z","shell.execute_reply":"2024-08-02T01:50:52.358703Z"},"trusted":true},"execution_count":71,"outputs":[{"execution_count":71,"output_type":"execute_result","data":{"text/plain":"(6851,)"},"metadata":{}}]},{"cell_type":"code","source":"import tensorflow as tf","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:51:22.880976Z","iopub.execute_input":"2024-08-02T01:51:22.881815Z","iopub.status.idle":"2024-08-02T01:51:22.886192Z","shell.execute_reply.started":"2024-08-02T01:51:22.881776Z","shell.execute_reply":"2024-08-02T01:51:22.885116Z"},"trusted":true},"execution_count":73,"outputs":[]},{"cell_type":"code","source":" from tensorflow.keras import layers\n\ninputs = layers.Input(shape =(1,), dtype = tf.string)\n\nx = embeddings(vectorizer(inputs))\nx = layers.GlobalAveragePooling1D()(x)  \n\noutputs = layers.Dense(1,activation = 'sigmoid')(x)\n\nmodel1 = tf.keras.Model(inputs,outputs)","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:51:23.189145Z","iopub.execute_input":"2024-08-02T01:51:23.189834Z","iopub.status.idle":"2024-08-02T01:51:23.215125Z","shell.execute_reply.started":"2024-08-02T01:51:23.189800Z","shell.execute_reply":"2024-08-02T01:51:23.214171Z"},"trusted":true},"execution_count":74,"outputs":[]},{"cell_type":"code","source":"model1.compile(loss = 'binary_crossentropy', optimizer = tf.keras.optimizers.Adam(), metrics = ['accuracy'])","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:51:23.816561Z","iopub.execute_input":"2024-08-02T01:51:23.817393Z","iopub.status.idle":"2024-08-02T01:51:23.833402Z","shell.execute_reply.started":"2024-08-02T01:51:23.817353Z","shell.execute_reply":"2024-08-02T01:51:23.832375Z"},"trusted":true},"execution_count":75,"outputs":[]},{"cell_type":"code","source":"model1.summary()","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:51:24.074472Z","iopub.execute_input":"2024-08-02T01:51:24.075156Z","iopub.status.idle":"2024-08-02T01:51:24.097435Z","shell.execute_reply.started":"2024-08-02T01:51:24.075121Z","shell.execute_reply":"2024-08-02T01:51:24.096476Z"},"trusted":true},"execution_count":76,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"functional\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"functional\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ input_layer (\u001b[38;5;33mInputLayer\u001b[0m)        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ text_vectorization_3            │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m15\u001b[0m)             │             \u001b[38;5;34m0\u001b[0m │\n│ (\u001b[38;5;33mTextVectorization\u001b[0m)             │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ embedding_1 (\u001b[38;5;33mEmbedding\u001b[0m)         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m15\u001b[0m, \u001b[38;5;34m128\u001b[0m)        │     \u001b[38;5;34m1,280,000\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ global_average_pooling1d        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)            │             \u001b[38;5;34m0\u001b[0m │\n│ (\u001b[38;5;33mGlobalAveragePooling1D\u001b[0m)        │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense (\u001b[38;5;33mDense\u001b[0m)                   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │           \u001b[38;5;34m129\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ input_layer (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ text_vectorization_3            │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">15</span>)             │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">TextVectorization</span>)             │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ embedding_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Embedding</span>)         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">15</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)        │     <span style=\"color: #00af00; text-decoration-color: #00af00\">1,280,000</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ global_average_pooling1d        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)            │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">GlobalAveragePooling1D</span>)        │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │           <span style=\"color: #00af00; text-decoration-color: #00af00\">129</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m1,280,129\u001b[0m (4.88 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">1,280,129</span> (4.88 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m1,280,129\u001b[0m (4.88 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">1,280,129</span> (4.88 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}]},{"cell_type":"code","source":"print(\"X_train shape:\", X_train.shape)\nprint(\"y_train shape:\", y_train.shape)","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:51:24.297354Z","iopub.execute_input":"2024-08-02T01:51:24.298135Z","iopub.status.idle":"2024-08-02T01:51:24.303315Z","shell.execute_reply.started":"2024-08-02T01:51:24.298095Z","shell.execute_reply":"2024-08-02T01:51:24.302270Z"},"trusted":true},"execution_count":77,"outputs":[{"name":"stdout","text":"X_train shape: (6851,)\ny_train shape: (6851,)\n","output_type":"stream"}]},{"cell_type":"code","source":"y_train = y_train.reshape(-1, 1)\ny_test = y_test.reshape(-1, 1)","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:51:24.529431Z","iopub.execute_input":"2024-08-02T01:51:24.530156Z","iopub.status.idle":"2024-08-02T01:51:24.534774Z","shell.execute_reply.started":"2024-08-02T01:51:24.530124Z","shell.execute_reply":"2024-08-02T01:51:24.533799Z"},"trusted":true},"execution_count":78,"outputs":[]},{"cell_type":"code","source":"print(\"X_train shape:\", X_train.shape)\nprint(\"y_train shape:\", y_train.shape)","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:51:24.783039Z","iopub.execute_input":"2024-08-02T01:51:24.783435Z","iopub.status.idle":"2024-08-02T01:51:24.789837Z","shell.execute_reply.started":"2024-08-02T01:51:24.783404Z","shell.execute_reply":"2024-08-02T01:51:24.788757Z"},"trusted":true},"execution_count":79,"outputs":[{"name":"stdout","text":"X_train shape: (6851,)\ny_train shape: (6851, 1)\n","output_type":"stream"}]},{"cell_type":"code","source":"history1 = model1.fit(x= X_train, y= y_train,\n                     batch_size = 32, epochs = 5, validation_data = (X_test,y_test))","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:51:25.022159Z","iopub.execute_input":"2024-08-02T01:51:25.022519Z","iopub.status.idle":"2024-08-02T01:51:34.136690Z","shell.execute_reply.started":"2024-08-02T01:51:25.022493Z","shell.execute_reply":"2024-08-02T01:51:34.135792Z"},"trusted":true},"execution_count":80,"outputs":[{"name":"stdout","text":"Epoch 1/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 8ms/step - accuracy: 0.6401 - loss: 0.6501 - val_accuracy: 0.7612 - val_loss: 0.5337\nEpoch 2/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - accuracy: 0.8161 - loss: 0.4626 - val_accuracy: 0.7822 - val_loss: 0.4713\nEpoch 3/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 8ms/step - accuracy: 0.8571 - loss: 0.3560 - val_accuracy: 0.7874 - val_loss: 0.4627\nEpoch 4/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - accuracy: 0.8882 - loss: 0.2925 - val_accuracy: 0.7848 - val_loss: 0.4622\nEpoch 5/5\n\u001b[1m215/215\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - accuracy: 0.9195 - loss: 0.2329 - val_accuracy: 0.7769 - val_loss: 0.4830\n","output_type":"stream"}]},{"cell_type":"code","source":"model1_predict = model1.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:56:43.703410Z","iopub.execute_input":"2024-08-02T01:56:43.703853Z","iopub.status.idle":"2024-08-02T01:56:44.098645Z","shell.execute_reply.started":"2024-08-02T01:56:43.703824Z","shell.execute_reply":"2024-08-02T01:56:44.097442Z"},"trusted":true},"execution_count":81,"outputs":[{"name":"stdout","text":"\u001b[1m24/24\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step\n","output_type":"stream"}]},{"cell_type":"code","source":"model1_predict[0]","metadata":{"execution":{"iopub.status.busy":"2024-08-02T01:56:44.465611Z","iopub.execute_input":"2024-08-02T01:56:44.466039Z","iopub.status.idle":"2024-08-02T01:56:44.473252Z","shell.execute_reply.started":"2024-08-02T01:56:44.466005Z","shell.execute_reply":"2024-08-02T01:56:44.472159Z"},"trusted":true},"execution_count":82,"outputs":[{"execution_count":82,"output_type":"execute_result","data":{"text/plain":"array([0.4071458], dtype=float32)"},"metadata":{}}]},{"cell_type":"code","source":"weights = model1.get_layer(\"embedding_1\").get_weights()[0]\nvocab = vectorizer.get_vocabulary()","metadata":{"execution":{"iopub.status.busy":"2024-08-02T02:33:14.681494Z","iopub.execute_input":"2024-08-02T02:33:14.681865Z","iopub.status.idle":"2024-08-02T02:33:14.727183Z","shell.execute_reply.started":"2024-08-02T02:33:14.681836Z","shell.execute_reply":"2024-08-02T02:33:14.726017Z"},"trusted":true},"execution_count":94,"outputs":[]},{"cell_type":"code","source":"import io\nimport os\nimport re\nimport shutil\nimport string\nimport tensorflow as tf\n\nfrom tensorflow.keras import Sequential\nfrom tensorflow.keras.layers import Dense, Embedding, GlobalAveragePooling1D\nfrom tensorflow.keras.layers import TextVectorization","metadata":{"execution":{"iopub.status.busy":"2024-08-02T02:33:46.332097Z","iopub.execute_input":"2024-08-02T02:33:46.332507Z","iopub.status.idle":"2024-08-02T02:33:46.338454Z","shell.execute_reply.started":"2024-08-02T02:33:46.332476Z","shell.execute_reply":"2024-08-02T02:33:46.337193Z"},"trusted":true},"execution_count":96,"outputs":[]},{"cell_type":"code","source":"out_v = io.open('vectors.tsv', 'w', encoding='utf-8')\nout_m = io.open('metadata.tsv', 'w', encoding='utf-8')\n\nfor index, word in enumerate(vocab):\n  if index == 0:\n    continue  # skip 0, it's padding.\n  vec = weights[index]\n  out_v.write('\\t'.join([str(x) for x in vec]) + \"\\n\")\n  out_m.write(word + \"\\n\")\nout_v.close()\nout_m.close()","metadata":{"execution":{"iopub.status.busy":"2024-08-02T02:33:47.700396Z","iopub.execute_input":"2024-08-02T02:33:47.701452Z","iopub.status.idle":"2024-08-02T02:33:48.588646Z","shell.execute_reply.started":"2024-08-02T02:33:47.701409Z","shell.execute_reply":"2024-08-02T02:33:48.586784Z"},"trusted":true},"execution_count":97,"outputs":[]},{"cell_type":"code","source":"try:\n  from google.colab import files\n  files.download('vectors.tsv')\n  files.download('metadata.tsv')\nexcept Exception:\n  pass","metadata":{"execution":{"iopub.status.busy":"2024-08-02T02:34:16.930390Z","iopub.execute_input":"2024-08-02T02:34:16.930789Z","iopub.status.idle":"2024-08-02T02:34:16.936431Z","shell.execute_reply.started":"2024-08-02T02:34:16.930756Z","shell.execute_reply":"2024-08-02T02:34:16.935286Z"},"trusted":true},"execution_count":98,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}