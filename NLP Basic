{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9078270,"sourceType":"datasetVersion","datasetId":5476691}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# Download helper functions script\n!wget https://raw.githubusercontent.com/mrdbourke/tensorflow-deep-learning/main/extras/helper_functions.py","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-08-03T04:10:38.990815Z","iopub.execute_input":"2024-08-03T04:10:38.991233Z","iopub.status.idle":"2024-08-03T04:10:40.305528Z","shell.execute_reply.started":"2024-08-03T04:10:38.991198Z","shell.execute_reply":"2024-08-03T04:10:40.303861Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"--2024-08-03 04:10:39--  https://raw.githubusercontent.com/mrdbourke/tensorflow-deep-learning/main/extras/helper_functions.py\nResolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.111.133, 185.199.110.133, ...\nConnecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 10246 (10K) [text/plain]\nSaving to: 'helper_functions.py'\n\nhelper_functions.py 100%[===================>]  10.01K  --.-KB/s    in 0s      \n\n2024-08-03 04:10:40 (43.5 MB/s) - 'helper_functions.py' saved [10246/10246]\n\n","output_type":"stream"}]},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\n","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:40.308338Z","iopub.execute_input":"2024-08-03T04:10:40.308742Z","iopub.status.idle":"2024-08-03T04:10:40.742253Z","shell.execute_reply.started":"2024-08-03T04:10:40.308707Z","shell.execute_reply":"2024-08-03T04:10:40.741009Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"train_data = pd.read_csv(\"/kaggle/input/nlp-data/nlp_data/train.csv\")\ntest_data = pd.read_csv(\"/kaggle/input/nlp-data/nlp_data/test.csv\")\n","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:40.743539Z","iopub.execute_input":"2024-08-03T04:10:40.744018Z","iopub.status.idle":"2024-08-03T04:10:40.847332Z","shell.execute_reply.started":"2024-08-03T04:10:40.743985Z","shell.execute_reply":"2024-08-03T04:10:40.846303Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"code","source":"train_data.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:40.849442Z","iopub.execute_input":"2024-08-03T04:10:40.850304Z","iopub.status.idle":"2024-08-03T04:10:40.873983Z","shell.execute_reply.started":"2024-08-03T04:10:40.850262Z","shell.execute_reply":"2024-08-03T04:10:40.872527Z"},"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"   id keyword location                                               text  \\\n0   1     NaN      NaN  Our Deeds are the Reason of this #earthquake M...   \n1   4     NaN      NaN             Forest fire near La Ronge Sask. Canada   \n2   5     NaN      NaN  All residents asked to 'shelter in place' are ...   \n3   6     NaN      NaN  13,000 people receive #wildfires evacuation or...   \n4   7     NaN      NaN  Just got sent this photo from Ruby #Alaska as ...   \n\n   target  \n0       1  \n1       1  \n2       1  \n3       1  \n4       1  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>keyword</th>\n      <th>location</th>\n      <th>text</th>\n      <th>target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Our Deeds are the Reason of this #earthquake M...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Forest fire near La Ronge Sask. Canada</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>5</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>All residents asked to 'shelter in place' are ...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>13,000 people receive #wildfires evacuation or...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Just got sent this photo from Ruby #Alaska as ...</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"test_data.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:40.875798Z","iopub.execute_input":"2024-08-03T04:10:40.876126Z","iopub.status.idle":"2024-08-03T04:10:40.887422Z","shell.execute_reply.started":"2024-08-03T04:10:40.876100Z","shell.execute_reply":"2024-08-03T04:10:40.886058Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"   id keyword location                                               text\n0   0     NaN      NaN                 Just happened a terrible car crash\n1   2     NaN      NaN  Heard about #earthquake is different cities, s...\n2   3     NaN      NaN  there is a forest fire at spot pond, geese are...\n3   9     NaN      NaN           Apocalypse lighting. #Spokane #wildfires\n4  11     NaN      NaN      Typhoon Soudelor kills 28 in China and Taiwan","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>keyword</th>\n      <th>location</th>\n      <th>text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Just happened a terrible car crash</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Heard about #earthquake is different cities, s...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>there is a forest fire at spot pond, geese are...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>9</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Apocalypse lighting. #Spokane #wildfires</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>11</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Typhoon Soudelor kills 28 in China and Taiwan</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"train_data.target.value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:40.888988Z","iopub.execute_input":"2024-08-03T04:10:40.889788Z","iopub.status.idle":"2024-08-03T04:10:40.909022Z","shell.execute_reply.started":"2024-08-03T04:10:40.889742Z","shell.execute_reply":"2024-08-03T04:10:40.907809Z"},"trusted":true},"execution_count":7,"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"target\n0    4342\n1    3271\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"train_data = train_data.sample(frac= 1, random_state = 42)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:40.910399Z","iopub.execute_input":"2024-08-03T04:10:40.910860Z","iopub.status.idle":"2024-08-03T04:10:40.930172Z","shell.execute_reply.started":"2024-08-03T04:10:40.910826Z","shell.execute_reply":"2024-08-03T04:10:40.928923Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"train_data[['text','target']][:5]","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:40.931911Z","iopub.execute_input":"2024-08-03T04:10:40.932483Z","iopub.status.idle":"2024-08-03T04:10:40.948186Z","shell.execute_reply.started":"2024-08-03T04:10:40.932424Z","shell.execute_reply":"2024-08-03T04:10:40.946960Z"},"trusted":true},"execution_count":9,"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"                                                   text  target\n2644  So you have a new weapon that can cause un-ima...       1\n2227  The f$&amp;@ing things I do for #GISHWHES Just...       0\n5448  DT @georgegalloway: RT @Galloway4Mayor: ÛÏThe...       1\n132   Aftershock back to school kick off was great. ...       0\n6845  in response to trauma Children of Addicts deve...       0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>text</th>\n      <th>target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2644</th>\n      <td>So you have a new weapon that can cause un-ima...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2227</th>\n      <td>The f$&amp;amp;@ing things I do for #GISHWHES Just...</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>5448</th>\n      <td>DT @georgegalloway: RT @Galloway4Mayor: ÛÏThe...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>132</th>\n      <td>Aftershock back to school kick off was great. ...</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>6845</th>\n      <td>in response to trauma Children of Addicts deve...</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"for row in train_data[['text', 'target']][:5].itertuples():\n    \n    _,text,label = row\n    print(text)\n    print(label)\n    print(\"\\n\")\n    \n","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:40.949523Z","iopub.execute_input":"2024-08-03T04:10:40.949883Z","iopub.status.idle":"2024-08-03T04:10:40.966499Z","shell.execute_reply.started":"2024-08-03T04:10:40.949852Z","shell.execute_reply":"2024-08-03T04:10:40.965088Z"},"trusted":true},"execution_count":10,"outputs":[{"name":"stdout","text":"So you have a new weapon that can cause un-imaginable destruction.\n1\n\n\nThe f$&amp;@ing things I do for #GISHWHES Just got soaked in a deluge going for pads and tampons. Thx @mishacollins @/@\n0\n\n\nDT @georgegalloway: RT @Galloway4Mayor: ÛÏThe CoL police can catch a pickpocket in Liverpool Stree... http://t.co/vXIn1gOq4Q\n1\n\n\nAftershock back to school kick off was great. I want to thank everyone for making it possible. What a great night.\n0\n\n\nin response to trauma Children of Addicts develop a defensive self - one that decreases vulnerability. (3\n0\n\n\n","output_type":"stream"}]},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(train_data['text'].to_numpy(), train_data['target'].to_numpy(), test_size = 0.1, random_state = 42)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:40.971055Z","iopub.execute_input":"2024-08-03T04:10:40.971560Z","iopub.status.idle":"2024-08-03T04:10:41.674843Z","shell.execute_reply.started":"2024-08-03T04:10:40.971522Z","shell.execute_reply":"2024-08-03T04:10:41.673573Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"code","source":"X_train.shape, y_train.shape, X_test.shape, y_test.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:41.676229Z","iopub.execute_input":"2024-08-03T04:10:41.676630Z","iopub.status.idle":"2024-08-03T04:10:41.684590Z","shell.execute_reply.started":"2024-08-03T04:10:41.676596Z","shell.execute_reply":"2024-08-03T04:10:41.683335Z"},"trusted":true},"execution_count":12,"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"((6851,), (6851,), (762,), (762,))"},"metadata":{}}]},{"cell_type":"code","source":"len(X_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:41.685980Z","iopub.execute_input":"2024-08-03T04:10:41.686404Z","iopub.status.idle":"2024-08-03T04:10:41.700409Z","shell.execute_reply.started":"2024-08-03T04:10:41.686366Z","shell.execute_reply":"2024-08-03T04:10:41.699019Z"},"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"6851"},"metadata":{}}]},{"cell_type":"markdown","source":"# **Converting text into numbers**","metadata":{}},{"cell_type":"code","source":"from tensorflow.keras.layers import TextVectorization\n\nvectorizer = TextVectorization(max_tokens=1000,standardize='lower_and_strip_punctuation', split='whitespace',ngrams=None,\n                               output_mode='int', output_sequence_length=None,pad_to_max_tokens=True,\n    encoding='utf-8')\n                    ","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:41.701811Z","iopub.execute_input":"2024-08-03T04:10:41.702150Z","iopub.status.idle":"2024-08-03T04:10:56.134958Z","shell.execute_reply.started":"2024-08-03T04:10:41.702122Z","shell.execute_reply":"2024-08-03T04:10:56.133927Z"},"trusted":true},"execution_count":14,"outputs":[{"name":"stderr","text":"2024-08-03 04:10:43.972840: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-08-03 04:10:43.972972: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-08-03 04:10:44.142269: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"}]},{"cell_type":"code","source":"len(X_train[1].split())\n","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.136374Z","iopub.execute_input":"2024-08-03T04:10:56.137174Z","iopub.status.idle":"2024-08-03T04:10:56.144799Z","shell.execute_reply.started":"2024-08-03T04:10:56.137134Z","shell.execute_reply":"2024-08-03T04:10:56.143770Z"},"trusted":true},"execution_count":15,"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"6"},"metadata":{}}]},{"cell_type":"code","source":"len(X_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.146118Z","iopub.execute_input":"2024-08-03T04:10:56.146821Z","iopub.status.idle":"2024-08-03T04:10:56.177362Z","shell.execute_reply.started":"2024-08-03T04:10:56.146786Z","shell.execute_reply":"2024-08-03T04:10:56.176048Z"},"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"6851"},"metadata":{}}]},{"cell_type":"code","source":"c=0\nfor i in range (len(X_train)):\n    c = c+ len(X_train[i].split())","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.178861Z","iopub.execute_input":"2024-08-03T04:10:56.179255Z","iopub.status.idle":"2024-08-03T04:10:56.198637Z","shell.execute_reply.started":"2024-08-03T04:10:56.179223Z","shell.execute_reply":"2024-08-03T04:10:56.197222Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"code","source":"c/len(X_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.200216Z","iopub.execute_input":"2024-08-03T04:10:56.200596Z","iopub.status.idle":"2024-08-03T04:10:56.213961Z","shell.execute_reply.started":"2024-08-03T04:10:56.200564Z","shell.execute_reply":"2024-08-03T04:10:56.212807Z"},"trusted":true},"execution_count":18,"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"14.901036345059115"},"metadata":{}}]},{"cell_type":"code","source":"\nvectorizer = TextVectorization(output_sequence_length = 15,max_tokens=10000, output_mode = 'int')\n    ","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.215653Z","iopub.execute_input":"2024-08-03T04:10:56.216374Z","iopub.status.idle":"2024-08-03T04:10:56.233328Z","shell.execute_reply.started":"2024-08-03T04:10:56.216332Z","shell.execute_reply":"2024-08-03T04:10:56.231666Z"},"trusted":true},"execution_count":19,"outputs":[]},{"cell_type":"code","source":"vectorizer.adapt(X_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.234991Z","iopub.execute_input":"2024-08-03T04:10:56.235594Z","iopub.status.idle":"2024-08-03T04:10:56.401080Z","shell.execute_reply.started":"2024-08-03T04:10:56.235547Z","shell.execute_reply":"2024-08-03T04:10:56.399565Z"},"trusted":true},"execution_count":20,"outputs":[]},{"cell_type":"code","source":"# Create sample sentence and tokenize it\nsample_sentence = \"There's a flood in my street!\"\nvectorizer([sample_sentence])","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.403168Z","iopub.execute_input":"2024-08-03T04:10:56.403562Z","iopub.status.idle":"2024-08-03T04:10:56.439516Z","shell.execute_reply.started":"2024-08-03T04:10:56.403528Z","shell.execute_reply":"2024-08-03T04:10:56.438203Z"},"trusted":true},"execution_count":21,"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"<tf.Tensor: shape=(1, 15), dtype=int64, numpy=\narray([[264,   3, 232,   4,  13, 698,   0,   0,   0,   0,   0,   0,   0,\n          0,   0]])>"},"metadata":{}}]},{"cell_type":"code","source":"words = vectorizer.get_vocabulary()","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.440860Z","iopub.execute_input":"2024-08-03T04:10:56.441211Z","iopub.status.idle":"2024-08-03T04:10:56.481701Z","shell.execute_reply.started":"2024-08-03T04:10:56.441179Z","shell.execute_reply":"2024-08-03T04:10:56.480502Z"},"trusted":true},"execution_count":22,"outputs":[]},{"cell_type":"code","source":"len(words), words[:5], words[-5:]","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.482983Z","iopub.execute_input":"2024-08-03T04:10:56.483340Z","iopub.status.idle":"2024-08-03T04:10:56.491087Z","shell.execute_reply.started":"2024-08-03T04:10:56.483303Z","shell.execute_reply":"2024-08-03T04:10:56.489819Z"},"trusted":true},"execution_count":23,"outputs":[{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"(10000,\n ['', '[UNK]', 'the', 'a', 'in'],\n ['pages', 'paeds', 'pads', 'padres', 'paddytomlinson1'])"},"metadata":{}}]},{"cell_type":"markdown","source":"# **Create Embeddings using embedding layer**","metadata":{}},{"cell_type":"code","source":"model0.score(X_test,y_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.492665Z","iopub.execute_input":"2024-08-03T04:10:56.493111Z","iopub.status.idle":"2024-08-03T04:10:56.835374Z","shell.execute_reply.started":"2024-08-03T04:10:56.493070Z","shell.execute_reply":"2024-08-03T04:10:56.831333Z"},"trusted":true},"execution_count":24,"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Cell \u001b[0;32mIn[24], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[43mmodel0\u001b[49m\u001b[38;5;241m.\u001b[39mscore(X_test,y_test)\n","\u001b[0;31mNameError\u001b[0m: name 'model0' is not defined"],"ename":"NameError","evalue":"name 'model0' is not defined","output_type":"error"}]},{"cell_type":"code","source":"from tensorflow.keras import layers\nmax_len = 10000","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.836342Z","iopub.status.idle":"2024-08-03T04:10:56.836770Z","shell.execute_reply.started":"2024-08-03T04:10:56.836579Z","shell.execute_reply":"2024-08-03T04:10:56.836595Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"embeddings = layers.Embedding(input_dim = max_len, output_dim =128,  embeddings_initializer='uniform' )","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.838913Z","iopub.status.idle":"2024-08-03T04:10:56.839419Z","shell.execute_reply.started":"2024-08-03T04:10:56.839208Z","shell.execute_reply":"2024-08-03T04:10:56.839228Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"embeddings(vectorizer('this is money'))","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.841053Z","iopub.status.idle":"2024-08-03T04:10:56.841493Z","shell.execute_reply.started":"2024-08-03T04:10:56.841280Z","shell.execute_reply":"2024-08-03T04:10:56.841297Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# **Model 1 using Naive bayes **","metadata":{}},{"cell_type":"code","source":"from sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.pipeline import Pipeline\n\nmodel0 = Pipeline(\n[\n    ('tfidf', TfidfVectorizer()),\n    ('clf', MultinomialNB())\n])","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.843057Z","iopub.status.idle":"2024-08-03T04:10:56.843447Z","shell.execute_reply.started":"2024-08-03T04:10:56.843260Z","shell.execute_reply":"2024-08-03T04:10:56.843284Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_train","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.844549Z","iopub.status.idle":"2024-08-03T04:10:56.844913Z","shell.execute_reply.started":"2024-08-03T04:10:56.844743Z","shell.execute_reply":"2024-08-03T04:10:56.844758Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model0.fit(X_train,y_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.846099Z","iopub.status.idle":"2024-08-03T04:10:56.846515Z","shell.execute_reply.started":"2024-08-03T04:10:56.846301Z","shell.execute_reply":"2024-08-03T04:10:56.846319Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_pred = model0.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.848056Z","iopub.status.idle":"2024-08-03T04:10:56.848442Z","shell.execute_reply.started":"2024-08-03T04:10:56.848259Z","shell.execute_reply":"2024-08-03T04:10:56.848276Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.metrics import accuracy_score, classification_report\ndef metrics (y_test, y_pred):\n    acc = accuracy_score(y_test,y_pred)\n    report = classification_report(y_test,y_pred, output_dict = True)\n    disaster = report['0']\n    safe = report['1']\n    print(f\"The details of disaster prediction is \\n {disaster} \\n\")\n    \n    print(f\"The details of disaster prediction is \\n {safe} \\n\") \n    print(f\"The final accuray is \\n {acc}\")\n    ","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.849397Z","iopub.status.idle":"2024-08-03T04:10:56.849809Z","shell.execute_reply.started":"2024-08-03T04:10:56.849612Z","shell.execute_reply":"2024-08-03T04:10:56.849629Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":" metrics(y_test,y_pred)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.851159Z","iopub.status.idle":"2024-08-03T04:10:56.851538Z","shell.execute_reply.started":"2024-08-03T04:10:56.851340Z","shell.execute_reply":"2024-08-03T04:10:56.851356Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# **Deep learning model**","metadata":{}},{"cell_type":"code","source":"from helper_functions import create_tensorboard_callback\n\nSave_dir = \"model_logs\"","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.852604Z","iopub.status.idle":"2024-08-03T04:10:56.852969Z","shell.execute_reply.started":"2024-08-03T04:10:56.852794Z","shell.execute_reply":"2024-08-03T04:10:56.852809Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X_train.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.854613Z","iopub.status.idle":"2024-08-03T04:10:56.854978Z","shell.execute_reply.started":"2024-08-03T04:10:56.854801Z","shell.execute_reply":"2024-08-03T04:10:56.854817Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import tensorflow as tf","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.856015Z","iopub.status.idle":"2024-08-03T04:10:56.856388Z","shell.execute_reply.started":"2024-08-03T04:10:56.856202Z","shell.execute_reply":"2024-08-03T04:10:56.856218Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":" from tensorflow.keras import layers\n\ninputs = layers.Input(shape =(1,), dtype = tf.string)\n\nx = embeddings(vectorizer(inputs))\nx = layers.GlobalAveragePooling1D()(x)  \n\noutputs = layers.Dense(1,activation = 'sigmoid')(x)\n\nmodel1 = tf.keras.Model(inputs,outputs)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.857905Z","iopub.status.idle":"2024-08-03T04:10:56.858256Z","shell.execute_reply.started":"2024-08-03T04:10:56.858084Z","shell.execute_reply":"2024-08-03T04:10:56.858100Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model1.compile(loss = 'binary_crossentropy', optimizer = tf.keras.optimizers.Adam(), metrics = ['accuracy'])","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.859647Z","iopub.status.idle":"2024-08-03T04:10:56.859996Z","shell.execute_reply.started":"2024-08-03T04:10:56.859828Z","shell.execute_reply":"2024-08-03T04:10:56.859843Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model1.summary()","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.861388Z","iopub.status.idle":"2024-08-03T04:10:56.861773Z","shell.execute_reply.started":"2024-08-03T04:10:56.861597Z","shell.execute_reply":"2024-08-03T04:10:56.861614Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(\"X_train shape:\", X_train.shape)\nprint(\"y_train shape:\", y_train.shape)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.863428Z","iopub.status.idle":"2024-08-03T04:10:56.863822Z","shell.execute_reply.started":"2024-08-03T04:10:56.863644Z","shell.execute_reply":"2024-08-03T04:10:56.863660Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# y_train = y_train.reshape(-1, 1)\n# y_test = y_test.reshape(-1, 1)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.865655Z","iopub.status.idle":"2024-08-03T04:10:56.866160Z","shell.execute_reply.started":"2024-08-03T04:10:56.865901Z","shell.execute_reply":"2024-08-03T04:10:56.865923Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(\"X_train shape:\", X_train.shape)\nprint(\"y_train shape:\", y_train.shape)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.868533Z","iopub.status.idle":"2024-08-03T04:10:56.868943Z","shell.execute_reply.started":"2024-08-03T04:10:56.868752Z","shell.execute_reply":"2024-08-03T04:10:56.868771Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"history1 = model1.fit(x= X_train, y= y_train,\n                     batch_size = 32, epochs = 5, validation_data = (X_test,y_test))","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.870186Z","iopub.status.idle":"2024-08-03T04:10:56.870594Z","shell.execute_reply.started":"2024-08-03T04:10:56.870382Z","shell.execute_reply":"2024-08-03T04:10:56.870398Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model1_predict = model1.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.872379Z","iopub.status.idle":"2024-08-03T04:10:56.872776Z","shell.execute_reply.started":"2024-08-03T04:10:56.872591Z","shell.execute_reply":"2024-08-03T04:10:56.872606Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model1_predict[0]","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.874849Z","iopub.status.idle":"2024-08-03T04:10:56.875262Z","shell.execute_reply.started":"2024-08-03T04:10:56.875058Z","shell.execute_reply":"2024-08-03T04:10:56.875079Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"weights = model1.get_layer(\"embedding\").get_weights()[0]\nvocab = vectorizer.get_vocabulary()","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.876638Z","iopub.status.idle":"2024-08-03T04:10:56.877005Z","shell.execute_reply.started":"2024-08-03T04:10:56.876833Z","shell.execute_reply":"2024-08-03T04:10:56.876848Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import io\nimport os\nimport re\nimport shutil\nimport string\nimport tensorflow as tf\n\nfrom tensorflow.keras import Sequential\nfrom tensorflow.keras.layers import Dense, Embedding, GlobalAveragePooling1D\nfrom tensorflow.keras.layers import TextVectorization","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.878389Z","iopub.status.idle":"2024-08-03T04:10:56.878803Z","shell.execute_reply.started":"2024-08-03T04:10:56.878616Z","shell.execute_reply":"2024-08-03T04:10:56.878633Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"out_v = io.open('vectors.tsv', 'w', encoding='utf-8')\nout_m = io.open('metadata.tsv', 'w', encoding='utf-8')\n\nfor index, word in enumerate(vocab):\n  if index == 0:\n    continue  # skip 0, it's padding.\n  vec = weights[index]\n  out_v.write('\\t'.join([str(x) for x in vec]) + \"\\n\")\n  out_m.write(word + \"\\n\")\nout_v.close()\nout_m.close()","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.879835Z","iopub.status.idle":"2024-08-03T04:10:56.880229Z","shell.execute_reply.started":"2024-08-03T04:10:56.880036Z","shell.execute_reply":"2024-08-03T04:10:56.880061Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# **Recurrent Neural Networks**","metadata":{}},{"cell_type":"code","source":"max_len","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.881347Z","iopub.status.idle":"2024-08-03T04:10:56.881738Z","shell.execute_reply.started":"2024-08-03T04:10:56.881555Z","shell.execute_reply":"2024-08-03T04:10:56.881572Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model2_embedding = layers.Embedding(input_dim =max_len ,\n    output_dim = 128,\n    embeddings_initializer='uniform',\n    embeddings_regularizer=None,\n    embeddings_constraint=None,\n    mask_zero=False,\n    input_length = 15,\n    weights=None,\n    lora_rank=None,name = 'embedding2')\n                                   ","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.883161Z","iopub.status.idle":"2024-08-03T04:10:56.883565Z","shell.execute_reply.started":"2024-08-03T04:10:56.883346Z","shell.execute_reply":"2024-08-03T04:10:56.883360Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"inputs = layers.Input(shape = (1,), dtype = tf.string)\nx = vectorizer(inputs)\nx = model2_embedding(x)\nx = layers.LSTM(64)(x)\noutputs = layers.Dense(1, activation = 'sigmoid')(x)\n\nmodel2 = tf.keras.Model(inputs, outputs)\n","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.885232Z","iopub.status.idle":"2024-08-03T04:10:56.885706Z","shell.execute_reply.started":"2024-08-03T04:10:56.885479Z","shell.execute_reply":"2024-08-03T04:10:56.885500Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model2.summary()","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.886746Z","iopub.status.idle":"2024-08-03T04:10:56.887132Z","shell.execute_reply.started":"2024-08-03T04:10:56.886945Z","shell.execute_reply":"2024-08-03T04:10:56.886962Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model2.compile(loss = 'binary_crossentropy', optimizer = tf.optimizers.Adam(), metrics = ['accuracy'])","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.888541Z","iopub.status.idle":"2024-08-03T04:10:56.888924Z","shell.execute_reply.started":"2024-08-03T04:10:56.888741Z","shell.execute_reply":"2024-08-03T04:10:56.888758Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model2.fit(X_train,\n          y_train, \n    batch_size= 32,\n    epochs=5,\n    validation_data=(X_test,y_test)\n      )","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.890399Z","iopub.status.idle":"2024-08-03T04:10:56.890832Z","shell.execute_reply.started":"2024-08-03T04:10:56.890646Z","shell.execute_reply":"2024-08-03T04:10:56.890663Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model2_pred = model2.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.892640Z","iopub.status.idle":"2024-08-03T04:10:56.893042Z","shell.execute_reply.started":"2024-08-03T04:10:56.892856Z","shell.execute_reply":"2024-08-03T04:10:56.892874Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_train.shape,y_test.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.894360Z","iopub.status.idle":"2024-08-03T04:10:56.894786Z","shell.execute_reply.started":"2024-08-03T04:10:56.894596Z","shell.execute_reply":"2024-08-03T04:10:56.894612Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"acc = model2.evaluate(X_test,y_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.896612Z","iopub.status.idle":"2024-08-03T04:10:56.897001Z","shell.execute_reply.started":"2024-08-03T04:10:56.896814Z","shell.execute_reply":"2024-08-03T04:10:56.896829Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model2_pred.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.899221Z","iopub.status.idle":"2024-08-03T04:10:56.899774Z","shell.execute_reply.started":"2024-08-03T04:10:56.899486Z","shell.execute_reply":"2024-08-03T04:10:56.899509Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_test = tf.squeeze(y_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.901925Z","iopub.status.idle":"2024-08-03T04:10:56.902417Z","shell.execute_reply.started":"2024-08-03T04:10:56.902174Z","shell.execute_reply":"2024-08-03T04:10:56.902192Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_test.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.904601Z","iopub.status.idle":"2024-08-03T04:10:56.905172Z","shell.execute_reply.started":"2024-08-03T04:10:56.904891Z","shell.execute_reply":"2024-08-03T04:10:56.904916Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"metrics(y_test, model2_pred)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.906668Z","iopub.status.idle":"2024-08-03T04:10:56.907214Z","shell.execute_reply.started":"2024-08-03T04:10:56.906937Z","shell.execute_reply":"2024-08-03T04:10:56.906960Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_test","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.908981Z","iopub.status.idle":"2024-08-03T04:10:56.909562Z","shell.execute_reply.started":"2024-08-03T04:10:56.909257Z","shell.execute_reply":"2024-08-03T04:10:56.909281Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_test = y_test.numpy(\ny_test = y_test.reshape(762,1)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.910878Z","iopub.status.idle":"2024-08-03T04:10:56.911429Z","shell.execute_reply.started":"2024-08-03T04:10:56.911142Z","shell.execute_reply":"2024-08-03T04:10:56.911166Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_train.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.912594Z","iopub.status.idle":"2024-08-03T04:10:56.913138Z","shell.execute_reply.started":"2024-08-03T04:10:56.912851Z","shell.execute_reply":"2024-08-03T04:10:56.912873Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model2.evaluate(X_test,y_test.numpy())","metadata":{"execution":{"iopub.status.busy":"2024-08-03T04:10:56.914310Z","iopub.status.idle":"2024-08-03T04:10:56.914859Z","shell.execute_reply.started":"2024-08-03T04:10:56.914589Z","shell.execute_reply":"2024-08-03T04:10:56.914612Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}